repo,type,id,created_at,user,comment,modified_comment,Anger,Love,Fear,Joy,Sadness,Surprise,Emotion 2,Emotion 3,Comment,Polite,Impolite
angular/angular,pull_request,721380347,2021-10-04 13:45:55,gkalpak,"Sorry, I am not following 😅
I am sure there async implementation, but what difference does it make? 🤔","Sorry, I am not following 😅
I am sure there async implementation, but what difference does it make? 🤔",0,0,0,0,0,0,None,,,,
webpack/webpack,pull_request,91411117,2016-12-07 23:22:26,sokra,Why removing this new line?,Why removing this new line?,0,0,0,0,0,0,None,,,,
webpack/webpack,pull_request,178075450,2018-03-29 14:33:29,xtuc,"What do you mean?

That's a more explicit check otherwise the engine has to run the `ToBoolean` coercion.","What do you mean?

That's a more explicit check otherwise the engine has to run the `ToBoolean` coercion.",0,0,0,0,0,0,None,,,,
angular/angular,pull_request,628430282,2021-05-07 18:41:16,petebacondarwin,"I wondered about that, which is why I have put this in the info box rather than updating the original instruction.
It is possible that we could parse out the current major version of the docs and generate something like:

```
npm install -g @angular/cli@10
```

Alternatively we could just add a bit more text that says something like, ""or the appropriate version if not latest.""

WDYT?","I wondered about that, which is why I have put this in the info box rather than updating the original instruction. It is possible that we could parse out the current major version of the docs and generate something like: 

[TRIPLE QUOTE]. 

Alternatively we could just add a bit more text that says something like, ""or the appropriate version if not latest."" 

WDYT?",0,0,0,0,0,0,None,-,,,
webpack/webpack,pull_request,89100022,2016-11-22 11:56:04,Jessidhia,"This is not bound, so calling it will push into `undefined` or `global` (whichever is inappropriate 😄).

It also doesn't actually notify the parent that something changed.","This is not bound, so calling it will push into `undefined` or `global` (whichever is inappropriate 😄).

It also doesn't actually notify the parent that something changed.",0,0,0,0,0,0,None,,,,
webpack/webpack,pull_request,89540995,2016-11-24 19:30:35,bebraw,Same here. Would it be better to defer to the docs to slim this down? Easier to maintain again.,Same here. Would it be better to defer to the docs to slim this down? Easier to maintain again.,0,0,0,0,0,0,None,,general question → neutral,,
webpack/webpack,pull_request,94244130,2016-12-30 17:28:11,TheLarkInn,So this is because The file doesn't exist. This was also a lint error.,So this is because The file doesn't exist. This was also a lint error.,0,0,0,0,0,0,None,,explaination → neutral,,
webpack/webpack,pull_request,94530810,2017-01-04 5:20:11,TheLarkInn,">happy to change all, not sure what the most adequate approach to template string would be? only use if a variable is between two strings? always? only if string literals are involved?

To me I'd say just use when you actually are performing any type of interpolation. That way its a clear signal.","[BLOCK QUOTE]. 

To me I'd say just use when you actually are performing any type of interpolation. That way its a clear signal.",0,0,0,0,0,0,None,-,None,,
webpack/webpack,pull_request,95077008,2017-01-08 11:42:40,sokra,could you name these anonymous function? It better for stacktraces and profiling...,could you name these anonymous function? It better for stacktraces and profiling...,0,0,0,0,0,0,None,,general question → neutral,,
webpack/webpack,pull_request,98040317,2017-01-26 17:02:32,TheLarkInn,"I think for starters you could just validate that an error occurs, rather the exact error message.","I think for starters you could just validate that an error occurs, rather the exact error message.",0,0,0,0,0,0,None,,suggestion → neutral,,
webpack/webpack,pull_request,103465306,2017-02-28 14:35:49,sendilkumarn,"not possible, this is just a string. This is the whole point of bringing in single quotes.","not possible, this is just a string. This is the whole point of bringing in single quotes.",0,0,0,0,0,0,None,,None,,
webpack/webpack,pull_request,144482513,2017-10-13 7:30:40,sokra,This neither should make a difference.,This neither should make a difference.,0,0,0,0,0,0,None,-,None,,
webpack/webpack,pull_request,177125324,2018-03-26 15:07:00,ooflorent,Masks were wrong,Masks were wrong,0,0,0,0,0,0,None,,None,,
webpack/webpack,pull_request,177690515,2018-03-28 9:30:50,Jessidhia,"These same permutations also apply to `class` declarations, but we probably don't need to test them here 🤔","These same permutations also apply to `class` declarations, but we probably don't need to test them here 🤔",0,0,0,0,0,0,None,,thought → neutral,,
webpack/webpack,pull_request,187585644,2018-05-11 11:11:09,sokra,I take the risk for now...,I take the risk for now...,0,0,0,0,0,0,None,,neutral,,
webpack/webpack,pull_request,197067655,2018-06-21 9:27:44,sokra,hmm yes the guide was wrong `@returns {void}` can't be omitted. Omitting it would mean `@returns {any}`.,hmm yes the guide was wrong `@returns {void}` can't be omitted. Omitting it would mean `@returns {any}`.,0,0,0,0,0,0,None,,neutral,,
webpack/webpack,pull_request,202972871,2018-07-17 10:35:28,montogeek,Please follow code format: Add space before and after the equal.,Please follow code format: Add space before and after the equal.,0,0,0,0,0,0,None,,,,
webpack/webpack,pull_request,229201743,2018-10-30 7:45:21,sokra,"You no longer need this argument, as `param` now contains this information.","You no longer need this argument, as `param` now contains this information.",0,0,0,0,0,0,None,,neutral,,
webpack/webpack,pull_request,229203290,2018-10-30 7:52:14,sokra,"To avoid a breaking change, make this argument optional. In this case expressions are not walked.","To avoid a breaking change, make this argument optional. In this case expressions are not walked.",0,0,0,0,0,0,None,,neutral,,
webpack/webpack,pull_request,290027999,2019-06-03 20:39:35,sokra,"```suggestion
}, 1000);
```

Give it a bit more time. I hardly assume the fs watcher will grab the change that fast.","[TRIPLE QUOTE].

Give it a bit more time. I hardly assume the fs watcher will grab the change that fast.",0,0,0,0,0,0,None,,neutral,,
webpack/webpack,pull_request,450379266,2020-07-06 17:38:29,sokra,That doesn't work because it's in a closure and called later. walkMemberExpressionWithExpressionName modifies members that why we need a copy.,That doesn't work because it's in a closure and called later. walkMemberExpressionWithExpressionName modifies members that why we need a copy.,0,0,0,0,0,0,None,,None,,
Microsoft/TypeScript,pull_request,483232179,2020-09-03 20:20:41,sandersn,"This change means you can't merge another declaration of RelativeTimeFormat to type expando assignments to it. The current version already forbids calls with the error ""Value of type { new .... } isn't callable. Did you mean to include 'new'?"". We should stay with the old interface+const.","This change means you can't merge another declaration of RelativeTimeFormat to type expando assignments to it. The current version already forbids calls with the error ""Value of type { new .... } isn't callable. Did you mean to include 'new'?"". We should stay with the old interface+const.",0,0,0,0,0,0,None,,,,
Microsoft/TypeScript,pull_request,486716317,2020-09-11 1:12:02,rbuckton,"Actually, scratch that. Its feasible to do. The implementation that supports unicode escapes depends on using a regular expression, so is costlier. I have a version I can push that actually tracks on the source file whether it contains identifiers with unicode escapes, and if it doesn't then it can use the existing `indexOf` logic, which should be faster:
![image](https://user-images.githubusercontent.com/3902892/92836133-ec171f80-f390-11ea-8ada-935d4f99aee1.png)
I might wait on that until after this PR, however, as I'd need to also add fourslash tests for find-all-references which could be time consuming and could possibly wait until after 4.1-beta.","Actually, scratch that. Its feasible to do. The implementation that supports unicode escapes depends on using a regular expression, so is costlier. I have a version I can push that actually tracks on the source file whether it contains identifiers with unicode escapes, and if it doesn't then it can use the existing `indexOf` logic, which should be faster:
![image]([URL]
I might wait on that until after this PR, however, as I'd need to also add fourslash tests for find-all-references which could be time consuming and could possibly wait until after 4.1-beta.",0,0,0,0,0,0,None,,neutral,,
Microsoft/TypeScript,pull_request,488158524,2020-09-14 19:07:17,sandersn,"Per our discussion, I switched this to None for the beta. It turns out that the checker already issues an error in this case, but we can add an exclusion for `undefined`-as-initialiser later.","Per our discussion, I switched this to None for the beta. It turns out that the checker already issues an error in this case, but we can add an exclusion for `undefined`-as-initialiser later.",0,0,0,0,0,0,None,,neutral,,
Microsoft/TypeScript,pull_request,508084569,2020-10-19 21:52:59,weswigham,"Yep! The JS output is different for each! In `react` `createElement` is used, with arrays or singleton children. In `react-jsx`, the `jsx` and `jsxs` ctors are toggled between based on if the child is detected as singleton or not (in addition to array/no array in the actual argument). In `react-jsxdev`, the `isStatic` parameter passed to the ctor is changed based on weather a singleton child is detected or not. So there's meaningful output to check for all 3!","Yep! The JS output is different for each! In `react` `createElement` is used, with arrays or singleton children. In `react-jsx`, the `jsx` and `jsxs` ctors are toggled between based on if the child is detected as singleton or not (in addition to array/no array in the actual argument). In `react-jsxdev`, the `isStatic` parameter passed to the ctor is changed based on weather a singleton child is detected or not. So there's meaningful output to check for all 3!",0,0,0,0,0,0,None,,None,,
Microsoft/TypeScript,pull_request,521664294,2020-11-11 22:00:21,elibarzilay,"Really picky, so feel free to ignore: I think that a dash makes more sense between the two... (Makes it easier for mass processing of dump files, whenever that's needed.)","Really picky, so feel free to ignore: I think that a dash makes more sense between the two... (Makes it easier for mass processing of dump files, whenever that's needed.)",0,0,0,0,0,0,None,,None,,
Microsoft/TypeScript,pull_request,522589114,2020-11-13 3:21:15,molisani,"As far as I can tell, this was actually a red herring because the project's `CompilerOptions` (most importantly `configFile`) have not been calculated at this point. Not sure if there are other comments like this that should be removed with this PR. 😄","As far as I can tell, this was actually a red herring because the project's `CompilerOptions` (most importantly `configFile`) have not been calculated at this point. Not sure if there are other comments like this that should be removed with this PR. 😄",0,0,0,0,0,0,None,,,,
Microsoft/TypeScript,pull_request,557718620,2021-01-14 21:45:43,amcasey,You might want to drop the type annotation for consistency.,You might want to drop the type annotation for consistency.,0,0,0,0,0,0,None,,suggestion → neutral,,
Microsoft/TypeScript,pull_request,600881122,2021-03-24 21:18:57,mkubilayk,"I think this might be the right thing to do but it doesn't solve the duplicated comments that come from the `receiver`. You can see the changes to fixtures here: https://github.com/bloomberg/TypeScript/pull/65/files.
Also just want to confirm, we call `setOriginalNode` for the helper expressions with the original property access/assignment. Do we still need to call `setCommentRange`?","I think this might be the right thing to do but it doesn't solve the duplicated comments that come from the `receiver`. You can see the changes to fixtures here: [URL]
Also just want to confirm, we call `setOriginalNode` for the helper expressions with the original property access/assignment. Do we still need to call `setCommentRange`?",0,0,0,0,0,0,None,,None,,
Microsoft/TypeScript,pull_request,602584809,2021-03-26 21:03:36,RyanCavanaugh,"Some sort of comment (an overview of the algorithm / what it's trying to do, or the name of it if this is a well-known one?) seems justified here","Some sort of comment (an overview of the algorithm / what it's trying to do, or the name of it if this is a well-known one?) seems justified here",0,0,0,0,0,0,None,-,None,,
angular/angular,pull_request,609701561,2021-04-08 13:29:38,sod,One question i'd like to see answered here is: Does the linker consume both ... ivy partial & view engine code? Or do we have to keep ngcc'ing libs that didn't move to or we can't update to the ivy partial one?,One question i'd like to see answered here is: Does the linker consume both ... ivy partial & view engine code? Or do we have to keep ngcc'ing libs that didn't move to or we can't update to the ivy partial one?,0,0,0,0,0,0,None,-,None,,
Microsoft/TypeScript,pull_request,610737087,2021-04-09 15:55:34,sandersn,"This is the code I copied. While here, I deleted the first comment line because it restates the code itself, and reworded the second comment line because I couldn't figure out what it meant until I read the comments on the original PR.","This is the code I copied. While here, I deleted the first comment line because it restates the code itself, and reworded the second comment line because I couldn't figure out what it meant until I read the comments on the original PR.",0,0,0,0,0,0,None,,,,
Microsoft/TypeScript,pull_request,611991969,2021-04-12 22:21:41,ahejlsberg,"It depends. Most of the time we just remove a single key, but in some degenerate cases (like the original issue) we end up removing a lot of keys at once. But it only happens a single time, so probably not worth optimizing beyond what's here now.","It depends. Most of the time we just remove a single key, but in some degenerate cases (like the original issue) we end up removing a lot of keys at once. But it only happens a single time, so probably not worth optimizing beyond what's here now.",0,0,0,0,0,0,None,,None,,
Microsoft/TypeScript,pull_request,617695218,2021-04-21 16:16:45,andrewbranch,"We’ll have to revisit my comment about newlines after this issue is fixed—you’re right that the behavior is currently unchanged, but I think it’s because of this issue.","We’ll have to revisit my comment about newlines after this issue is fixed—you’re right that the behavior is currently unchanged, but I think it’s because of this issue.",0,0,0,0,0,0,None,,None,,
angular/angular,pull_request,622073240,2021-04-28 11:12:13,gkalpak,I think it would be helpful to mention that one can still build a library with View Engine and link to some place (where?) that contains info on how to do it?,I think it would be helpful to mention that one can still build a library with View Engine and link to some place (where?) that contains info on how to do it?,0,0,0,0,0,0,None,,opinion → neutral,,
angular/angular,pull_request,622203052,2021-04-28 13:54:12,kapunahelewong,"Here, the word tooling is a noun, so it's what uses Webpack.","Here, the word tooling is a noun, so it's what uses Webpack.",0,0,0,0,0,0,None,,None,,
angular/angular,pull_request,630371232,2021-05-11 17:11:40,crisbeto,"As far as I could tell, it wasn't being used.","As far as I could tell, it wasn't being used.",0,0,0,0,0,0,None,,,,
Microsoft/TypeScript,pull_request,635548708,2021-05-19 20:06:39,amcasey,"I could go either way on this replacement. Among paths that require updates, this is commonly enough (1/3 if I had to ballpark it), but the number is dwarfed by the number that require no changes at all (in which case this is a wasted string traversal). I measured it both ways and the difference was less than the margin of error.","I could go either way on this replacement. Among paths that require updates, this is commonly enough (1/3 if I had to ballpark it), but the number is dwarfed by the number that require no changes at all (in which case this is a wasted string traversal). I measured it both ways and the difference was less than the margin of error.",0,0,0,0,0,0,None,,,,
angular/angular,pull_request,636227586,2021-05-20 15:44:22,devversion,"That's reasonable. How about still adding a comment mentioning this? I think we want to clarify in the code why we handle the `v` prefix here, if the release tool never generates such tags.","That's reasonable. How about still adding a comment mentioning this? I think we want to clarify in the code why we handle the `v` prefix here, if the release tool never generates such tags.",0,0,0,0,0,0,None,,,,
angular/angular,pull_request,636268831,2021-05-20 16:33:21,dylhunn,"I have done this in most spots, except where the other classes were part of a pre-existing check.","I have done this in most spots, except where the other classes were part of a pre-existing check.",0,0,0,0,0,0,None,,None,,
flutter/flutter,pull_request,643492324,2021-06-01 21:31:03,dnfield,"I've changed this wording because it's no longer relevant to this patch. This patch doesn't add anything for disposing of layers, that will be coming in a separate patch.

To start to answer these questions though - if a repaint boundary disposes its layer, it means that repaint boundary is going way and won't be drawn again without getting completely recreated/repainted. And so if it has any child repaint boundaries that have not been moved to some active part of the tree, they will not get drawn again either unless recreated/repainted.","I've changed this wording because it's no longer relevant to this patch. This patch doesn't add anything for disposing of layers, that will be coming in a separate patch.

To start to answer these questions though - if a repaint boundary disposes its layer, it means that repaint boundary is going way and won't be drawn again without getting completely recreated/repainted. And so if it has any child repaint boundaries that have not been moved to some active part of the tree, they will not get drawn again either unless recreated/repainted.",0,0,0,0,0,0,None,-,None,,
flutter/flutter,pull_request,645709185,2021-06-04 16:38:08,chunhtai,is this method used?,is this method used?,0,0,0,0,0,0,None,,None,,
Microsoft/TypeScript,pull_request,646153713,2021-06-06 16:10:15,Kingwl,"I thought the `unknown` is better:

If we add type parameter `TMessage ` into `editorService`, We should also add the type parameter into `Project` and etc. Too many changes.

And we are not really care about the type of message in `editorService`. We just forward session into pluin.

And the `handlers` or `addProtocolHandler` does not have `TMessage ` too. Thay are raw string.","I thought the `unknown` is better:

If we add type parameter `TMessage ` into `editorService`, We should also add the type parameter into `Project` and etc. Too many changes.

And we are not really care about the type of message in `editorService`. We just forward session into pluin.

And the `handlers` or `addProtocolHandler` does not have `TMessage ` too. Thay are raw string.",0,0,0,0,0,0,None,-,None,,
angular/angular,pull_request,646869569,2021-06-07 19:10:56,atscott,Nothing. There was no text displayed before.,Nothing. There was no text displayed before.,0,0,0,0,0,0,None,,,,
Microsoft/TypeScript,pull_request,647459518,2021-06-08 13:48:24,sandersn,"there's probably a platform-independent package on npm that does recursive file string search, although feature-detecting grep vs findstr would work too.","there's probably a platform-independent package on npm that does recursive file string search, although feature-detecting grep vs findstr would work too.",0,0,0,0,0,0,None,,None,,
flutter/flutter,pull_request,648600427,2021-06-09 19:07:32,Piinks,"I think there is a typo here.

```suggestion
/// This mixin does nothing by mere application of it to a [State] class, but is
```","I think there is a typo here.

[TRIPLE QUOTE].",0,0,0,0,0,0,None,,,,
flutter/flutter,pull_request,648718343,2021-06-09 22:10:32,jmagman,"I see, you want it lazily instantiated, but it's nullable.","I see, you want it lazily instantiated, but it's nullable.",0,0,0,0,0,0,None,,,,
flutter/flutter,pull_request,650324271,2021-06-12 0:59:34,dkwingsmt,I slightly prefer the current way since they're describing 2 different things and splitting them is clearer.,I slightly prefer the current way since they're describing 2 different things and splitting them is clearer.,0,0,0,0,0,0,None,,None,,
angular/angular,pull_request,651825748,2021-06-15 14:05:02,petebacondarwin,I have added a commit that ensures this breaking change does not happen.,I have added a commit that ensures this breaking change does not happen.,0,0,0,0,0,0,None,,,,
flutter/flutter,pull_request,654063677,2021-06-18 0:22:56,HansMuller,"This would be a good place to explain that the current default text styles are based on the 2018 version of the Material spec and that there's an older set of text styles from the 2014 spec, that are still available for the sake of backwards compatibility [please phrase this point more clearly].","This would be a good place to explain that the current default text styles are based on the 2018 version of the Material spec and that there's an older set of text styles from the 2014 spec, that are still available for the sake of backwards compatibility [please phrase this point more clearly].",0,0,0,0,0,0,None,-,None,,
flutter/flutter,pull_request,660057651,2021-06-28 19:27:09,mghalayini,"I see. I've made the changes btw, would you like to modify anything else?","I see. I've made the changes btw, would you like to modify anything else?",0,0,0,0,0,0,None,,general question → neutral,1,
flutter/flutter,pull_request,661807584,2021-06-30 21:00:04,flar,@Hixie are the new mechanisms sufficient to test your concerns?,[USER] are the new mechanisms sufficient to test your concerns?,0,0,0,0,0,0,None,,None,,
flutter/flutter,pull_request,663161588,2021-07-02 17:34:13,michaellee8,@zanderso That was the problem. I had ro choose between no closing app snd force close by restart.,[USER] That was the problem. I had ro choose between no closing app snd force close by restart.,0,0,0,0,0,0,None,,,,
flutter/flutter,pull_request,665753762,2021-07-07 22:47:33,darrenaustin,I stole it from @jmagman's review of another null safety migration.,I stole it from [USER] review of another null safety migration.,0,0,0,0,0,0,None,,,,
flutter/flutter,pull_request,666639103,2021-07-09 3:01:08,matanshukry,"why not?
The reason to use it is not because it's used in multiple places, if that is what you mean;

The reason is so that the user may have access to the default value rather than have his own const based on const, and have to worry about the flutter team possibly changing it in the future making his constant deprecated.

imo that should be the behavior for all default values.","why not? The reason to use it is not because it's used in multiple places, if that is what you mean; The reason is so that the user may have access to the default value rather than have his own const based on const, and have to worry about the flutter team possibly changing it in the future making his constant deprecated. imo that should be the behavior for all default values.",0,0,0,0,0,0,None,-,None,1,
flutter/flutter,pull_request,668292314,2021-07-12 22:15:02,dnfield,"Is this not the case on web?

We should probably explain why this is the case here.","Is this not the case on web?

We should probably explain why this is the case here.",0,0,0,0,0,0,None,,None,,
flutter/flutter,pull_request,670172856,2021-07-15 6:32:28,LongCatIsLooong,iirc @goderbauer added the reveal caret logic. I think at some point I tried to account for phone rotation (portrait -> landscape) but didn't end up doing it for reasons I don't remember.,iirc [USER] added the reveal caret logic. I think at some point I tried to account for phone rotation (portrait -> landscape) but didn't end up doing it for reasons I don't remember.,0,0,0,0,0,0,None,-,None,,
angular/angular,pull_request,671720713,2021-07-17 17:08:05,dario-piotrowicz,"The guide specifies that the elements enter from top to bottom but if the stagger value is negative they are inserted from bottom to top
[stackblitz example](https://stackblitz.com/edit/angular-anim-stagger-positive-vs-negative?file=src%2Fapp%2Fheroes%2Fheroes.component.ts)","The guide specifies that the elements enter from top to bottom but if the stagger value is negative they are inserted from bottom to top
[stackblitz example]([URL]",0,0,0,0,0,0,None,,None,,
angular/angular,pull_request,671823789,2021-07-18 10:59:02,JoostK,FYI the merge window for v13 is expected to open in about 3 weeks.,FYI the merge window for v13 is expected to open in about 3 weeks.,0,0,0,0,0,0,None,,,,
flutter/flutter,pull_request,672800194,2021-07-20 4:40:24,jiahaog,Is this import needed? It doesn't look like this is used in this file,Is this import needed? It doesn't look like this is used in this file,0,0,0,0,0,0,None,,None,,
flutter/flutter,pull_request,673358149,2021-07-20 17:55:13,chunhtai,"is this for message/debug only? if so, maybe name it debugToolKit","is this for message/debug only? if so, maybe name it debugToolKit",0,0,0,0,0,0,None,,None,,
angular/angular,pull_request,675549714,2021-07-23 13:06:30,petebacondarwin,"So as far as I can see, this function is only here as a reminder of what the generated code (in `generatorTest1()`) is supposed to represent, yes? Is it actually needed?","So as far as I can see, this function is only here as a reminder of what the generated code (in `generatorTest1()`) is supposed to represent, yes? Is it actually needed?",0,0,0,0,0,0,None,,None,,
angular/angular,pull_request,678000128,2021-07-28 6:08:49,devversion,"I was thinking it's just an option for a minor to move directly into RC, but it should be still possible to go into feature freeze.
or do you think we should not permit feature freeze for minors at all?","I was thinking it's just an option for a minor to move directly into RC, but it should be still possible to go into feature freeze.
or do you think we should not permit feature freeze for minors at all?",0,0,0,0,0,0,None,,None,,
angular/angular,pull_request,680238700,2021-07-30 21:51:09,danieltre23,Talked offline and decided to generate a diagnostic for every output which is enclosed by brackets.,Talked offline and decided to generate a diagnostic for every output which is enclosed by brackets.,0,0,0,0,0,0,None,,,,
Microsoft/TypeScript,pull_request,680243841,2021-07-30 22:06:40,weswigham,"Both should work (they're just different config locations, both are essentially system-wide - one's just for your user, one is every user) - I guess it depends on how you have it installed as to weather you have rights for the system-wide one.","Both should work (they're just different config locations, both are essentially system-wide - one's just for your user, one is every user) - I guess it depends on how you have it installed as to weather you have rights for the system-wide one.",0,0,0,0,0,0,None,,,,
flutter/flutter,pull_request,680262520,2021-07-30 23:13:18,chunhtai,"If this doesn't make sense, we probably need a hook, something like didInitializeScrollMetrics","If this doesn't make sense, we probably need a hook, something like didInitializeScrollMetrics",0,0,0,0,0,0,None,-,None,,
angular/angular,pull_request,680511343,2021-08-01 13:25:06,gkalpak,"In the context of ServiceWorkers, it might be more appropriate to say ""get rid of"" or ""deactivate"" or ""unregister"".","In the context of ServiceWorkers, it might be more appropriate to say ""get rid of"" or ""deactivate"" or ""unregister"".",0,0,0,0,0,0,None,,,,
angular/angular,pull_request,681918655,2021-08-03 16:27:10,alxhub,"Theoretically, sure, but we explicitly state in our public API guarantee that [extending Angular classes is not supported unless explicitly documented](https://github.com/angular/angular/blame/master/docs/PUBLIC_API.md#L38).","Theoretically, sure, but we explicitly state in our public API guarantee that [extending Angular classes is not supported unless explicitly documented]([URL])",0,0,0,0,0,0,None,-,None,,
flutter/flutter,pull_request,683845128,2021-08-05 23:19:22,jmagman,I don't think there are any formatters (even dartfmt) running on flutter/flutter (plus I hate how clang formatter mangles Obj-C blocks). Let me shorten these up.,I don't think there are any formatters (even dartfmt) running on flutter/flutter (plus I hate how clang formatter mangles Obj-C blocks). Let me shorten these up.,0,0,0,0,0,0,None,,,,
flutter/flutter,pull_request,687913270,2021-08-12 16:42:47,chunhtai,I didn't notice userUpdateTextEditingValue is abstract method. yeah this should be fine.,I didn't notice userUpdateTextEditingValue is abstract method. yeah this should be fine.,0,0,0,0,0,0,None,,,,
angular/angular,pull_request,688167053,2021-08-13 0:26:12,dgp1130,Nit: I think we can also remove this dependency from the associated build file. It's good to do that to keep individual targets as small as possible where we can.,Nit: I think we can also remove this dependency from the associated build file. It's good to do that to keep individual targets as small as possible where we can.,0,0,0,0,0,0,None,,,,
flutter/flutter,pull_request,688659258,2021-08-13 17:04:51,justinmc,"I knew that was going to be confusing. I'll add some docs about it in both expandSelectionTo and extendSelectionTo.

Basically, ""extend"" moves the extentOffset while holding the baseOffset fixed, but ""expand"" grows the selection to include the given position. If you try cmd+shift+left/right on a Mac, that's expand, while option+shift+up/down is extend.","I knew that was going to be confusing. I'll add some docs about it in both expandSelectionTo and extendSelectionTo. Basically, ""extend"" moves the extentOffset while holding the baseOffset fixed, but ""expand"" grows the selection to include the given position. If you try cmd+shift+left/right on a Mac, that's expand, while option+shift+up/down is extend.",0,0,0,0,0,0,None,-,None,,
angular/angular,pull_request,689744876,2021-08-16 17:58:41,aikidave,Looks like a copy and paste error here.,Looks like a copy and paste error here.,0,0,0,0,0,0,None,,,,
flutter/flutter,pull_request,689900306,2021-08-16 22:26:21,CaseyHillers,"This is preferable as enabled_branches is straight forward, but if for some reason in the future we need more advanced logic it should rely directly on the backend.","This is preferable as enabled_branches is straight forward, but if for some reason in the future we need more advanced logic it should rely directly on the backend.",0,0,0,0,0,0,None,,None,,
flutter/flutter,pull_request,690612198,2021-08-17 18:16:00,jamesderlin,I've tweaked the wording to avoid this.,I've tweaked the wording to avoid this.,0,0,0,0,0,0,None,,None,,
flutter/flutter,pull_request,691686003,2021-08-19 0:11:42,fernandormoraes,"@chunhtai Sorry for the delay, i noticed that to do a test for a different locale i have to use GlobalMaterialLocalizations and GlobalWidgetLocalizations as delegates who are localized in flutter_localizations package and i don't have that package in flutter test, so i tried to add the test in flutter_localizations package, but i dont have the SemanticsTester class right there, should i move this class to flutter_localizations package tests or that would be a bad approach?","[USER] Sorry for the delay, i noticed that to do a test for a different locale i have to use GlobalMaterialLocalizations and GlobalWidgetLocalizations as delegates who are localized in flutter_localizations package and i don't have that package in flutter test, so i tried to add the test in flutter_localizations package, but i dont have the SemanticsTester class right there, should i move this class to flutter_localizations package tests or that would be a bad approach?",0,0,0,0,0,0,None,-,None,,
angular/angular,pull_request,692425492,2021-08-19 19:35:41,JoostK,TBH I haven't checked the extensiveness of all of these. The logic LGTM and any missing cases here are very unlikely to be hit.,TBH I haven't checked the extensiveness of all of these. The logic LGTM and any missing cases here are very unlikely to be hit.,0,0,0,0,0,0,None,,,,
Microsoft/TypeScript,pull_request,697027169,2021-08-26 22:48:31,andrewbranch,"If you’re sure you’ve written the `excludes` correctly, you can keep it. It’s just so easy to make mistakes with that.","If you’re sure you’ve written the `excludes` correctly, you can keep it. It’s just so easy to make mistakes with that.",0,0,0,0,0,0,None,,None,,
flutter/flutter,pull_request,697679220,2021-08-27 19:41:38,jmagman,"I may be missing it, but the only place I see this used is:
https://github.com/flutter/flutter/blob/80990c21e2c513951204fa2053d17a51c59e9784/packages/flutter_tools/test/general.shard/vmservice_test.dart#L232
https://github.com/flutter/flutter/blob/80990c21e2c513951204fa2053d17a51c59e9784/packages/flutter_tools/test/general.shard/vmservice_test.dart#L846-L852","I may be missing it, but the only place I see this used is:
[URL]
[URL]",0,0,0,0,0,0,None,,None,,
angular/angular,pull_request,698571620,2021-08-30 15:09:45,aikidave,"Hm. Are we missing a link? If so, let's add it! Can you tell me where the example is?","Hm. Are we missing a link? If so, let's add it! Can you tell me where the example is?",0,0,0,0,0,0,None,,,,
flutter/flutter,pull_request,698951980,2021-08-31 3:18:46,xu-baolin,This is a bug and I add an assertion to check this at line 580,This is a bug and I add an assertion to check this at line 580,0,0,0,0,0,0,None,,,,
angular/angular,pull_request,702188065,2021-09-03 22:40:06,dario-piotrowicz,Note: I checked the collaborators page and this change seems not to have broken anything,Note: I checked the collaborators page and this change seems not to have broken anything,0,0,0,0,0,0,None,,,,
flutter/flutter,pull_request,703555285,2021-09-07 14:19:11,rami-a,"Hmm, I think the `build` of the `NavigationDestination` sort of already serves as an example since it uses a `NavigationDestinationBuilder`","Hmm, I think the `build` of the `NavigationDestination` sort of already serves as an example since it uses a `NavigationDestinationBuilder`",0,0,0,0,0,0,None,,,,
flutter/flutter,pull_request,705796405,2021-09-09 23:53:02,LongCatIsLooong,"On a different thought, the json probably needs to be a map anyways. We need to added a global timestamp to the message in the future to help with synchronization: https://github.com/flutter/flutter/issues/89394.","On a different thought, the json probably needs to be a map anyways. We need to added a global timestamp to the message in the future to help with synchronization: [URL]",0,0,0,0,0,0,None,-,None,1,
flutter/flutter,pull_request,705875828,2021-09-10 3:51:08,LongCatIsLooong,No idea. It's still a hard choice to make when an index is strictly within the replace range. The old implementation works in most cases I think.,No idea. It's still a hard choice to make when an index is strictly within the replace range. The old implementation works in most cases I think.,0,0,0,0,0,0,None,,None,,
flutter/flutter,pull_request,706154128,2021-09-10 12:50:20,dkwingsmt,Why is it not `row.onLongPress`? The `onSelectChanged` was written this way because it needed to use a parameter.,Why is it not `row.onLongPress`? The `onSelectChanged` was written this way because it needed to use a parameter.,0,0,0,0,0,0,None,,None,,
flutter/flutter,pull_request,709391880,2021-09-15 17:19:15,jmagman,"I don't have familiarity with this code, @HansMuller may have opinions.","I don't have familiarity with this code, [USER] may have opinions.",0,0,0,0,0,0,None,,None,,
Microsoft/TypeScript,pull_request,709632217,2021-09-15 22:57:20,sandersn,"Thanks, that example is a good explanation.
I intentionally limited property access lookup by the type of the receiver in order to keep precision high. So the example is working as intended. Let's move lexical lookup to a separate issue+PR pair. I think it might make sense as a separate feature [1], but not as part of this one.
[1] Some questions I'd like to see discussed there:
1. How much does it improve real-world recall?
2. How much does it hurt precision?
3. Should it only apply to #privates?
4. Does iterated lookup hurt performance? (Probably not, but worth thinking about a little.)
5. When the type is explicitly any or unknown, shouldn't the editor first suggest a specific type or narrowing for the receiver?","Thanks, that example is a good explanation.
I intentionally limited property access lookup by the type of the receiver in order to keep precision high. So the example is working as intended. Let's move lexical lookup to a separate issue+PR pair. I think it might make sense as a separate feature [1], but not as part of this one.
[1] Some questions I'd like to see discussed there:
1. How much does it improve real-world recall?
2. How much does it hurt precision?
3. Should it only apply to #privates?
4. Does iterated lookup hurt performance? (Probably not, but worth thinking about a little.)
5. When the type is explicitly any or unknown, shouldn't the editor first suggest a specific type or narrowing for the receiver?",0,0,0,0,0,0,None,,,,
flutter/flutter,pull_request,709635515,2021-09-15 23:05:48,gaaclarke,"This isn't intuitive why it is the correct thing to do, we should probably add a small comment.","This isn't intuitive why it is the correct thing to do, we should probably add a small comment.",0,0,0,0,0,0,None,,,,
flutter/flutter,pull_request,709702484,2021-09-16 2:23:47,Pradumnasaraf,"No, we can't use it in that way","No, we can't use it in that way",0,0,0,0,0,0,None,,None,,
flutter/flutter,pull_request,711819706,2021-09-19 23:22:23,caseycrogers,"Not particularly related to this PR, but this code was improperly formatted.","Not particularly related to this PR, but this code was improperly formatted.",0,0,0,0,0,0,None,,,,
Microsoft/TypeScript,pull_request,713436265,2021-09-21 21:35:13,acutmore,"Ah yes, the transformed code also reads much nicer now too. I like it.","Ah yes, the transformed code also reads much nicer now too. I like it.",0,0,0,0,0,0,None,,,,
flutter/flutter,pull_request,714187726,2021-09-22 18:03:42,jmagman,I don't think this is testing anything now that `validate` doesn't use `sdkManagerPath` anywhere (unless I'm missing it).,I don't think this is testing anything now that `validate` doesn't use `sdkManagerPath` anywhere (unless I'm missing it).,0,0,0,0,0,0,None,,None,,
Microsoft/TypeScript,pull_request,714963867,2021-09-23 16:27:45,sandersn,"this error message should change to ""must be a private identifier or of type any, ...""","this error message should change to ""must be a private identifier or of type any, ...""",0,0,0,0,0,0,None,,,,
angular/angular,pull_request,715260893,2021-09-24 1:37:54,IgorMinar,can we deprecate this old overload please?,can we deprecate this old overload please?,0,0,0,0,0,0,None,,,,
angular/angular,pull_request,715947790,2021-09-24 23:17:37,dgp1130,This is the main bug fix. We use the whole expression rather than just the receiver's name.,This is the main bug fix. We use the whole expression rather than just the receiver's name.,0,0,0,0,0,0,None,,None,,
Microsoft/TypeScript,pull_request,716055400,2021-09-25 15:28:59,ahejlsberg,"Right, there was code to set the flag, but we never examined it. We must have used it at some point, though I don't recall what for.","Right, there was code to set the flag, but we never examined it. We must have used it at some point, though I don't recall what for.",0,0,0,0,0,0,None,,,,
angular/angular,pull_request,716656836,2021-09-27 12:47:15,mlc-mlapis,"Yep, I supposed that. I am really talking about a bit different thing. I am targeting the easy availability to destroy a module instance to release the used memory even though a router creates this module instance. I mentioned it here because there are some shared synergy areas.","Yep, I supposed that. I am really talking about a bit different thing. I am targeting the easy availability to destroy a module instance to release the used memory even though a router creates this module instance. I mentioned it here because there are some shared synergy areas.",0,0,0,0,0,0,None,,None,,
angular/angular,pull_request,716663160,2021-09-27 12:54:50,petebacondarwin,Not that it makes any difference since we are not publishing links to this stackblitz in the docs.,Not that it makes any difference since we are not publishing links to this stackblitz in the docs.,0,0,0,0,0,0,None,,None,,
angular/angular,pull_request,716709680,2021-09-27 13:48:21,gkalpak,"""without manipulating the DOM"" sounds confusing (and even wrong) here imo. The previous wording (""without the DOM moving things around"") is marginally better 😅
It is not about the DOM here (i.e. the extra styles discussed here will not affect the DOM). It is about how the DOM is rendered. So, how about:
```suggestion
During a transition, a new view is inserted directly after the old one and both elements appear on screen at the same time. To prevent this behavior, update the host view to use relative positioning. Then, update the removed and inserted child views to use absolute positioning. Adding these styles to the views animates the containers in place and prevents one view from affecting the position of the other on the page.
```","""without manipulating the DOM"" sounds confusing (and even wrong) here imo. The previous wording (""without the DOM moving things around"") is marginally better 😅
It is not about the DOM here (i.e. the extra styles discussed here will not affect the DOM). It is about how the DOM is rendered. So, how about:

[TRIPLE QUOTE]",0,0,0,0,0,0,None,-,None,,
Microsoft/TypeScript,pull_request,719651616,2021-09-30 18:18:47,andrewbranch,I added this one while resolving merge conflicts,I added this one while resolving merge conflicts,0,0,0,0,0,0,None,,None,,
Microsoft/TypeScript,pull_request,720426851,2021-10-01 17:32:22,andrewbranch,"1. Good observation—project loading is super expensive, so that definitely explains why the numbers we were seeing were so bad. We definitely don’t want to load projects if we don’t have to.
2. Yes.","1. Good observation—project loading is super expensive, so that definitely explains why the numbers we were seeing were so bad. We definitely don’t want to load projects if we don’t have to.
2. Yes.",0,0,0,0,0,0,None,,None,,
Microsoft/TypeScript,pull_request,721318488,2021-10-04 12:33:00,stkevintan,"sure, so what about I revert such changes if there are no good reason to change this part ? cc @Kingwl","sure, so what about I revert such changes if there are no good reason to change this part ? cc [USER]",0,0,0,0,0,0,None,,None,,
flutter/flutter,pull_request,721591565,2021-10-04 17:57:41,HansMuller,"I don't believe the InputDecorator classes have used the term ""segment"" before. Best to use existing terminology (here and elsewhere).","I don't believe the InputDecorator classes have used the term ""segment"" before. Best to use existing terminology (here and elsewhere).",0,0,0,0,0,0,None,,,,
angular/angular,pull_request,722596832,2021-10-05 19:41:25,petebacondarwin,"I think it would be good to match this example to the template one above:
```suggestion
$localize `:An introduction header for this sample:Hello i18n!`;
```","I think it would be good to match this example to the template one above:
[TRIPLE QUOTE].",0,0,0,0,0,0,None,,,,
Microsoft/TypeScript,pull_request,724509217,2021-10-07 20:28:44,weswigham,I think it still kinda does - all children to the right will also not contain the position.,I think it still kinda does - all children to the right will also not contain the position.,0,0,0,0,0,0,None,,,,
flutter/flutter,pull_request,729850629,2021-10-15 14:03:55,DanTup,"Oops, done!","Oops, done!",0,0,0,0,0,0,None,,None,,
flutter/flutter,pull_request,733031195,2021-10-20 18:13:45,jmagman,"I don't think we need to mention `CupertinoActivityIndicator` in this comment since it's a property of the class.
```suggestion
 /// Color of the activity indicator.
```","I don't think we need to mention `CupertinoActivityIndicator` in this comment since it's a property of the class.
[TRIPLE QUOTE].",0,0,0,0,0,0,None,,None,,
Microsoft/TypeScript,pull_request,736989289,2021-10-26 23:14:16,andrewbranch,"My suggestion was purely aesthetic, so if it actually makes code elsewhere more complicated, then it’s not worth it.","My suggestion was purely aesthetic, so if it actually makes code elsewhere more complicated, then it’s not worth it.",0,0,0,0,0,0,None,,None,,
Microsoft/TypeScript,pull_request,738863663,2021-10-29 0:47:10,andrewbranch,Need to follow up on this separately,Need to follow up on this separately,0,0,0,0,0,0,None,,,,
flutter/flutter,pull_request,743225231,2021-11-04 21:45:12,christopherfujino,"No, not more familiar, I'm catching up with the source issue before I have an opinion...","No, not more familiar, I'm catching up with the source issue before I have an opinion...",0,0,0,0,0,0,None,,None,,
webpack/webpack,issue,787095008,2021-02-27 16:02:52,alexander-akait,"You **should not touch** cache file, please use `Discussions` for questions","You **should not touch** cache file, please use `Discussions` for questions",0,0,0,0,0,0,None,,None,,
webpack/webpack,issue,791479583,2021-03-05 15:10:18,alexander-akait,"Still valid, we can get real position from source map, if they present","Still valid, we can get real position from source map, if they present",0,0,0,0,0,0,None,,,,
webpack/webpack,issue,796964653,2021-03-11 18:54:02,alexander-akait,"Yes, please debug it, it is easy, just print `items` in `itemsJoinMoreSpacing`, I still think bug in custom plugin","Yes, please debug it, it is easy, just print `items` in `itemsJoinMoreSpacing`, I still think bug in custom plugin",0,0,0,0,0,0,None,,,,
webpack/webpack,issue,804239823,2021-03-22 17:11:31,Hinaser,@alexander-akait I'll try after having some sleep :sleepy:,[USER] I'll try after having some sleep :sleepy:,0,0,0,0,0,0,None,,,,
webpack/webpack,issue,818776361,2021-04-13 14:22:08,alexander-akait,Can you try comment non official webpack plugins? Maybe leaking somewhere in these packages,Can you try comment non official webpack plugins? Maybe leaking somewhere in these packages,0,0,0,0,0,0,None,,None,,
webpack/webpack,issue,843944916,2021-05-19 9:57:18,RettentoRectangle,Busy pong but not forgotten.,Busy pong but not forgotten.,0,0,0,0,0,0,None,,,,
webpack/webpack,issue,844007072,2021-05-19 11:21:38,alexander-akait,"@juanger Sorry no, you should not got `Cannot read property 'call' of undefined`, if you got this problem, it means bug in webpack or problem in configuration, maybe you can provide configuration (or the main idea how you use module federation with configurations)? Also will be great to look at `output` options","[USER] Sorry no, you should not got `Cannot read property 'call' of undefined`, if you got this problem, it means bug in webpack or problem in configuration, maybe you can provide configuration (or the main idea how you use module federation with configurations)? Also will be great to look at `output` options",0,0,0,0,0,0,None,,None,,
webpack/webpack,issue,846091718,2021-05-21 16:38:17,alexander-akait,No bugs here double check your regexps,No bugs here double check your regexps,0,0,0,0,0,0,None,,None,,
webpack/webpack,issue,864574715,2021-06-20 15:55:10,jcamden,"Ah, by the way, it looks like pageExtensions is the best solution to the problem of co-location: https://github.com/vercel/next.js/discussions/23959#discussioncomment-894210","Ah, by the way, it looks like pageExtensions is the best solution to the problem of co-location: [URL]",0,0,0,0,0,0,None,,None,,
webpack/webpack,issue,869729870,2021-06-28 14:23:35,graingert,I think still make sense,I think still make sense,0,0,0,0,0,0,None,,None,,
angular/angular,issue,878052358,2021-07-12 7:46:58,avine,Writing a wrapper component every time can become annoying. You can use libraries like @testing-library/angular or @ngneat/spectator that wrap the tested component automatically.,Writing a wrapper component every time can become annoying. You can use libraries like [USER] or [USER] that wrap the tested component automatically.,0,0,0,0,0,0,None,,suggestion → neutral,,
webpack/webpack,issue,880803369,2021-07-15 15:43:04,alexander-akait,"Because it is expected, and should not be used in this way?","Because it is expected, and should not be used in this way?",0,0,0,0,0,0,None,,None,,
angular/angular,issue,885291829,2021-07-22 23:05:40,atscott,"I think you could also make the commit message a bit more clear in terms of what's going to be using this new method and defend why it's appropriate to be placed here (i.e. it makes sense for the template type checker to have this method because users of the `TemplateTypeChecker` could use the typing information available there to determine if a diagnostic should be produced).

Try to provide the whole context in your commit message so if someone were to look at this in isolation, it would still make sense.","I think you could also make the commit message a bit more clear in terms of what's going to be using this new method and defend why it's appropriate to be placed here (i.e. it makes sense for the template type checker to have this method because users of the `TemplateTypeChecker` could use the typing information available there to determine if a diagnostic should be produced).

Try to provide the whole context in your commit message so if someone were to look at this in isolation, it would still make sense.",0,0,0,0,0,0,None,,,,
angular/angular,issue,886795776,2021-07-26 15:19:08,petebacondarwin,You could try putting a break point at https://github.com/angular/angular/blob/d100a15998155bf4b882471d3747df877d8b2b5f/packages/compiler-cli/ngcc/src/packages/bundle_program.ts#L51,You could try putting a break point at [URL],0,0,0,0,0,0,None,,,,
angular/angular,issue,888562189,2021-07-28 19:25:43,devversion,It's worth noting (for later reference) that we can return empty stamp values since the release tool will error if the versions do not match up in the package json,It's worth noting (for later reference) that we can return empty stamp values since the release tool will error if the versions do not match up in the package json,0,0,0,0,0,0,None,,,,
angular/angular,issue,888563478,2021-07-28 19:27:48,petebacondarwin,"To help us to diagnose this bug, please could you provide a reproduction in Stackblitz that we can run?","To help us to diagnose this bug, please could you provide a reproduction in Stackblitz that we can run?",0,0,0,0,0,0,None,,None,1,
angular/angular,issue,892341955,2021-08-04 3:57:30,aahmedayed,"Hi @atscott, I'm not sure but I think we can remove the `RouterSpyLocation` class of `computed_state_restoration.spec.ts` in this PR. What do you think ?",Hi [USER] I'm not sure but I think we can remove the `RouterSpyLocation` class of `computed_state_restoration.spec.ts` in this PR. What do you think ?,0,0,0,0,0,0,None,,None,,
Microsoft/TypeScript,issue,899669278,2021-08-16 17:03:16,jcalz,"Duplicate of or strongly related to #32693, although the particular suggestion of “automatic case analysis” reminds me of #25051.","Duplicate of or strongly related to #32693, although the particular suggestion of “automatic case analysis” reminds me of #25051.",0,0,0,0,0,0,None,,,,
webpack/webpack,issue,905778690,2021-08-25 18:36:54,victormoukhortov,"I never said it's easy, only that it's expected functionality that worked in v4.","I never said it's easy, only that it's expected functionality that worked in v4.",0,0,0,0,0,0,None,,,,
Microsoft/TypeScript,issue,907576836,2021-08-28 5:59:51,MartinJohns,"> it's a unique problem to TS. Why would the JS spec want to solve a TS problem?
But it's not. You have the same issue in JS: You optionally want to set a property. You don't want a property with an `undefined` value, you either want a proper value or the property not exist in the first place. This is what `exactOptionalPropertyTypes` means.","[BLOCK QUOTE].
But it's not. You have the same issue in JS: You optionally want to set a property. You don't want a property with an `undefined` value, you either want a proper value or the property not exist in the first place. This is what `exactOptionalPropertyTypes` means.",0,0,0,0,0,0,None,,None,,
Microsoft/TypeScript,issue,907844652,2021-08-29 18:31:42,Finomnis,"As I understand this is intended behaviour, I will close this issue.","As I understand this is intended behaviour, I will close this issue.",0,0,0,0,0,0,None,,None,,
Microsoft/TypeScript,issue,910240086,2021-09-01 12:33:23,MartinJohns,"That doesn't look like an issue with TypeScript, but with Angular.","That doesn't look like an issue with TypeScript, but with Angular.",0,0,0,0,0,0,None,,,,
webpack/webpack,issue,913680957,2021-09-06 14:12:28,CurtisCBS,"> Apparently a breaking change in `webpack-dev-server`, which is still in beta 😞

What is your problem solving? @nazar-pc","[BLOCK QUOTE].

What is your problem solving? [USER]",0,0,0,0,0,0,None,,None,,
webpack/webpack,issue,914253243,2021-09-07 12:15:01,alexander-akait,"Because the problem in other place, what is the problem with waiting an answer?","Because the problem in other place, what is the problem with waiting an answer?",0,0,0,0,0,0,None,,None,,
angular/angular,issue,917914576,2021-09-13 7:23:32,yuvgeek,Can you share the stackblitz URL to reproduce this issue?,Can you share the stackblitz URL to reproduce this issue?,0,0,0,0,0,0,None,,neutral,,
webpack/webpack,issue,918060752,2021-09-13 10:32:32,ai,@alexander-akait I found this improvement idea during the investigation of #14203,[USER] I found this improvement idea during the investigation of #14203,0,0,0,0,0,0,None,,neutral,,
Microsoft/TypeScript,issue,926737277,2021-09-24 15:54:29,andrewbranch,"Anyway, to your point about not liking `""types""` or triple-slash references, I think `""include""` addresses your concerns about each of those? You’d have to specify node_modules as part of the path, which is unattractive, but not problematic as far as I know: `""include"": [""node_modules/custom-lib-module""]`","Anyway, to your point about not liking `""types""` or triple-slash references, I think `""include""` addresses your concerns about each of those? You’d have to specify node_modules as part of the path, which is unattractive, but not problematic as far as I know: `""include"": [""node_modules/custom-lib-module""]`",0,0,0,0,0,0,None,,,,
angular/angular,issue,928194070,2021-09-27 19:14:37,petebacondarwin,"> Honestly, I think we need to follow the approach RxJS has taken. After all, EventEmitter extends Subject. If we diverge (even with a good intention of minimizing migration friction) - it will add confusion in future.

Can you clarify what the RxJS approach is here?","[BLOCK QUOTE].

Can you clarify what the RxJS approach is here?",0,0,0,0,0,0,None,,None,,
Microsoft/TypeScript,issue,931217774,2021-09-30 11:01:12,mkmladja,Another one...,Another one...,0,0,0,0,0,0,None,,,,
webpack/webpack,issue,932234983,2021-10-01 13:35:43,sokra,"> is this something that can be addressed in webpack or is this the responsibility of the library code?

We can't do anything about that in webpack. We throw the error to make it easier to find the problem. Without the error this would lead to hanging builds, since the loader waits on it's on response.","[BLOCK QUOTE].

We can't do anything about that in webpack. We throw the error to make it easier to find the problem. Without the error this would lead to hanging builds, since the loader waits on it's on response.",0,0,0,0,0,0,None,,None,,
Microsoft/TypeScript,issue,932587516,2021-10-01 21:29:24,andrewbranch,"Confirmed that VS Code does not inspect `locs` if `canRename` is false. @amcasey, any concerns about this on the VS side?","Confirmed that VS Code does not inspect `locs` if `canRename` is false. [USER], any concerns about this on the VS side?",0,0,0,0,0,0,None,-,None,,
angular/angular,issue,938896893,2021-10-08 17:16:13,gkalpak,"@dario-piotrowicz, what is the state of this PR now? Are there other smaller PRs that should be merged first? What are the remaining tasks before getting this ready to merge?",[USER] what is the state of this PR now? Are there other smaller PRs that should be merged first? What are the remaining tasks before getting this ready to merge?,0,0,0,0,0,0,None,,None,,
angular/angular,issue,938914977,2021-10-08 17:24:32,atscott,"Wouldn’t this have more to do with your build configuration? You can disable renaming/obfuscation to accomplish this or configure the js compiler / webpack to specifically not rename these, no?","Wouldn’t this have more to do with your build configuration? You can disable renaming/obfuscation to accomplish this or configure the js compiler / webpack to specifically not rename these, no?",0,0,0,0,0,0,None,,None,,
angular/angular,issue,939298700,2021-10-09 13:37:42,petebacondarwin,This issue is 18 months old and is under-specified. Closing for now. If there is a desire to actually implement this we can reopen it.,This issue is 18 months old and is under-specified. Closing for now. If there is a desire to actually implement this we can reopen it.,0,0,0,0,0,0,None,,,,
angular/angular,issue,939559157,2021-10-10 21:56:37,criskrzysiu,"> A NaN is never greater or less than anything, it’s just a NaN
exactly - that's why min and max ignore it
Let's say it will not ignore it - then we will get an error that 'dada' is violating min and max at the same time - where is logic in that?","[BLOCK QUOTE].
exactly - that's why min and max ignore it
Let's say it will not ignore it - then we will get an error that 'dada' is violating min and max at the same time - where is logic in that?",0,0,0,0,0,0,None,,None,,
Microsoft/TypeScript,issue,944834490,2021-10-16 1:33:16,xiBread,"This isn't a bug, you need to pass `S` as the type parameter for `Uppercase`. `Uppercase<string>` is just `string`.","This isn't a bug, you need to pass `S` as the type parameter for `Uppercase`. `Uppercase<string>` is just `string`.",0,0,0,0,0,0,None,,None,,
flutter/flutter,issue,945152375,2021-10-17 16:14:11,31Carlton7,"No direct solution yet. Flutter needs to fix this. However, wrapping the custom scrollview in a notification listener, and then a gesture detector seems to do the trick.

```
return GestureDetector(
 behavior: HitTestBehavior.opaque,
 onPanDown: (_) {
 FocusScope.of(context).requestFocus(FocusNode());
 },
 child: NotificationListener(
 onNotification: (_) {
 return false;
 },
 child: CustomScrollView(
```","No direct solution yet. Flutter needs to fix this. However, wrapping the custom scrollview in a notification listener, and then a gesture detector seems to do the trick.

[TRIPLE QUOTE].",0,0,0,0,0,0,None,,None,,
flutter/flutter,issue,945408262,2021-10-18 6:33:01,MCarlomagno,"Would be great if you could provide some specific technical details about the issue, or at least from your computer, I also have 6GB of RAM and it works perfectly","Would be great if you could provide some specific technical details about the issue, or at least from your computer, I also have 6GB of RAM and it works perfectly",0,0,0,0,0,0,None,,,,
flutter/flutter,issue,945514943,2021-10-18 8:27:33,bajajsahil,"> > Faced this issue on mobile device Samsung J600GF too on Flutter build 2.5.0. OS version 9. Production release mode.
> > ```dart
> > Null check operator used on a null value KeyEventManager._convertRawEventAndStore(package:flutter/src/services/hardware_keyboard.dart:892)
> > RawKeyboard.handleRawKeyEvent(package:flutter/src/services/raw_keyboard.dart:677)
> > KeyEventManager.handleRawKeyMessage(package:flutter/src/services/hardware_keyboard.dart:818)
> > BasicMessageChannel.setMessageHandler.<anonymousclosure>(package:flutter/src/services/platform_channel.dart:73)
> > BasicMessageChannel.setMessageHandler.<anonymousclosure>(package:flutter/src/services/platform_channel.dart:72)
> > _DefaultBinaryMessenger.setMessageHandler.<anonymousclosure>(package:flutter/src/services/binding.dart:379)
> > _DefaultBinaryMessenger.setMessageHandler.<anonymousclosure>(package:flutter/src/services/binding.dart:376)
> > _invoke2.<anonymousclosure>(dart:ui/hooks.dart:205)
> > _rootRun(dart:async/zone.dart:1428)
> > _CustomZone.run(dart:async/zone.dart:1328)
> > _CustomZone.runGuarded(dart:async/zone.dart:1236)
> > _invoke2(dart:ui/hooks.dart:204)
> > _ChannelCallbackRecord.invoke(dart:ui/channel_buffers.dart:42)
> > _Channel.push(dart:ui/channel_buffers.dart:132)
> > ChannelBuffers.push(dart:ui/channel_buffers.dart:329)
> > ```
>
> @bajajsahil Have you resolved this issue as I am also getting the same StackTrace??

@shiv-k-sharma Not yet. Still waiting.","[BLOCK QUOTE].

@shiv-k-sharma Not yet. Still waiting.",0,0,0,0,0,0,None,,,,
flutter/flutter,issue,945862233,2021-10-18 14:57:06,idkq,"> we no longer gonna be adding more adaptive widgets

@TahaTesser What is the strategy for cupertino-looking widgets from flutter core going forward? Seems like a strong statement to stop building them since many people expect/want/use it.","[BLOCK QUOTE]. 

[USER] What is the strategy for cupertino-looking widgets from flutter core going forward? Seems like a strong statement to stop building them since many people expect/want/use it.",0,0,0,0,0,0,None,-,None,,
flutter/flutter,issue,946655147,2021-10-19 12:06:20,larryaasen,@stuartmorgan Do you know when this will get assigned a milestone?,[USER] Do you know when this will get assigned a milestone?,0,0,0,0,0,0,None,,None,,
flutter/flutter,issue,946976557,2021-10-19 18:11:04,justinmc,"This was my original fix for this in the framework but I closed it as not ideal: https://github.com/flutter/flutter/pull/85335

I'll investigate an engine solution as I look at https://github.com/flutter/flutter/issues/91859 as well.","This was my original fix for this in the framework but I closed it as not ideal: [URL]

I'll investigate an engine solution as I look at [URL] as well.",0,0,0,0,0,0,None,,None,,
flutter/flutter,issue,947603521,2021-10-20 12:11:02,bambinoua,"So what is the problem?
[How to remove hash (#) from URL in Flutter web](https://stackoverflow.com/a/65709246/1798328)
If you don't want to install pacakge just look inside [source code](https://github.com/simpleclub/url_strategy/blob/main/url_strategy/lib/src/url_strategy_web.dart).","So what is the problem?
[How to remove hash (#) from URL in Flutter web]([URL]
If you don't want to install pacakge just look inside [source code]([URL]",0,0,0,0,0,0,None,,None,,
flutter/flutter,issue,948547720,2021-10-21 12:07:23,wesleyaoyama,"Hi, It was an antivirus problem when extracting the dart sdk file. Thanks","Hi, It was an antivirus problem when extracting the dart sdk file. Thanks",0,0,0,0,0,0,None,,None,,
Microsoft/TypeScript,issue,948928192,2021-10-21 19:18:53,andrewbranch,@abhaysocialised I still can’t reproduce this—do you have a repo you can share where this is happening?,[USER] I still can’t reproduce this—do you have a repo you can share where this is happening?,0,0,0,0,0,0,None,,,,
flutter/flutter,issue,949060837,2021-10-21 22:55:44,jmagman,"@devoncarew 
> * the fix for this is the engine commit [flutter/engine@b83eabc](https://github.com/flutter/engine/commit/b83eabca5a9504799a5c8b834f0845194918d11c) ?

Yes (thank you @moffatman!)

> * this issue repros on beta, but not on master now I assume. Does it repro in stable?

It is in stable and beta. @junglerobba https://github.com/flutter/flutter/issues/86565#issuecomment-927653981 narrowed it down to https://github.com/flutter/engine/pull/25961 which rolled in https://github.com/flutter/flutter/pull/86068, first available in 2.4.0-4.0.pre.

We have one confirmation this now no longer reproduces in master: https://github.com/flutter/flutter/issues/91850#issuecomment-949000003.
For anyone else seeing this issue: can you confirm it's fixed on the master channel?

> * this is a cherry pick request to the beta channel, not to stable?

It seems bad enough to warrant a cp to stable, but I don't think it's baked enough, I want to see if any bugs/crashes fall out. 
 So yes, a cherry pick to beta for now.","[USER] 
[BLOCK QUOTE]. 

Yes (thank you [USER]!) 

[BLOCK QUOTE]. 

It is in stable and beta. [USER] [URL] narrowed it down to [URL] which rolled in [URL] first available in 2.4.0-4.0.pre. 

We have one confirmation this now no longer reproduces in master: [URL] For anyone else seeing this issue: can you confirm it's fixed on the master channel? [

BLOCK QUOTE]. 

It seems bad enough to warrant a cp to stable, but I don't think it's baked enough, I want to see if any bugs/crashes fall out. So yes, a cherry pick to beta for now.",0,0,0,0,0,0,None,-,None,,
Microsoft/TypeScript,issue,949085220,2021-10-21 23:55:28,DanielRosenwasser,It doesn't really make sense to distinguish a missing getter from `| undefined` because that get accessor will always be installed. You might be better off mirroring the type of your class and using optional properties.,It doesn't really make sense to distinguish a missing getter from `| undefined` because that get accessor will always be installed. You might be better off mirroring the type of your class and using optional properties.,0,0,0,0,0,0,None,,None,,
flutter/flutter,issue,949996712,2021-10-22 22:36:59,stuartmorgan,"> that old issue is closed

No it isn't.

> how come this is duplicate

Because it's asking for exactly the same thing.","[BLOCK QUOTE].

No it isn't.

[BLOCK QUOTE].

Because it's asking for exactly the same thing.",0,0,0,0,0,0,None,,None,,
flutter/flutter,issue,950156251,2021-10-23 13:53:42,arslankaleem7229,I didn't add any thing in that file,I didn't add any thing in that file,0,0,0,0,0,0,None,,,,
flutter/flutter,issue,951751815,2021-10-26 9:25:26,Beto-Beto-Salamander,"@darshankawar okay thank you, I've solved the pdf issue
but how about the image ?","[USER] okay thank you, I've solved the pdf issue
but how about the image ?",0,0,0,0,0,0,None,,None,,
flutter/flutter,issue,953066464,2021-10-27 15:54:36,zanderso,"Glancing quickly, I'm not able to find any big differences between the most recent traces, and the one in my initial report, but here is a recent one:
```
Thread 4 (id: 0x0000a303) CRASHED [EXC_SOFTWARE / SIGABRT @ 0x00000001ba2c29c4 ]Show exception record
0x00000001ba2c29c4(libsystem_kernel.dylib + 0x000079c4)__pthread_kill
0x00000001f3517430(libsystem_pthread.dylib + 0x00007430)pthread_kill
0x000000018e7caf60(libsystem_c.dylib + 0x0001ff60)abort
0x000000019dc0f24c(Metal + 0x000be24c)MTLReleaseAssertionFailure
0x00000001cc7efba4(IOGPU + 0x00003ba4)-[IOGPUMetalCommandBuffer setCurrentCommandEncoder:]
0x000000019db656ec(Metal + 0x000146ec)-[_MTLCommandEncoder initWithCommandBuffer:]
0x00000001cc7f1820(IOGPU + 0x00005820)-[IOGPUMetalCommandEncoder initWithCommandBuffer:]
0x00000001f48780f0(AGXMetalA12 + 0x000270f0)
0x00000001f48847c4(AGXMetalA12 + 0x000337c4)
0x00000001085db928(Flutter -GrMtlCommandBuffer.mm:59)GrMtlCommandBuffer::getBlitCommandEncoder()
0x00000001085def7c(Flutter -GrMtlGpu.mm:380)GrMtlGpu::onWritePixels(GrSurface*, SkIRect, GrColorType, GrColorType, GrMipLevel const*, int, bool)
0x00000001084e91d0(Flutter -GrGpu.cpp:479)GrGpu::writePixels(GrSurface*, SkIRect, GrColorType, GrColorType, GrMipLevel const*, int, bool)
0x00000001084f85c8(Flutter -GrResourceProvider.cpp:833)GrResourceProvider::writePixels(sk_sp<GrTexture>, GrColorType, SkISize, GrMipLevel const*, int) const
0x00000001084f8f30(Flutter -GrResourceProvider.cpp:164)GrResourceProvider::createTexture(SkISize, GrBackendFormat const&, GrTextureType, GrColorType, GrRenderable, int, SkBudgeted, SkBackingFit, GrProtected, GrMipLevel const&)
0x00000001084f0110(Flutter -GrProxyProvider.cpp:339)std::__1::__function::__func<GrProxyProvider::createNonMippedProxyFromBitmap(SkBitmap const&, SkBackingFit, SkBudgeted)::$_0, std::__1::allocator<GrProxyProvider::createNonMippedProxyFromBitmap(SkBitmap const&, SkBackingFit, SkBudgeted)::$_0>, GrSurfaceProxy::LazyCallbackResult (GrResourceProvider*, GrSurfaceProxy::LazySurfaceDesc const&)>::operator()(GrResourceProvider*&&, GrSurfaceProxy::LazySurfaceDesc const&)
0x00000001084fd56c(Flutter -functional:1873)GrSurfaceProxyPriv::doLazyInstantiation(GrResourceProvider*)
0x00000001084efa60(Flutter -GrProxyProvider.cpp:316)GrProxyProvider::createProxyFromBitmap(SkBitmap const&, GrMipmapped, SkBackingFit, SkBudgeted)
0x000000010854aedc(Flutter -SkGr.cpp:163)make_bmp_proxy(GrProxyProvider*, SkBitmap const&, GrColorType, GrMipmapped, SkBackingFit, SkBudgeted)
0x000000010854b0b4(Flutter -SkGr.cpp:246)GrMakeUncachedBitmapProxyView(GrRecordingContext*, SkBitmap const&, GrMipmapped, SkBackingFit, SkBudgeted)
0x00000001084fb120(Flutter -GrSWMaskHelper.cpp:158)GrSWMaskHelper::toTextureView(GrRecordingContext*, SkBackingFit)
0x0000000108586bd8(Flutter -SoftwarePathRenderer.cpp:370)skgpu::v1::SoftwarePathRenderer::onDrawPath(skgpu::v1::PathRenderer::DrawPathArgs const&)
0x00000001085a1134(Flutter -PathRenderer.cpp:70)skgpu::v1::SurfaceDrawContext::drawShapeUsingPathRenderer(GrClip const*, GrPaint&&, GrAA, SkMatrix const&, GrStyledShape&&, bool)
0x00000001085a30f8(Flutter -SurfaceDrawContext.cpp:1581)skgpu::v1::SurfaceDrawContext::drawShape(GrClip const*, GrPaint&&, GrAA, SkMatrix const&, GrStyledShape&&)
0x00000001085a2ebc(Flutter -SurfaceDrawContext.cpp:1558)skgpu::v1::SurfaceDrawContext::drawPath(GrClip const*, GrPaint&&, GrAA, SkMatrix const&, SkPath const&, GrStyle const&)
0x0000000108596c90(Flutter -Device.cpp:640)skgpu::v1::Device::drawPath(SkPath const&, SkPaint const&, bool)
0x00000001083ac190(Flutter -SkCanvas.cpp:2086)SkCanvas::onDrawPath(SkPath const&, SkPaint const&)
0x00000001083b29d8(Flutter -SkCanvas.cpp:1791)SkCanvas::drawPath(SkPath const&, SkPaint const&)
0x00000001087d2b10(Flutter -picture_layer.cc:141)flutter::PictureLayer::Paint(flutter::Layer::PaintContext&) const
0x00000001087cf804(Flutter -container_layer.cc:166)flutter::ContainerLayer::PaintChildren(flutter::Layer::PaintContext&) const
0x00000001087d236c(Flutter -physical_shape_layer.cc:120)flutter::PhysicalShapeLayer::Paint(flutter::Layer::PaintContext&) const
0x00000001087cf804(Flutter -container_layer.cc:166)flutter::ContainerLayer::PaintChildren(flutter::Layer::PaintContext&) const
0x00000001087d33e0(Flutter -transform_layer.cc:80)flutter::TransformLayer::Paint(flutter::Layer::PaintContext&) const
0x00000001087cf804(Flutter -container_layer.cc:166)flutter::ContainerLayer::PaintChildren(flutter::Layer::PaintContext&) const
0x00000001087d33e0(Flutter -transform_layer.cc:80)flutter::TransformLayer::Paint(flutter::Layer::PaintContext&) const
0x00000001087cf804(Flutter -container_layer.cc:166)flutter::ContainerLayer::PaintChildren(flutter::Layer::PaintContext&) const
0x00000001087cf038(Flutter -clip_rect_layer.cc:67)flutter::ClipRectLayer::Paint(flutter::Layer::PaintContext&) const
0x00000001087cf804(Flutter -container_layer.cc:166)flutter::ContainerLayer::PaintChildren(flutter::Layer::PaintContext&) const
0x00000001087d33e0(Flutter -transform_layer.cc:80)flutter::TransformLayer::Paint(flutter::Layer::PaintContext&) const
0x00000001087cf804(Flutter -container_layer.cc:166)flutter::ContainerLayer::PaintChildren(flutter::Layer::PaintContext&) const
0x00000001087d33e0(Flutter -transform_layer.cc:80)flutter::TransformLayer::Paint(flutter::Layer::PaintContext&) const
0x00000001087cf804(Flutter -container_layer.cc:166)flutter::ContainerLayer::PaintChildren(flutter::Layer::PaintContext&) const
0x00000001087d33e0(Flutter -transform_layer.cc:80)flutter::TransformLayer::Paint(flutter::Layer::PaintContext&) const
0x00000001087cf804(Flutter -container_layer.cc:166)flutter::ContainerLayer::PaintChildren(flutter::Layer::PaintContext&) const
0x00000001087d33e0(Flutter -transform_layer.cc:80)flutter::TransformLayer::Paint(flutter::Layer::PaintContext&) const
0x00000001087cf804(Flutter -container_layer.cc:166)flutter::ContainerLayer::PaintChildren(flutter::Layer::PaintContext&) const
0x00000001087d33e0(Flutter -transform_layer.cc:80)flutter::TransformLayer::Paint(flutter::Layer::PaintContext&) const
0x00000001087cf804(Flutter -container_layer.cc:166)flutter::ContainerLayer::PaintChildren(flutter::Layer::PaintContext&) const
0x00000001087d236c(Flutter -physical_shape_layer.cc:120)flutter::PhysicalShapeLayer::Paint(flutter::Layer::PaintContext&) const
0x00000001087cf804(Flutter -container_layer.cc:166)flutter::ContainerLayer::PaintChildren(flutter::Layer::PaintContext&) const
0x00000001087d33e0(Flutter -transform_layer.cc:80)flutter::TransformLayer::Paint(flutter::Layer::PaintContext&) const
0x00000001087cf804(Flutter -container_layer.cc:166)flutter::ContainerLayer::PaintChildren(flutter::Layer::PaintContext&) const
0x00000001087c583c(Flutter -layer_tree.cc:89)flutter::CompositorContext::ScopedFrame::Raster(flutter::LayerTree&, bool)
0x000000010870d554(Flutter -rasterizer.cc:540)flutter::Rasterizer::DrawToSurfaceUnsafe(flutter::FrameTimingsRecorder&, flutter::LayerTree&)
0x000000010870d84c(Flutter -rasterizer.cc:485)std::__1::__function::__func<flutter::Rasterizer::DrawToSurface(flutter::FrameTimingsRecorder&, flutter::LayerTree&)::$_8, std::__1::allocator<flutter::Rasterizer::DrawToSurface(flutter::FrameTimingsRecorder&, flutter::LayerTree&)::$_8>, void ()>::operator()()
0x0000000108645a90(Flutter -sync_switch.cc)fml::SyncSwitch::Execute(fml::SyncSwitch::Handlers const&) const
0x000000010870d228(Flutter -rasterizer.cc:480)flutter::Rasterizer::DrawToSurface(flutter::FrameTimingsRecorder&, flutter::LayerTree&)
0x000000010870e8b0(Flutter -rasterizer.cc:387)std::__1::__function::__func<flutter::Rasterizer::Draw(std::__1::unique_ptr<flutter::FrameTimingsRecorder, std::__1::default_delete<flutter::FrameTimingsRecorder> >, std::__1::shared_ptr<flutter::Pipeline<flutter::LayerTree> >, std::__1::function<bool (flutter::LayerTree&)>)::$_2, std::__1::allocator<flutter::Rasterizer::Draw(std::__1::unique_ptr<flutter::FrameTimingsRecorder, std::__1::default_delete<flutter::FrameTimingsRecorder> >, std::__1::shared_ptr<flutter::Pipeline<flutter::LayerTree> >, std::__1::function<bool (flutter::LayerTree&)>)::$_2>, void (std::__1::unique_ptr<flutter::LayerTree, std::__1::default_delete<flutter::LayerTree> >)>::operator()(std::__1::unique_ptr<flutter::LayerTree, std::__1::default_delete<flutter::LayerTree> >&&)
0x000000010870db04(Flutter -functional:1873)flutter::Rasterizer::Draw(std::__1::unique_ptr<flutter::FrameTimingsRecorder, std::__1::default_delete<flutter::FrameTimingsRecorder> >, std::__1::shared_ptr<flutter::Pipeline<flutter::LayerTree> >, std::__1::function<bool (flutter::LayerTree&)>)
0x0000000108716140(Flutter -shell.cc:1167)std::__1::__function::__func<fml::internal::CopyableLambda<flutter::Shell::OnAnimatorDraw(std::__1::shared_ptr<flutter::Pipeline<flutter::LayerTree> >, std::__1::unique_ptr<flutter::FrameTimingsRecorder, std::__1::default_delete<flutter::FrameTimingsRecorder> >)::$_14>, std::__1::allocator<fml::internal::CopyableLambda<flutter::Shell::OnAnimatorDraw(std::__1::shared_ptr<flutter::Pipeline<flutter::LayerTree> >, std::__1::unique_ptr<flutter::FrameTimingsRecorder, std::__1::default_delete<flutter::FrameTimingsRecorder> >)::$_14> >, void ()>::operator()()
0x0000000108644300(Flutter -functional:1873)fml::MessageLoopImpl::FlushTasks(fml::FlushType)
0x00000001086478bc(Flutter -message_loop_impl.cc:143)fml::MessageLoopDarwin::OnTimerFire(__CFRunLoopTimer*, fml::MessageLoopDarwin*)
0x00000001839e4274(CoreFoundation + 0x000ae274)__CFRUNLOOP_IS_CALLING_OUT_TO_A_TIMER_CALLBACK_FUNCTION__
0x0000000183968c4c(CoreFoundation + 0x00032c4c)__CFRunLoopDoTimer
0x0000000183963448(CoreFoundation + 0x0002d448)__CFRunLoopDoTimers
0x0000000183941c64(CoreFoundation + 0x0000bc64)__CFRunLoopRun
0x00000001839553c4(CoreFoundation + 0x0001f3c4)CFRunLoopRunSpecific
0x0000000108647798(Flutter -message_loop_darwin.mm:46)fml::MessageLoopDarwin::Run()
0x0000000108646f58(Flutter -message_loop_impl.cc:96)void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, fml::Thread::Thread(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)::$_0> >(void*)
0x00000001f3511a5c(libsystem_pthread.dylib + 0x00001a5c)_pthread_start
```","Glancing quickly, I'm not able to find any big differences between the most recent traces, and the one in my initial report, but here is a recent one: 

[TRIPLE QUOTE].",0,0,0,0,0,0,None,-,None,,
angular/angular,issue,953364092,2021-10-27 22:43:53,jessicajaniuk,"We're going to close this PR since it's out of date, but the issue remains open and is still being discussed.","We're going to close this PR since it's out of date, but the issue remains open and is still being discussed.",0,0,0,0,0,0,None,,,,
angular/angular,issue,954029572,2021-10-28 16:57:39,Sam-Lin-MillersLab,"> If Universal has already rendered all of the HTML, why does Google need javascript for a snapshot of the page? All of the re-hydration from Angular just wrecks the results

Because users need to go to the next page?","[BLOCK QUOTE].

Because users need to go to the next page?",0,0,0,0,0,0,None,,None,,
flutter/flutter,issue,954267585,2021-10-28 22:17:53,godofredoc,"This is potentially a couple of days of work. We also need the additional bot capacity for try.

@yusuf-goog can we add one linux android test bed to luci.flutter.try?","This is potentially a couple of days of work. We also need the additional bot capacity for try.

[USER] can we add one linux android test bed to luci.flutter.try?",0,0,0,0,0,0,None,-,None,1,
flutter/flutter,issue,954660070,2021-10-29 11:15:35,maheshmnj,"Hi @HectorUgo, Thanks for filing the issue. please share your output of `flutter doctor -v` and a minimal reproducible code sample to investigate further.

Thanks","Hi [USER] Thanks for filing the issue. please share your output of `flutter doctor -v` and a minimal reproducible code sample to investigate further.

Thanks",0,0,0,0,0,0,None,,None,,
flutter/flutter,issue,954670030,2021-10-29 11:32:30,maheshmnj,">Getting similar errors when you add packages when app is not running. When run again debugger throws MissingPluginException
@briankariuki Can you please share the logs ?","[BLOCK QUOTE].
@briankariuki Can you please share the logs ?",0,0,0,0,0,0,None,,,,
flutter/flutter,issue,955061722,2021-10-29 21:35:39,yusuf-goog,Will look at the device when I am at the lab.,Will look at the device when I am at the lab.,0,0,0,0,0,0,None,,,,
flutter/flutter,issue,956350106,2021-11-01 15:50:04,dnfield,"Debugger.skia.org is helpful there but it might be possible for tooling to look at the skp and list expensive operations, at the very least repeated calls to saveLayer","Debugger.skia.org is helpful there but it might be possible for tooling to look at the skp and list expensive operations, at the very least repeated calls to saveLayer",0,0,0,0,0,0,None,,None,,
flutter/flutter,issue,956436204,2021-11-01 17:32:55,chinmaygarde,Closing this as this was an unreliable indicator and one that has gone back to zero.,Closing this as this was an unreliable indicator and one that has gone back to zero.,0,0,0,0,0,0,None,,None,,
Microsoft/TypeScript,issue,956477956,2021-11-01 18:23:14,andrewbranch,"> Since both repos refer to the same fragment, both repos have to declare it.

This is what I assumed but wasn't sure of. I don't know what code patterns trigger the tooling in a way that requires the comment to be present, so I wasn't confident that both repos actually needed it. Intuitively, I would have expected that _only_ VS Code needs any of these comments, since that's the place where this data actually gets sent to telemetry.","[BLOCK QUOTE].

This is what I assumed but wasn't sure of. I don't know what code patterns trigger the tooling in a way that requires the comment to be present, so I wasn't confident that both repos actually needed it. Intuitively, I would have expected that _only_ VS Code needs any of these comments, since that's the place where this data actually gets sent to telemetry.",0,0,0,0,0,0,None,,None,,
Microsoft/TypeScript,issue,956618387,2021-11-01 21:21:07,weswigham,"Oh, I know, but we could have a check sequence like 1,2,1,1,1,1,... and previously we'd have marked it as deep (5x repeated 1), whereas because of the 2, now we won't.","Oh, I know, but we could have a check sequence like 1,2,1,1,1,1,... and previously we'd have marked it as deep (5x repeated 1), whereas because of the 2, now we won't.",0,0,0,0,0,0,None,,,,
flutter/flutter,issue,956655779,2021-11-01 21:38:22,GaryQian,"Ahh not yet, I wil try to get to it soon.","Ahh not yet, I wil try to get to it soon.",0,0,0,0,0,0,None,,,,
flutter/flutter,issue,957179488,2021-11-02 7:58:03,darshankawar,"@rukhiddinov2102
Can you upgrade to latest stable and try again to see if you still get same error or not ?","[USER]
Can you upgrade to latest stable and try again to see if you still get same error or not ?",0,0,0,0,0,0,None,,None,,
flutter/flutter,issue,957199696,2021-11-02 8:24:42,kuhnroyal,@RobertHeim I have not seen this yet but you need to figure out the possible new keyboard vendor string for those devices.,[USER] I have not seen this yet but you need to figure out the possible new keyboard vendor string for those devices.,0,0,0,0,0,0,None,,None,,
flutter/flutter,issue,957387009,2021-11-02 11:59:08,anaurelian,When is this going to be in the stable branch?,When is this going to be in the stable branch?,0,0,0,0,0,0,None,,None,,
flutter/flutter,issue,957476351,2021-11-02 12:40:58,stuartmorgan,"> But even still. Updating to version 18 should have some priority.

All work has some priority, but whether something has a hard requirement by a certain date or not affects that priority.","[BLOCK QUOTE].

All work has some priority, but whether something has a hard requirement by a certain date or not affects that priority.",0,0,0,0,0,0,None,,,,
flutter/flutter,issue,957484835,2021-11-02 12:45:03,rk0cc,"Since this problem only happened on me. Therefore, I close this issue until someone encountered same issue or what I confirmed.","Since this problem only happened on me. Therefore, I close this issue until someone encountered same issue or what I confirmed.",0,0,0,0,0,0,None,,None,,
flutter/flutter,issue,959731063,2021-11-03 16:58:13,clarkezone,None from me,None from me,0,0,0,0,0,0,None,,None,,
Microsoft/TypeScript,issue,959811007,2021-11-03 18:32:09,andrewbranch,Maybe we should call this out more explicitly in the stable blog post. There’s a section about the broader Promise/Awaited changes but the type parameter change isn’t specifically mentioned.,Maybe we should call this out more explicitly in the stable blog post. There’s a section about the broader Promise/Awaited changes but the type parameter change isn’t specifically mentioned.,0,0,0,0,0,0,None,,,,
flutter/flutter,issue,959814140,2021-11-03 18:36:30,jjoelson,"This may have the same root cause as this one: https://github.com/flutter/flutter/issues/92119

It seems that no touches within a `SliverAppBar` are recognized while scrolling. This includes:
- Back/dismiss buttons
- Action buttons
- Custom gesture detectors in the title widget
- iOS Status bar taps (for the tap to scroll up gesture)

My guess is that the logic that prevents, say, a button within a scroll view from getting pressed if the user taps during scrolling is not distinguishing between slivers that are moving and slivers that are fixed in place.

It seems to me that the proper behavior is that any sliver that is fixed in place ought to be able to receive touch events even while the `CustomScrollView` is scrolling.","This may have the same root cause as this one: [URL]

It seems that no touches within a `SliverAppBar` are recognized while scrolling. This includes:
- Back/dismiss buttons
- Action buttons
- Custom gesture detectors in the title widget
- iOS Status bar taps (for the tap to scroll up gesture)

My guess is that the logic that prevents, say, a button within a scroll view from getting pressed if the user taps during scrolling is not distinguishing between slivers that are moving and slivers that are fixed in place.

It seems to me that the proper behavior is that any sliver that is fixed in place ought to be able to receive touch events even while the `CustomScrollView` is scrolling.",0,0,0,0,0,0,None,,None,,
Microsoft/TypeScript,issue,961327890,2021-11-04 18:54:36,weswigham,"Uh, depends, what compiler options we talking about? We only add the implicit whole-module `default` member to the import if `allowSyntheticDefaultImports` (or `esModuleInterop` or `module: node12` or `module: nodenext`) is set.","Uh, depends, what compiler options we talking about? We only add the implicit whole-module `default` member to the import if `allowSyntheticDefaultImports` (or `esModuleInterop` or `module: node12` or `module: nodenext`) is set.",0,0,0,0,0,0,None,,None,,
Microsoft/TypeScript,pull_request,449260392,2020-07-02 20:52:14,andrewbranch,This is a well-known limitation; it’s not a problem in the context of this PR.,This is a well-known limitation; it’s not a problem in the context of this PR.,0,0,0,0,0,0,,,,,
webpack/webpack,pull_request,496857126,2020-09-29 16:08:29,sokra,You forgot to add this file,You forgot to add this file,0,0,0,0,0,0,,,,,
Microsoft/TypeScript,issue,918672907,2021-09-14 0:00:51,ImRodry,"I don’t understand, how does it make the code less portable? I use this function to evaluate strings of code and to see how they look when transpiled, and I want the actual result that TS would produce if it was a regular file. Is there a better way to do this?","I don’t understand, how does it make the code less portable? I use this function to evaluate strings of code and to see how they look when transpiled, and I want the actual result that TS would produce if it was a regular file. Is there a better way to do this?",0,0,0,0,0,1,Confusion,,Surprised why something not working.,,
flutter/flutter,pull_request,705761494,2021-09-09 22:46:57,justinmc,Do you know why this was done in the first place? Was it just because it was easier? Talking about separating before/during/after selection. I agree that it seems much more useful the new way.,Do you know why this was done in the first place? Was it just because it was easier? Talking about separating before/during/after selection. I agree that it seems much more useful the new way.,0,0,0,0,0,1,Curiosity,,Curiosity about this new way,,
flutter/flutter,issue,947268725,2021-10-20 2:36:50,sandeharsa,"Hi there. This issue affects my app quite significantly, as Samsung phones are quite popular. Is there any workaround for it?

I would love to help to figure out the issue, but I haven't contributed to Flutter before.

Can anyone give any pointers on which areas of the engine (I'm assuming it's a to do with the engine) to look into?","Hi there. This issue affects my app quite significantly, as Samsung phones are quite popular. Is there any workaround for it?

I would love to help to figure out the issue, but I haven't contributed to Flutter before.

Can anyone give any pointers on which areas of the engine (I'm assuming it's a to do with the engine) to look into?",0,0,0,0,0,1,Zest,Enthusiasm,Eager to help -> Enthusiasm,,
angular/angular,issue,932608742,2021-10-01 22:16:55,Chealer,"> Thx for reporting this, @Chealer!

My ""pleasure"" (I guess :-D ) @gkalpak


> That message at the bottom is indeed a little confusing. Unfortunately, afaict that message is displayed by GitHub and we have no way of customizing it.

Ah, wow. Sorry to learn that, but thanks


> Regarding redirecting people back to `issues/new/choose` from the fallback template: We really, really want people to use one of the templates 😃

Hehe, that is probably a good thing indeed, but we need to stay realistic until the (featured) templates cover all situations.


> I am not too worried about the human infinite loop (as I don't expect it to be an issue in practice). But if you are concerned, feel free to send a pull request to update the [fallback template](https://github.com/angular/angular/blob/a07cb097e9124738880f7978658a2972d25b892e/.github/ISSUE_TEMPLATE.md) to make sure we break out of the loop 😉

Hehe, the report might seem exaggerated, but the current situation is certainly confusing / sub-optimal. If you are referring to a ""merge request"", I have not changed anything, but it seems trivial.
Is there a reason why this ticket is closed?","[BLOCK QUOTE].

My ""pleasure"" (I guess :-D ) [USER]


[BLOCK QUOTE].

Ah, wow. Sorry to learn that, but thanks


[BLOCK QUOTE].

Hehe, that is probably a good thing indeed, but we need to stay realistic until the (featured) templates cover all situations.


[BLOCK QUOTE].

Hehe, the report might seem exaggerated, but the current situation is certainly confusing / sub-optimal. If you are referring to a ""merge request"", I have not changed anything, but it seems trivial.
Is there a reason why this ticket is closed?",0,0,0,0,0,1,Confusion,,Confusion,,
webpack/webpack,pull_request,82121251,2016-10-06 5:56:20,NejcZdovc,I am not sure what you mean by that,I am not sure what you mean by that,0,0,0,0,0,1,Confusion,,Confused,,
webpack/webpack,pull_request,89186541,2016-11-22 19:02:17,SpaceK33z,It seems like you don't use this require anywhere?,It seems like you don't use this require anywhere?,0,0,0,0,0,1,Confusion,,,,
webpack/webpack,pull_request,94506335,2017-01-03 23:34:36,timse,"not sure, which space are you guys referring to? or should i add one here?","not sure, which space are you guys referring to? or should i add one here?",0,0,0,0,0,1,Confusion,,,,
webpack/webpack,pull_request,95076433,2017-01-08 11:03:29,alistairjcbrown,❓ Not sure if this file should have been committed,❓ Not sure if this file should have been committed,0,0,0,0,0,1,Confusion,,Confusion,,
webpack/webpack,pull_request,97830353,2017-01-25 17:18:24,Tom910,"Done. Strangely, falling tests, when I tried to remove it before","Done. Strangely, falling tests, when I tried to remove it before",0,0,0,0,0,1,Confusion,,unexpected behaviour,,
webpack/webpack,pull_request,117588007,2017-05-19 22:37:31,bdwain,on second thought not sure i should have switched n and t. it looks like it might change the behavior of the resulting code. but i'm not sure why the output switched either.,on second thought not sure i should have switched n and t. it looks like it might change the behavior of the resulting code. but i'm not sure why the output switched either.,0,0,0,0,0,1,Confusion,,Confusion,,
webpack/webpack,pull_request,138079032,2017-09-11 14:02:38,rrharvey,Okay thanks. I wasn't sure about that.,Okay thanks. I wasn't sure about that.,0,0,0,0,0,1,Confusion,,Confusion,,
webpack/webpack,pull_request,157990120,2017-12-20 10:41:44,ooflorent,"Not sure about this. Once `prettier` will land, we won't have to worry anymore","Not sure about this. Once `prettier` will land, we won't have to worry anymore",0,0,0,0,0,1,Confusion,,uncertainty → confusion,,
webpack/webpack,pull_request,186056719,2018-05-04 11:36:31,montogeek,I am not sure if it is fine to edit an existing test.,I am not sure if it is fine to edit an existing test.,0,0,0,0,0,1,Confusion,,,,
webpack/webpack,pull_request,191767183,2018-05-30 13:29:47,xtuc,"I'm stuck here, I don't know how to get the used exports @sokra thanks","I'm stuck here, I don't know how to get the used exports [USER] thanks",0,0,0,0,0,1,Confusion,,,1,
webpack/webpack,pull_request,197090722,2018-06-21 10:52:45,byzyk,"Not sure what exactly to put here, would appreciate some guidance","Not sure what exactly to put here, would appreciate some guidance",0,0,0,0,0,1,Confusion,,,,
webpack/webpack,pull_request,202604993,2018-07-16 8:31:18,ooflorent,Not sure why the snapshots changed...,Not sure why the snapshots changed...,0,0,0,0,0,1,Confusion,,Confusion,,
webpack/webpack,pull_request,215908087,2018-09-07 9:56:06,ooflorent,This change is strange. Why is there such a big difference?,This change is strange. Why is there such a big difference?,0,0,0,0,0,1,Confusion,,,,
webpack/webpack,pull_request,243922465,2018-12-25 19:03:23,sokra,Not sure if the test makes sense this way,Not sure if the test makes sense this way,0,0,0,0,0,1,Confusion,,uncertainty → confusion,,
webpack/webpack,pull_request,245948453,2019-01-08 10:36:56,sokra,"Why is this change made?

We want to have caching in the CI.","Why is this change made?

We want to have caching in the CI.",0,0,0,0,0,1,Confusion,,Confusion,,
webpack/webpack,pull_request,247910899,2019-01-15 14:24:25,JanJakes,"I thought the original pull request needed just a rebase. I'll look into it. Do you have any suggestions what needs to be done?

Also - I'm not sure why there was such a complex test function https://github.com/webpack/webpack/pull/8614/files#diff-741d374868f6de786477bdcfbaf6fa81R32, the test can be simpler, right?

And looking at it some more, maybe `Preserve existing chunk as an entrypoint when it has matching modules` is not a very clear description, or is it? I'd suggest something like `Preserve entrypoint when it has same name as chunk`?","""I thought the original pull request needed just a rebase. I'll look into it. Do you have any suggestions what needs to be done?

Also - I'm not sure why there was such a complex test function [URL], the test can be simpler, right?

And looking at it some more, maybe `Preserve existing chunk as an entrypoint when it has matching modules` is not a very clear description, or is it? I'd suggest something like `Preserve entrypoint when it has same name as chunk`?""",0,0,0,0,0,1,Confusion,,Confusion,,
webpack/webpack,pull_request,450314177,2020-07-06 15:46:49,vankop,"Not sure, maybe better slice on line 2378","Not sure, maybe better slice on line 2378",0,0,0,0,0,1,Confusion,,uncertainty → confusion,,
webpack/webpack,pull_request,453322531,2020-07-12 14:20:55,vankop,cache results at least for first one.. not sure because of merge result is cached (at least for resolver options),cache results at least for first one.. not sure because of merge result is cached (at least for resolver options),0,0,0,0,0,1,Confusion,,uncertainty → confusion,,
webpack/webpack,pull_request,488231078,2020-09-14 21:29:45,vankop,not sure what is correct now.. web or browser? @sokra,not sure what is correct now.. web or browser? [USER],0,0,0,0,0,1,Confusion,,,,
Microsoft/TypeScript,pull_request,494426360,2020-09-24 15:48:46,sandersn,"this error comes from the same information as before, and is just as correct; I'm not sure what caused it to change, though.","this error comes from the same information as before, and is just as correct; I'm not sure what caused it to change, though.",0,0,0,0,0,1,Confusion,,,,
Microsoft/TypeScript,pull_request,539004530,2020-12-09 4:52:26,ShuiRuTian,"Oh.... Sorry for the misleading...
And, I am a little confused, if there is not any special folder, according to the module resolution https://www.typescriptlang.org/docs/handbook/module-resolution.html. How could file find the correct modules? Did I miss something?","Oh.... Sorry for the misleading...
And, I am a little confused, if there is not any special folder, according to the module resolution [URL] How could file find the correct modules? Did I miss something?",0,0,0,0,0,1,Confusion,,Confusion,,
Microsoft/TypeScript,pull_request,560552229,2021-01-19 22:50:25,sandersn,"Oh, github didn't load the previous 3 comments before I commented. I guess the point is that I think the comment is not confusing, even if the code itself is.","Oh, github didn't load the previous 3 comments before I commented. I guess the point is that I think the comment is not confusing, even if the code itself is.",0,0,0,0,0,1,Confusion,,(Code) Confusing,,
Microsoft/TypeScript,pull_request,562258053,2021-01-21 23:11:06,weswigham,"Hm, so the user test previously just applied a custom tsconfig to the contents of the `src` directory and built it. That actually includes way more than they typecheck in their own build: https://github.com/prettier/prettier/blob/master/tsconfig.json Do we want to continue checking the whole src folder under our own rules like the `user` test used to, or should we use their build like this?","Hm, so the user test previously just applied a custom tsconfig to the contents of the `src` directory and built it. That actually includes way more than they typecheck in their own build: [URL] Do we want to continue checking the whole src folder under our own rules like the `user` test used to, or should we use their build like this?",0,0,0,0,0,1,Confusion,,Uncertainty -> Confusion -> Surprise,,
Microsoft/TypeScript,pull_request,562449136,2021-01-22 7:58:46,DanielRosenwasser,"Wait, what do you mean? And is this a TS bug too?","Wait, what do you mean? And is this a TS bug too?",0,0,0,0,0,1,Confusion,,,,
Microsoft/TypeScript,pull_request,572453108,2021-02-08 23:35:45,andrewbranch,I don’t understand this; can you explain?,I don’t understand this; can you explain?,0,0,0,0,0,1,Confusion,,,,
Microsoft/TypeScript,pull_request,583178068,2021-02-25 20:56:32,DanielRosenwasser,Does this cause us to be any more eager in resolving method types than before?,Does this cause us to be any more eager in resolving method types than before?,0,0,0,0,0,1,Confusion,,,,
Microsoft/TypeScript,pull_request,613450356,2021-04-14 17:42:55,andrewbranch,"This name is a little confusing—it looks like it’s getting the constraint of a type argument, and then optionally drilling into a property of that constraint type, based on the syntax location of the cursor. I was confused about why we’d want to get a subtype of a type argument when its constraint is necessarily a supertype of it. Maybe `getConstraintOfTypeArgumentProperty` or something?","This name is a little confusing—it looks like it’s getting the constraint of a type argument, and then optionally drilling into a property of that constraint type, based on the syntax location of the cursor. I was confused about why we’d want to get a subtype of a type argument when its constraint is necessarily a supertype of it. Maybe `getConstraintOfTypeArgumentProperty` or something?",0,0,0,0,0,1,Confusion,,Confusion,,
Microsoft/TypeScript,pull_request,615399836,2021-04-18 13:30:59,Zzzen,😕 So we should simply ignore private `Symbol.iterator/Symbol.asyncIterator` when checking unused members?,😕 So we should simply ignore private `Symbol.iterator/Symbol.asyncIterator` when checking unused members?,0,0,0,0,0,1,Confusion,,Confusion (emoji) -> Surprise,,
angular/angular,pull_request,625279107,2021-05-03 18:28:08,petebacondarwin,It doesn't appear to be deleted?,It doesn't appear to be deleted?,0,0,0,0,0,1,Confusion,,Confusion,,
angular/angular,pull_request,628914459,2021-05-09 16:42:53,petebacondarwin,"I'm not sure why this code is here, and why it is hard-coded to the `/testing/` path.","I'm not sure why this code is here, and why it is hard-coded to the `/testing/` path.",0,0,0,0,0,1,Confusion,,,,
angular/angular,pull_request,630039493,2021-05-11 10:19:34,gkalpak,Why is the `| null` part needed? 😕,Why is the `| null` part needed? 😕,0,0,0,0,0,1,Confusion,,uncertainty → confusion,,
angular/angular,pull_request,635391807,2021-05-19 16:13:15,gkalpak,"OOC, why move this here? :confused:","OOC, why move this here? :confused:",0,0,0,0,0,1,Confusion,,Confusion,,
Microsoft/TypeScript,pull_request,644306608,2021-06-02 20:42:57,amcasey,"Sorry, I don't understand this comment.","Sorry, I don't understand this comment.",0,0,0,0,0,1,Confusion,,,,
flutter/flutter,pull_request,644370206,2021-06-02 22:52:47,gspencergoog,Why just the first one? Why not hide them all?,Why just the first one? Why not hide them all?,0,0,0,0,0,1,Confusion,,,,
Microsoft/TypeScript,pull_request,646623642,2021-06-07 14:09:42,andrewbranch,I’m not 100% sure what the implications are for removing it—we should check with @mjbvz ad @uniqueiniquity.,I’m not 100% sure what the implications are for removing it—we should check with [USER] ad [USER].,0,0,0,0,0,1,Confusion,,Uncertainty -> Confusion -> Surprise,,
flutter/flutter,pull_request,651170934,2021-06-14 18:15:12,Piinks,I am not sure what this id is adding. Is this meant to be used in the test?,I am not sure what this id is adding. Is this meant to be used in the test?,0,0,0,0,0,1,Confusion,,uncertainty → confusion,,
flutter/flutter,pull_request,661682280,2021-06-30 17:35:25,LongCatIsLooong,Ah I see. But I'm not sure if there's a good way to check if a `FocusNode` is already `dispose`d. It seems fine to keep a `dispose`d `FocusNode` around? In `_applyFocusChange` if either of these 2 nodes are detached from the tree then we throw the entry away anyways.,Ah I see. But I'm not sure if there's a good way to check if a `FocusNode` is already `dispose`d. It seems fine to keep a `dispose`d `FocusNode` around? In `_applyFocusChange` if either of these 2 nodes are detached from the tree then we throw the entry away anyways.,0,0,0,0,0,1,Confusion,,,,
flutter/flutter,pull_request,661718222,2021-06-30 18:30:31,LongCatIsLooong,"> The first row will add to the tree and then remove within the first frame(because the initialScrollOffset> 0).

It sounds like with the current implementation something in the first row should be auto-focused, and then it will be unfocused so the scope is gonna get the focus,
and with this patch the second row (or whoever got mounted first and remain attached after the first frame) should be autofocused.

I'm not sure what the expected behavior is in this case.","[BLOCK QUOTE].

It sounds like with the current implementation something in the first row should be auto-focused, and then it will be unfocused so the scope is gonna get the focus,
and with this patch the second row (or whoever got mounted first and remain attached after the first frame) should be autofocused.

I'm not sure what the expected behavior is in this case.",0,0,0,0,0,1,Confusion,,Confusion,,
flutter/flutter,pull_request,662590100,2021-07-01 21:02:19,LongCatIsLooong,Yeah that sounds good! I was a bit confused about what `delta` was since there are at least 2 pointers involved in a scale gesture.,Yeah that sounds good! I was a bit confused about what `delta` was since there are at least 2 pointers involved in a scale gesture.,0,0,0,0,0,1,Confusion,,Confusion -> Surprise,,
flutter/flutter,pull_request,662642181,2021-07-01 23:14:02,zanderso,I don't understand. Is the concern that there might be multiple instances of the same component running?,I don't understand. Is the concern that there might be multiple instances of the same component running?,0,0,0,0,0,1,Confusion,,Confusion,,
Microsoft/TypeScript,pull_request,664890186,2021-07-06 21:28:55,weswigham,I'm... Not even sure what's different at a glance,I'm... Not even sure what's different at a glance,0,0,0,0,0,1,Confusion,,Uncertain -> Confusion,,
flutter/flutter,pull_request,665720185,2021-07-07 21:32:58,HansMuller,"Not sure why we're doing case analysis here. The value of `shape` can be any OutlinedBorder, not just one of the predefined subclasses. Why is `shape!.paint(canvas, _thumbRect!)` insufficient?","Not sure why we're doing case analysis here. The value of `shape` can be any OutlinedBorder, not just one of the predefined subclasses. Why is `shape!.paint(canvas, _thumbRect!)` insufficient?",0,0,0,0,0,1,Confusion,,Confuse,,1
angular/angular,pull_request,667366663,2021-07-10 17:54:15,gkalpak,I wonder if this comment is still relevant with `textContent` 🤔,I wonder if this comment is still relevant with `textContent` 🤔,0,0,0,0,0,1,Confusion,,,,
angular/angular,pull_request,671719392,2021-07-17 16:54:52,dario-piotrowicz,I am not sure about this... it looks nicer but maybe it's be better not to use new JS features?,I am not sure about this... it looks nicer but maybe it's be better not to use new JS features?,0,0,0,0,0,1,Confusion,,Confusion,,
angular/angular,pull_request,677464104,2021-07-27 13:44:24,gkalpak,"I am a little confused by this implementation 😕 (I am probably missing something 😅)
Why aren't you using something more similar to https://github.com/angular/angular/pull/42608#discussion_r671806780? What are you trying to improve on by having two different code paths?",I am a little confused by this implementation 😕 (I am probably missing something 😅) Why aren't you using something more similar to [URL] What are you trying to improve on by having two different code paths?,0,0,0,0,0,1,Confusion,,Confusion -> Surprise,,
Microsoft/TypeScript,pull_request,677808605,2021-07-27 21:20:09,dsherret,I'm not sure about adding these. Is this the way to do it or is there a better way?,I'm not sure about adding these. Is this the way to do it or is there a better way?,0,0,0,0,0,1,Confusion,,Uncertainty -> Confusion,,
Microsoft/TypeScript,pull_request,678661619,2021-07-28 21:22:45,dsherret,Cool! Is the name ok? `ImportMetaKeyword`/`NewTargetKeyword`? I'm not sure.,Cool! Is the name ok? `ImportMetaKeyword`/`NewTargetKeyword`? I'm not sure.,0,0,0,0,0,1,Confusion,,Uncertainty -> Confusion,,
flutter/flutter,pull_request,684542134,2021-08-06 23:06:44,LongCatIsLooong,It's not clear to me what the differences are between expand and extend from reading the documentation.,It's not clear to me what the differences are between expand and extend from reading the documentation.,0,0,0,0,0,1,Confusion,,Confusion,,
flutter/flutter,pull_request,685380165,2021-08-09 17:19:48,jonahwilliams,I'm not quite sure what to do with the scale slop right now.,I'm not quite sure what to do with the scale slop right now.,0,0,0,0,0,1,Confusion,,Uncertainty -> Confusion,,
Microsoft/TypeScript,pull_request,691577537,2021-08-18 20:24:13,DanielRosenwasser,Why is this here?,Why is this here?,0,0,0,0,0,1,Confusion,,,,
flutter/flutter,pull_request,706423410,2021-09-10 19:32:40,flar,"I see that there are some asserts in here, but not sure if they protect every value test or not.","I see that there are some asserts in here, but not sure if they protect every value test or not.",0,0,0,0,0,1,Confusion,,uncertainty → confusion,,
angular/angular,pull_request,716230227,2021-09-26 16:41:56,alan-agius4,"I highly doubt, but I can check tomorrow.","I highly doubt, but I can check tomorrow.",0,0,0,0,0,1,Confusion,,uncertainty → confusion,,
flutter/flutter,pull_request,717777299,2021-09-28 17:00:33,chunhtai,I thought the scheduleMicrotask will also be pushed at the end of the frame? or am I missing something?,I thought the scheduleMicrotask will also be pushed at the end of the frame? or am I missing something?,0,0,0,0,0,1,Confusion,,Confusion,,
Microsoft/TypeScript,pull_request,720239843,2021-10-01 13:20:38,orouz,i'm not sure but i think this part was just trying to match the result of `findRenameLocations`. doesn't look like we _need_ this info.,i'm not sure but i think this part was just trying to match the result of `findRenameLocations`. doesn't look like we _need_ this info.,0,0,0,0,0,1,Confusion,,uncertainty → confusion,,
Microsoft/TypeScript,pull_request,722392706,2021-10-05 16:04:39,MartinJohns,Why did you mark this conversation as resolved? I'm confused.,Why did you mark this conversation as resolved? I'm confused.,0,0,0,0,0,1,Confusion,,,,
angular/angular,pull_request,724881472,2021-10-08 10:07:55,petebacondarwin,"I did do this at one point but I was concerned that it is a bit hard to work out the cases for the `if` to succeed, since it relies on `undefined !== 0` in the case where `associatedMessage` is not defined. So I went with the more explicit notation since I found it easier to grok the two cases.
Do you not have this problem? Perhaps it is just me?","I did do this at one point but I was concerned that it is a bit hard to work out the cases for the `if` to succeed, since it relies on `undefined !== 0` in the case where `associatedMessage` is not defined. So I went with the more explicit notation since I found it easier to grok the two cases.
Do you not have this problem? Perhaps it is just me?",0,0,0,0,0,1,Confusion,,,,
angular/angular,pull_request,730257276,2021-10-16 12:30:03,gkalpak,This class doesn't seem to be used 😕,This class doesn't seem to be used 😕,0,0,0,0,0,1,Confusion,,,,
flutter/flutter,pull_request,732293262,2021-10-19 22:39:29,gspencergoog,"Sorry, I'm not quite sure I'm following: you want to make sure that if `errorsAreFatal` is set that `hadWarningOutput` is false in the case where we're going to exit cleanly? So, in other words, making sure that there were no warnings if there were no fatal errors?

I was intending for it to be the case that if `errorsAreFatal` is set, but not `warningsAreFatal` that only errors cause failure exit, and if `warningsAreFatal` is set, that _either_ warnings or errors would cause a failure exit (basically that fatal warnings implies fatal errors too). Does that sound right to you?","Sorry, I'm not quite sure I'm following: you want to make sure that if `errorsAreFatal` is set that `hadWarningOutput` is false in the case where we're going to exit cleanly? So, in other words, making sure that there were no warnings if there were no fatal errors?

I was intending for it to be the case that if `errorsAreFatal` is set, but not `warningsAreFatal` that only errors cause failure exit, and if `warningsAreFatal` is set, that _either_ warnings or errors would cause a failure exit (basically that fatal warnings implies fatal errors too). Does that sound right to you?",0,0,0,0,0,1,Confusion,,Confused,,
flutter/flutter,pull_request,736878776,2021-10-26 20:05:39,smitsk,"I'm not sure, this test is similar to the previous one for ltr text.","I'm not sure, this test is similar to the previous one for ltr text.",0,0,0,0,0,1,Confusion,,Confusion,,
angular/angular,pull_request,738243449,2021-10-28 10:12:30,gkalpak,"Sorry, I am still not following 😅","Sorry, I am still not following 😅",0,0,0,0,0,1,Confusion,,Not following -> Confusion -> Surprise,,
webpack/webpack,issue,787106547,2021-02-27 17:28:16,ASDFGerte,"Yes, `output.devtoolNamespace: 'no_slashes_here'` fixes the issue, by just using something other than package name, thanks. Sorry for bothering, i should probably read the entire webpack docs from start to finish one day. Stackoverflow couldn't help for days.

I am still a bit confused, why a default of package name including slashes was chosen, but i guess I can wonder about that after some more research on the topic.

Thanks again :)","Yes, `output.devtoolNamespace: 'no_slashes_here'` fixes the issue, by just using something other than package name, thanks. Sorry for bothering, i should probably read the entire webpack docs from start to finish one day. Stackoverflow couldn't help for days.

I am still a bit confused, why a default of package name including slashes was chosen, but i guess I can wonder about that after some more research on the topic.

Thanks again :)",0,0,0,0,0,1,Confusion,,,1,
webpack/webpack,issue,799785939,2021-03-15 22:05:42,nerdo,"I didn't really run this part of my project on Friday, but I ran it as suggested all day today with no segfaults.

I'm a little confused as to what changed. I'm still running the same version of node as I was when using webpack 4 and didn't have this issue.

Is webpack requesting a different memory limit of node somehow? Or am I misunderstanding what's going on?","I didn't really run this part of my project on Friday, but I ran it as suggested all day today with no segfaults.

I'm a little confused as to what changed. I'm still running the same version of node as I was when using webpack 4 and didn't have this issue.

Is webpack requesting a different memory limit of node somehow? Or am I misunderstanding what's going on?",0,0,0,0,0,1,Confusion,,Confusion,,
webpack/webpack,issue,800194469,2021-03-16 11:54:27,alexander-akait,"> Is webpack requesting a different memory limit of node somehow?

No

Problem still exists? Do you try the latest version of v5?","[BLOCK QUOTE].

No

Problem still exists? Do you try the latest version of v5?",0,0,0,0,0,1,Confusion,,,,
webpack/webpack,issue,803216554,2021-03-20 1:27:40,cursorial,"I have signed CLA but job is marked as Pending, not sure how to resolve.","I have signed CLA but job is marked as Pending, not sure how to resolve.",0,0,0,0,0,1,Confusion,,Confusion,,
webpack/webpack,issue,829414970,2021-04-29 16:40:01,csvan,"Seems to be closed in Terser, but not sure if released

https://github.com/terser/terser/commit/84c1a314ed43fa3f367159c140175791b5d06b9c","Seems to be closed in Terser, but not sure if released

[URL]",0,0,0,0,0,1,Confusion,,uncertainty → confusion,,
angular/angular,issue,876841286,2021-07-09 1:11:33,PowerKiKi,"I hope I'm wrong, but I don't think this proposal would allow us to solve https://github.com/angular/components/issues/2574, according to the mentioned caveat.

This is because if my own code set `Validators.required` in a form control, then `@angular/material` has no way to know which function reference to use to check for the required validator presence. Is this correct ?

I was under the impression that this use-case was one of the major thing to solve.

If associating a validator with a name would properly solve all use-cases, maybe a redesign of the Forms API, that also include all the good things from #31963, should be considered, instead of doing half-measures ? A sort of `ReactiveFormsV2Module` ?","I hope I'm wrong, but I don't think this proposal would allow us to solve [URL] according to the mentioned caveat.

This is because if my own code set `Validators.required` in a form control, then `@angular/material` has no way to know which function reference to use to check for the required validator presence. Is this correct ?

I was under the impression that this use-case was one of the major thing to solve.

If associating a validator with a name would properly solve all use-cases, maybe a redesign of the Forms API, that also include all the good things from #31963, should be considered, instead of doing half-measures ? A sort of `ReactiveFormsV2Module` ?",0,0,0,0,0,1,Confusion,,,,
angular/angular,issue,880021733,2021-07-14 16:08:03,JoostK,Jetbrains has their own analysis of Angular templates so it's unclear whether this is an Angular bug or not.,Jetbrains has their own analysis of Angular templates so it's unclear whether this is an Angular bug or not.,0,0,0,0,0,1,Confusion,,uncertainty → confusion,,
angular/angular,issue,883212345,2021-07-20 8:40:06,gkalpak,"> Well, if you tried it you'd know.

Sorry, I am not sure what you mean by this 😕
Can you please elaborate?","[BLOCK QUOTE].

Sorry, I am not sure what you mean by this 😕
Can you please elaborate?",0,0,0,0,0,1,Confusion,,,,
webpack/webpack,issue,884985610,2021-07-22 15:03:37,alexander-akait,"@hipstersmoothie I don't understand you, what is mean `doesn't break windows`","[USER] I don't understand you, what is mean `doesn't break windows`",0,0,0,0,0,1,Confusion,,,,
webpack/webpack,issue,887448093,2021-07-27 11:53:12,nitinkatyal1314,"> `devServer` doesn't have this option

Are you sure about this? I am a little confused based on docs which actually point to `watchOptions` inside `devServer` conf. Also, when I put `{ followSymlinks: true }` in webpack conf, nothing happens but adding it to devServer actually makes my app to recompile (though it does not hot reloads).","[BLOCK QUOTE].

Are you sure about this? I am a little confused based on docs which actually point to `watchOptions` inside `devServer` conf. Also, when I put `{ followSymlinks: true }` in webpack conf, nothing happens but adding it to devServer actually makes my app to recompile (though it does not hot reloads).",0,0,0,0,0,1,Confusion,,,,
Microsoft/TypeScript,issue,910717385,2021-09-01 20:32:55,a-tarasyuk,My fault :confused:. What should be the name of the option for this case?,My fault :confused:. What should be the name of the option for this case?,0,0,0,0,0,1,Confusion,,Confusion,,
angular/angular,issue,913650309,2021-09-06 13:25:56,aetzlecx,Is it possible that my issue described here https://stackoverflow.com/questions/69074888/angular-ng-if-directive-breaks-web-component-exported-with-angular-elements is related to this issue here?,Is it possible that my issue described here [URL] is related to this issue here?,0,0,0,0,0,1,Confusion,,,,
webpack/webpack,issue,920818407,2021-09-16 11:27:30,vankop,@alexander-akait I actually don't understand what is an issue? original issue fixed in webpack@5,[USER] I actually don't understand what is an issue? original issue fixed in webpack[USER],0,0,0,0,0,1,Confusion,,,,
webpack/webpack,issue,923887913,2021-09-21 11:24:47,alexander-akait,"We already generate the same name, what is the problem?","We already generate the same name, what is the problem?",0,0,0,0,0,1,Confusion,,,,
angular/angular,issue,927873771,2021-09-27 13:25:47,petebacondarwin,Sorry not to reply sooner. I'm wondering if the benefits outway the effort and weirdnesses here...,Sorry not to reply sooner. I'm wondering if the benefits outway the effort and weirdnesses here...,0,0,0,0,0,1,Confusion,,,,
angular/angular,issue,930567715,2021-09-29 21:44:35,alxhub,Pull Approve is confused...,Pull Approve is confused...,0,0,0,0,0,1,Confusion,,Confusion,,
angular/angular,issue,932720637,2021-10-02 9:18:16,dario-piotrowicz,"> Thanks for this @hchiam. Can I check if you meant to update the yarn.lock file? If so, why? If not, can you remove it from the PR? Otherwise LGTM.

I'm not sure why I had to, but I needed the updated deps to be able to run the site locally. Feel free to commit changes to this PR to help us get the CI to pass.","[BLOCK QUOTE].

I'm not sure why I had to, but I needed the updated deps to be able to run the site locally. Feel free to commit changes to this PR to help us get the CI to pass.",0,0,0,0,0,1,Confusion,,uncertainty → confusion,,
Microsoft/TypeScript,issue,932996602,2021-10-03 17:52:06,fatcerberus,I don’t really understand what it is you’re asking for here?,I don’t really understand what it is you’re asking for here?,0,0,0,0,0,1,Confusion,,,,
webpack/webpack,issue,933361077,2021-10-04 10:42:47,dreyks,"well... I don't really remember why it was done like this (years ago). I think I'll just use the defaults now, was just surprised that webpack5 behaves differently than file-loader","well... I don't really remember why it was done like this (years ago). I think I'll just use the defaults now, was just surprised that webpack5 behaves differently than file-loader",0,0,0,0,0,1,Confusion,,,,
webpack/webpack,issue,935896634,2021-10-06 10:07:54,alexander-akait,"You have `target: 'node'`, so I don't understand","You have `target: 'node'`, so I don't understand",0,0,0,0,0,1,Confusion,,,,
angular/angular,issue,937303236,2021-10-06 22:57:23,hchiam,"> Thanks for this @hchiam. Can I check if you meant to update the yarn.lock file? If so, why? If not, can you remove it from the PR? Otherwise LGTM.

I'm not sure why I had to, but I needed the updated deps to be able to run the site locally. Feel free to commit changes to this PR to help us get the CI to pass.","[BLOCK QUOTE].

I'm not sure why I had to, but I needed the updated deps to be able to run the site locally. Feel free to commit changes to this PR to help us get the CI to pass.",0,0,0,0,0,1,Confusion,,Uncertainty -> Confusion,,
Microsoft/TypeScript,issue,939850663,2021-10-11 9:24:23,vonkanehoffen,"I also have a problem like this inside a monorepo, and just reinstalling the deps with `yarn` solves it. It's happened a few times. Don't know it could be something to do with the `yarn.lock` file getting out of sync after merging branches or something. The regenerated lock filed always shows a diff around the package referenced in the TS error.
Don't really understand what's going on but hope that helps someone.","I also have a problem like this inside a monorepo, and just reinstalling the deps with `yarn` solves it. It's happened a few times. Don't know it could be something to do with the `yarn.lock` file getting out of sync after merging branches or something. The regenerated lock filed always shows a diff around the package referenced in the TS error.
Don't really understand what's going on but hope that helps someone.",0,0,0,0,0,1,Confusion,,,,
Microsoft/TypeScript,issue,943854856,2021-10-15 0:09:47,DanielRosenwasser,Oof that's really confusing. Shouldn't `import` take priority over `types` too though?,Oof that's really confusing. Shouldn't `import` take priority over `types` too though?,0,0,0,0,0,1,Confusion,,,,
Microsoft/TypeScript,issue,945910040,2021-10-18 15:43:40,elibarzilay,"@rbuckton I'm confused about both points.
* For the first point, the only difference in going through a shell would be if the executable itself is a shell-variable. Given that `getDiffTool` returns the value from an envvar, I'm guessing that it's ok to assume that using a shell is no longer needed for this?
* Re the second point, I don't see how it's related, this is in a js file, so can be used without having anything built, no?","[USER] I'm confused about both points.
* For the first point, the only difference in going through a shell would be if the executable itself is a shell-variable. Given that `getDiffTool` returns the value from an envvar, I'm guessing that it's ok to assume that using a shell is no longer needed for this?
* Re the second point, I don't see how it's related, this is in a js file, so can be used without having anything built, no?",0,0,0,0,0,1,Confusion,,,,
flutter/flutter,issue,946396130,2021-10-19 6:09:29,bazinac,"Hmm, it might be the case, but I am wondering why it works fine the in production version of my app (which still uses Flutter 1.26 because of this issue).","Hmm, it might be the case, but I am wondering why it works fine the in production version of my app (which still uses Flutter 1.26 because of this issue).",0,0,0,0,0,1,Confusion,,,,
flutter/flutter,issue,946516684,2021-10-19 9:11:23,SebghatYusuf,"@darshankawar
Sure here it is, but I'm wondering why it was running smooth before?
```
sebghatullah@Sebghatullahs-Mac-mini ~ % flutter doctor -v
[✓] Flutter (Channel stable, 2.5.3, on macOS 11.2.3 20D91 darwin-arm, locale en-AF)
• Flutter version 2.5.3 at /Users/sebghatullah/FlutterDev/flutter
• Upstream repository https://github.com/flutter/flutter.git
• Framework revision 18116933e7 (4 days ago), 2021-10-15 10:46:35 -0700
• Engine revision d3ea636dc5
• Dart version 2.14.4
[✓] Android toolchain - develop for Android devices (Android SDK version 30.0.3)
• Android SDK at /Users/sebghatullah/Library/Android/sdk
• Platform android-30, build-tools 30.0.3
• Java binary at: /Applications/Android Studio.app/Contents/jre/jdk/Contents/Home/bin/java
• Java version OpenJDK Runtime Environment (build 11.0.8+10-b944.6916264)
• All Android licenses accepted.
[✓] Xcode - develop for iOS and macOS
• Xcode at /Applications/Xcode.app/Contents/Developer
• Xcode 12.5, Build version 12E262
• CocoaPods version 1.10.1
[✓] Chrome - develop for the web
• Chrome at /Applications/Google Chrome.app/Contents/MacOS/Google Chrome
[✓] Android Studio (version 4.2)
• Android Studio at /Applications/Android Studio.app/Contents
• Flutter plugin can be installed from:
🔨 https://plugins.jetbrains.com/plugin/9212-flutter
• Dart plugin can be installed from:
🔨 https://plugins.jetbrains.com/plugin/6351-dart
• Java version OpenJDK Runtime Environment (build 11.0.8+10-b944.6916264)
[✓] VS Code (version 1.61.1)
• VS Code at /Applications/Visual Studio Code.app/Contents
• Flutter extension version 3.27.0
[✓] Connected device (2 available)
• macOS (desktop) • macos • darwin-arm64 • macOS 11.2.3 20D91 darwin-arm
• Chrome (web) • chrome • web-javascript • Google Chrome 94.0.4606.81
• No issues found!
```","[USER]
Sure here it is, but I'm wondering why it was running smooth before?

[TRIPLE QUOTE].",0,0,0,0,0,1,Confusion,,,,
angular/angular,issue,947787018,2021-10-20 15:34:13,petebacondarwin,"Sounds good. I get a bit confused by ""language and locale"" since it feels like it is two separate things, where the CurrencyPipe only has a `locale` parameter, not a `language` parameter. So perhaps we could also drop the ""language and"" words?","Sounds good. I get a bit confused by ""language and locale"" since it feels like it is two separate things, where the CurrencyPipe only has a `locale` parameter, not a `language` parameter. So perhaps we could also drop the ""language and"" words?",0,0,0,0,0,1,Confusion,,,,
flutter/flutter,issue,948345870,2021-10-21 7:45:09,danagbemava-nc,"@weiminghuaa, I'm not certain what you're seeing can be classified as ""flickering"". I guess it's more like compared to the smooth animation of the hero, the leading of the appbar's sudden entrance feels janky by comparison.

Would that be a more accurate way to describe what you're seeing?","[USER] I'm not certain what you're seeing can be classified as ""flickering"". I guess it's more like compared to the smooth animation of the hero, the leading of the appbar's sudden entrance feels janky by comparison.

Would that be a more accurate way to describe what you're seeing?",0,0,0,0,0,1,Confusion,,uncertainty → confusion,,
flutter/flutter,issue,948473811,2021-10-21 10:28:26,danagbemava-nc,"I'm not entirely sure what you're asking.

Can you provide more details as to what you want to accomplish?","I'm not entirely sure what you're asking.

Can you provide more details as to what you want to accomplish?",0,0,0,0,0,1,Confusion,,uncertainty → confusion,,
flutter/flutter,issue,950358151,2021-10-24 16:58:22,stuartmorgan,"> But the description in pubspec.yaml is really misleading because Windows also has a ""File description"".

I'm not sure what you mean by ""misleading"". If you mean that changing it should change the corresponding entry in the RC file, that would ideally true of several things (notably, version) but isn't currently implemented for anything on Windows as discussed in https://github.com/flutter/flutter/issues/73652","[BLOCK QUOTE].

I'm not sure what you mean by ""misleading"". If you mean that changing it should change the corresponding entry in the RC file, that would ideally true of several things (notably, version) but isn't currently implemented for anything on Windows as discussed in [URL]",0,0,0,0,0,1,Confusion,,,,
flutter/flutter,issue,951608829,2021-10-26 6:40:27,darshankawar,I doubt if this is specific to Flutter then. you may try the same with native android and see if it occurs there too. I am inclined to think this could be related to gradle.,I doubt if this is specific to Flutter then. you may try the same with native android and see if it occurs there too. I am inclined to think this could be related to gradle.,0,0,0,0,0,1,Confusion,,uncertainty → confusion,,
flutter/flutter,issue,952086818,2021-10-26 16:03:26,arslankaleem7229,then what to do ?,then what to do ?,0,0,0,0,0,1,Confusion,,,,
angular/angular,issue,952931512,2021-10-27 13:29:39,petebacondarwin,"@crisbeto:

Tthe concern was more that `InjectFlags.Self` was not being passed through before, and now will be. So previously it would have had no effect and now it will. If this makes no difference then is there a reason to have that flag there at all?

Also, I don't understand why this code would fail after this PR but not before? Does passing `undefined` equate to passing `InjectFlags.Optional`?","[USER]

Tthe concern was more that `InjectFlags.Self` was not being passed through before, and now will be. So previously it would have had no effect and now it will. If this makes no difference then is there a reason to have that flag there at all?

Also, I don't understand why this code would fail after this PR but not before? Does passing `undefined` equate to passing `InjectFlags.Optional`?",0,0,0,0,0,1,Confusion,,,,
Microsoft/TypeScript,issue,955178251,2021-10-30 9:11:15,CapsAdmin,"I've also encountered this a few times and it's sometimes confusing. I use return instead of a comment as described in the issue but I've learned not to do this in typescript.
It's mostly confusing when you accidentally write code that returns. I just did this mistake now and was going to file an issue but found this issue instead. And for some reason my code is not marked as dead probably due to some bad setup in my vscode.","I've also encountered this a few times and it's sometimes confusing. I use return instead of a comment as described in the issue but I've learned not to do this in typescript.
It's mostly confusing when you accidentally write code that returns. I just did this mistake now and was going to file an issue but found this issue instead. And for some reason my code is not marked as dead probably due to some bad setup in my vscode.",0,0,0,0,0,1,Confusion,,,,
Microsoft/TypeScript,issue,956485425,2021-11-01 18:33:40,andrewbranch,"N.B. another workaround is writing the module augmentation for the _originally_ exporting module, i.e. `declare module ""../../main-package/interfaces/metadata.interface""`.

Honestly not sure whether this is a bug or not, as the two reexport syntaxes have different symbol representations under the hood. The fact that we're kind of exposing that here is definitely confusing and unintuitive, but I can't say with 100% certainty that there's not some logical reason or technical limitation behind it.","N.B. another workaround is writing the module augmentation for the _originally_ exporting module, i.e. `declare module ""../../main-package/interfaces/metadata.interface""`.

Honestly not sure whether this is a bug or not, as the two reexport syntaxes have different symbol representations under the hood. The fact that we're kind of exposing that here is definitely confusing and unintuitive, but I can't say with 100% certainty that there's not some logical reason or technical limitation behind it.",0,0,0,0,0,1,Confusion,,Confusion,,
flutter/flutter,issue,957815562,2021-11-02 15:24:10,arkanmgerges,I don't know why I can not see this in Android Studio,I don't know why I can not see this in Android Studio,0,0,0,0,0,1,Confusion,,,,
flutter/flutter,issue,958198295,2021-11-02 21:47:26,flar,"I can't say. For use in widgets, there are already a number of mechanisms to help them deal easily and naturally with Futures. It depends on what other use cases might be envisioned, but the Future version would mean you wouldn't really have to explain the need to keep it away from the builder thread.

Also, I guess it depends on if the Future version was implemented in such a way that the work was done on another thread. If it is just a cover for doing asynchronous work on the same thread then we'd still potentially see some disruption of frame build times maybe?

Perhaps @chinmaygarde or @zanderso might have some insights.","I can't say. For use in widgets, there are already a number of mechanisms to help them deal easily and naturally with Futures. It depends on what other use cases might be envisioned, but the Future version would mean you wouldn't really have to explain the need to keep it away from the builder thread.

Also, I guess it depends on if the Future version was implemented in such a way that the work was done on another thread. If it is just a cover for doing asynchronous work on the same thread then we'd still potentially see some disruption of frame build times maybe?

Perhaps [USER] or [USER] might have some insights.",0,0,0,0,0,1,Confusion,,Uncertainty -> Confusion -> Surprise,,
angular/angular,issue,958289760,2021-11-02 22:30:13,jessicajaniuk,"@devversion This PR was approved, but looks like it stalled. Can you take a look at it again?","[USER] This PR was approved, but looks like it stalled. Can you take a look at it again?",0,0,0,0,0,1,Confusion,,,,
flutter/flutter,issue,958594871,2021-11-03 1:55:53,stuartmorgan,"Neither of the links have the problem shown in the screenshots when I follow them, so it's either transient or machine/browser-specific. Do you still see it?","Neither of the links have the problem shown in the screenshots when I follow them, so it's either transient or machine/browser-specific. Do you still see it?",0,0,0,0,0,1,Confusion,,,,
flutter/flutter,issue,958713799,2021-11-03 7:41:40,arkanmgerges,"Strange, the same thing, no error shown after reinstalling Android Studio, also I'm using my physical phone (Samsung Galaxy Note 10+)
![image](https://user-images.githubusercontent.com/7836805/140023995-ffeedd97-55ae-4a3a-9501-7f2bfb6977fd.png)","Strange, the same thing, no error shown after reinstalling Android Studio, also I'm using my physical phone (Samsung Galaxy Note 10+)

![image]([URL]",0,0,0,0,0,1,Confusion,,,,
angular/angular,issue,959774272,2021-11-03 17:46:20,bampakoa,"Hey @A-5ingh 👋, not sure why _file_ an issue is different than _report_ 😕 I think that the former is a valid word for filing/reporting issues, bugs, and other things.","Hey [USER] 👋, not sure why _file_ an issue is different than _report_ 😕 I think that the former is a valid word for filing/reporting issues, bugs, and other things.",0,0,0,0,0,1,Confusion,,,1,
flutter/flutter,issue,960653927,2021-11-04 11:05:27,maheshmnj,"> The solution is provided by @kxifenger , But can you tell us why this is done?

@yanwei49 I am not really sure why it worked.

>But now the problem has been solved

Provided you last message I feel it's safe to close the issue, If you disagree feel free to write in the comments and I will reopen it.","[BLOCK QUOTE].

@yanwei49 I am not really sure why it worked.

[BLOCK QUOTE].

Provided you last message I feel it's safe to close the issue, If you disagree feel free to write in the comments and I will reopen it.",0,0,0,0,0,1,Confusion,,not sure -> Uncertainty -> Confusion,,
flutter/flutter,pull_request,658147515,2021-06-24 17:30:03,LongCatIsLooong,Oh sorry I thought this line was in `FocusScopeState`. Although very unlikely but it still can happen if someone schedules a `focsusNode.dispose` in a postframe callback right?,Oh sorry I thought this line was in `FocusScopeState`. Although very unlikely but it still can happen if someone schedules a `focsusNode.dispose` in a postframe callback right?,0,0,0,0,0,1,Curiosity,,,,
webpack/webpack,pull_request,93185043,2016-12-20 7:48:32,sokra,"`;` missing, but i wonder why this is not catched by the linting...","`;` missing, but i wonder why this is not catched by the linting...",0,0,0,0,0,1,Curiosity,,,,
webpack/webpack,pull_request,160947935,2018-01-11 12:45:39,sokra,"hmm... could you move the ""if"" to these calls.","hmm... could you move the ""if"" to these calls.",0,0,0,0,0,1,Curiosity,,Curiosity,,
webpack/webpack,pull_request,181647184,2018-04-16 7:49:05,glen-84,"Just curious – have you considered switching to TypeScript entirely, instead of using doc comments?

```ts
private invalidateCache() {
```","Just curious – have you considered switching to TypeScript entirely, instead of using doc comments?

[TRIPLE QUOTE].",0,0,0,0,0,1,Curiosity,,Curiosity,,
webpack/webpack,pull_request,187571129,2018-05-11 9:53:17,Jessidhia,Why is this hardcoded? 🤔,Why is this hardcoded? 🤔,0,0,0,0,0,1,Curiosity,,,,
webpack/webpack,pull_request,204883888,2018-07-24 19:33:25,ooflorent,I don't understand. The specifier is defined in `dep`. What are you referring to?,I don't understand. The specifier is defined in `dep`. What are you referring to?,0,0,0,0,0,1,Curiosity,,Curiosity,,
webpack/webpack,pull_request,209835333,2018-08-14 5:54:34,id0Sch,"that's what came out of `declarator.init`, could you please elaborate why so I can try and figure out what went wrong?

Sorry about the delay, I've been caught up in so many things this summer.","that's what came out of `declarator.init`, could you please elaborate why so I can try and figure out what went wrong?

Sorry about the delay, I've been caught up in so many things this summer.",0,0,0,0,0,1,Curiosity,,,,
webpack/webpack,pull_request,245470523,2019-01-05 7:55:14,ooflorent,Could you please give some background about this change? What does it match? What’s the reasoning here?,Could you please give some background about this change? What does it match? What’s the reasoning here?,0,0,0,0,0,1,Curiosity,,Curiosity,,
webpack/webpack,pull_request,245951861,2019-01-08 10:48:01,hulkish,I see... are you saying it would break for folks who are overriding the default `inputFileSystem`?,I see... are you saying it would break for folks who are overriding the default `inputFileSystem`?,0,0,0,0,0,1,Curiosity,,,,
webpack/webpack,pull_request,328533277,2019-09-26 9:52:09,vankop,@sokra I am just curious why you use here lazy sorting? Looks like inserting in right order will be faster.,[USER] I am just curious why you use here lazy sorting? Looks like inserting in right order will be faster.,0,0,0,0,0,1,Curiosity,,Curiosity,,
Microsoft/TypeScript,pull_request,459807477,2020-07-24 1:05:36,amcasey,"I haven't found that I've needed that in my own investigations but, to be fair, I don't often investigate composite projects. Is there a scenario you have in mind? Also, how would I distinguish those files?","I haven't found that I've needed that in my own investigations but, to be fair, I don't often investigate composite projects. Is there a scenario you have in mind? Also, how would I distinguish those files?",0,0,0,0,0,1,Curiosity,,,,
Microsoft/TypeScript,pull_request,521689646,2020-11-11 23:02:07,amcasey,I'm missing something - how would use a dash help with batch processing?,I'm missing something - how would use a dash help with batch processing?,0,0,0,0,0,1,Curiosity,,,,
webpack/webpack,pull_request,536078285,2020-12-04 12:52:50,martpie,"I have a question regarding this behavior, sorry in advance if it sounds silly. 

Though it'd be perfect for our usecase (🙌), is it the usual way of treating include/exclude in the other places of Webpack (for modules rules for example)?

In other words, what is considered _the_ best practice? includes overruling exludes? or excludes overruling includes?","I have a question regarding this behavior, sorry in advance if it sounds silly. 

Though it'd be perfect for our usecase (🙌), is it the usual way of treating include/exclude in the other places of Webpack (for modules rules for example)?

In other words, what is considered _the_ best practice? includes overruling exludes? or excludes overruling includes?",0,0,0,0,0,1,Curiosity,,Curiosity -> Surprise,1,
angular/angular,pull_request,616856306,2021-04-20 16:37:31,atscott,why was this changed?,why was this changed?,0,0,0,0,0,1,Curiosity,,Curiosity,,
Microsoft/TypeScript,pull_request,620692134,2021-04-26 22:25:21,sandersn,"Double-checking my understanding; is this correct?: it's enough to bail after seeing that typeParameters is set, because a normal run of this function sets both typeParameters and parameters. So you don't have to check parameters as well.","Double-checking my understanding; is this correct?: it's enough to bail after seeing that typeParameters is set, because a normal run of this function sets both typeParameters and parameters. So you don't have to check parameters as well.",0,0,0,0,0,1,Curiosity,,,,
angular/angular,pull_request,623079420,2021-04-29 13:58:44,kapunahelewong,"Hey @gkalpak, could you help me with this? I don't know how to do it.",Hey [USER] could you help me with this? I don't know how to do it.,0,0,0,0,0,1,Curiosity,,,,
Microsoft/TypeScript,pull_request,624162350,2021-04-30 20:08:53,sheetalkamat,Yes this is accurate but what i am asking is do we want to show these options when --showConfig is run?,Yes this is accurate but what i am asking is do we want to show these options when --showConfig is run?,0,0,0,0,0,1,Curiosity,,Curiosity,,
Microsoft/TypeScript,pull_request,625401548,2021-05-03 22:16:14,jessetrinity,"Curious - who uses this, and what do they use it for?","Curious - who uses this, and what do they use it for?",0,0,0,0,0,1,Curiosity,,,,
angular/angular,pull_request,628916017,2021-05-09 16:57:10,petebacondarwin,Is this change necessary?,Is this change necessary?,0,0,0,0,0,1,Curiosity,,,,
angular/angular,pull_request,629622724,2021-05-10 19:21:20,gkalpak,"OOC, why is this change needed?","OOC, why is this change needed?",0,0,0,0,0,1,Curiosity,,Curiosity,,
Microsoft/TypeScript,pull_request,638210024,2021-05-24 19:06:22,andrewbranch,"Yeah, this was just a mistake, but if I do want to share the watches with the closed script info watches (and I think I do—isn’t sharing minimizing recursive directory watches by sharing them good practice?), I guess I will end up using this type?","Yeah, this was just a mistake, but if I do want to share the watches with the closed script info watches (and I think I do—isn’t sharing minimizing recursive directory watches by sharing them good practice?), I guess I will end up using this type?",0,0,0,0,0,1,Curiosity,,Curiosity,,
flutter/flutter,pull_request,643465346,2021-06-01 20:42:58,goderbauer,Is this still valid? Looks like _layer is now nulled regardless of isRepaintBoundary?,Is this still valid? Looks like _layer is now nulled regardless of isRepaintBoundary?,0,0,0,0,0,1,Curiosity,,Curiosity,,
Microsoft/TypeScript,pull_request,644252582,2021-06-02 19:14:06,jessetrinity,"ahh, that's better. Why does it have significantly worse performance though?","ahh, that's better. Why does it have significantly worse performance though?",0,0,0,0,0,1,Curiosity,,Curious,,
angular/angular,pull_request,649886645,2021-06-11 10:56:52,gkalpak,"OOC, why not include this when creating the array right above?","OOC, why not include this when creating the array right above?",0,0,0,0,0,1,Curiosity,,,,
flutter/flutter,pull_request,650017091,2021-06-11 14:19:57,chinmoy12c,I'm not quite sure I understand. Could you please elaborate on what you mean by 'use { }'?,I'm not quite sure I understand. Could you please elaborate on what you mean by 'use { }'?,0,0,0,0,0,1,Curiosity,,,,
angular/angular,pull_request,656819209,2021-06-23 7:10:14,gkalpak,"Given that this is an interface, do we care about minification?","Given that this is an interface, do we care about minification?",0,0,0,0,0,1,Curiosity,,,,
angular/angular,pull_request,657245532,2021-06-23 15:53:30,petebacondarwin,"I am wondering whether it is better to use a regex replacement here?
Something like:
```ts
rule.selector = rule.selector.replace(/^@(-webkit-)?keyframes\s([^\s]+)\s/, (_, webkit, keyframeName) => {
unscopedKeyframes.add(keyframeName);
return `@${webkit}keyframes ${keyframeName}_${scopeSelector} `;
});
```","I am wondering whether it is better to use a regex replacement here?
Something like:
[TRIPLE QUOTE].",0,0,0,0,0,1,Curiosity,,Curiosity,,
flutter/flutter,pull_request,659184414,2021-06-26 16:05:24,jonahwilliams,is this comment still true?,is this comment still true?,0,0,0,0,0,1,Curiosity,,,,
Microsoft/TypeScript,pull_request,659972976,2021-06-28 17:17:30,amcasey,"Why 1 and not 0? (Asking out of total ignorance, never having seen this code before.)","Why 1 and not 0? (Asking out of total ignorance, never having seen this code before.)",0,0,0,0,0,1,Curiosity,,,,
flutter/flutter,pull_request,667254322,2021-07-09 23:32:56,justinmc,worry,"Should this mention position in the widget tree, or is that not a concern of the Action widget itself?",0,0,0,0,0,1,Curiosity,,,,
flutter/flutter,pull_request,670167144,2021-07-15 6:20:47,LongCatIsLooong,"Out of curiosity, why does this need to be in a post-frame callback? `didChangeMetrics` is not going to be called during `drawFrame` so it sounds like it's OK to just call `updateForScroll` here?","Out of curiosity, why does this need to be in a post-frame callback? `didChangeMetrics` is not going to be called during `drawFrame` so it sounds like it's OK to just call `updateForScroll` here?",0,0,0,0,0,1,Curiosity,,Curiosity,,
flutter/flutter,pull_request,674671395,2021-07-22 10:17:54,itssunyujia,"Hi, I am not sure I fully understand your suggestion, so add some codes below for discussing.
Is this what you expect ？ if not please let me know how to modify . Thanks !
```dart
_RenderCupertinoSwitch({
required bool value,
required Color activeColor,
required Color trackColor,
required Color thumbColor,
ValueChanged<bool>? onChanged,
required TextDirection textDirection,
required _CupertinoSwitchState state,
}) : assert(value != null),
assert(activeColor != null),
assert(state != null),
...
_thumbPainter = CupertinoThumbPainter.switchThumb(color: thumbColor),
...
}
```
```dart
Color get thumbColor => _thumbPainter.color;
CupertinoThumbPainter _thumbPainter;
set thumbColor(Color value) {
assert(value != null);
if (value == thumbColor)
return;
_thumbPainter = CupertinoThumbPainter.switchThumb(color: value);
markNeedsPaint();
}
```
```dart
_clipRRectLayer.layer = context.pushClipRRect(needsCompositing, Offset.zero, thumbBounds, trackRRect, (PaintingContext innerContext, Offset offset) {
_thumbPainter.paint(innerContext.canvas, thumbBounds);
}, oldLayer: _clipRRectLayer.layer);
```","Hi, I am not sure I fully understand your suggestion, so add some codes below for discussing.
Is this what you expect ？ if not please let me know how to modify . Thanks !
[TRIPLE QUOTE].
[TRIPLE QUOTE].
[TRIPLE QUOTE].",0,0,0,0,0,1,Curiosity,,,,
flutter/flutter,pull_request,691488362,2021-08-18 18:04:21,dnfield,Is this right? Dependencies can change after a user has interacted with the sheet.,Is this right? Dependencies can change after a user has interacted with the sheet.,0,0,0,0,0,1,Curiosity,,,,
angular/angular,pull_request,692431160,2021-08-19 19:41:25,JoostK,"I was wondering about `const { arguments } = { arguments: {} };` but TypeScript doesn't even allow me to type that in strict mode, reporting TS1210 on the destructuring assignment.","I was wondering about `const { arguments } = { arguments: {} };` but TypeScript doesn't even allow me to type that in strict mode, reporting TS1210 on the destructuring assignment.",0,0,0,0,0,1,Curiosity,,,,
flutter/flutter,pull_request,694773800,2021-08-24 11:46:28,nt4f04uNd,I'm curious about this - can you give more context on what exactly goes wrong? Perhaps if that causes bugs this should be prohibited instead?,I'm curious about this - can you give more context on what exactly goes wrong? Perhaps if that causes bugs this should be prohibited instead?,0,0,0,0,0,1,Curiosity,,Curiosity,,
Microsoft/TypeScript,pull_request,695009343,2021-08-24 16:22:41,andrewbranch,"I actually wonder if this whole second condition is even needed now... seems like the examples in the comments would be covered by the new condition you added. It doesn’t hurt to leave it in, so I probably wouldn’t change it this close to a release, but it might be worth running tests with it removed just to see if it can be cleaned up and simplified in the future.","I actually wonder if this whole second condition is even needed now... seems like the examples in the comments would be covered by the new condition you added. It doesn’t hurt to leave it in, so I probably wouldn’t change it this close to a release, but it might be worth running tests with it removed just to see if it can be cleaned up and simplified in the future.",0,0,0,0,0,1,Curiosity,,Curiosity,,
angular/angular,pull_request,698572690,2021-08-30 15:11:05,aikidave,"What about:
""The code in this example performs the following tasks:"" ?","What about:
""The code in this example performs the following tasks:"" ?",0,0,0,0,0,1,Curiosity,,,,
flutter/flutter,pull_request,698730792,2021-08-30 18:59:18,LongCatIsLooong,"Is this just `TextSelection.fromPosition`, except this preserves the `isDirectional` property?","Is this just `TextSelection.fromPosition`, except this preserves the `isDirectional` property?",0,0,0,0,0,1,Curiosity,,,,
Microsoft/TypeScript,pull_request,699716975,2021-08-31 22:33:28,amcasey,What was wrong here?,What was wrong here?,0,0,0,0,0,1,Curiosity,,,,
Microsoft/TypeScript,pull_request,704081644,2021-09-08 6:22:36,ShuiRuTian,"A small question, why not enum?","A small question, why not enum?",0,0,0,0,0,1,Curiosity,,Curiosity,,
angular/angular,pull_request,704840212,2021-09-08 23:21:19,AndrewKushnir,Just wanted to check if this change is intentional. Should we move that to a separate PR/commit? Would this change require tests?,Just wanted to check if this change is intentional. Should we move that to a separate PR/commit? Would this change require tests?,0,0,0,0,0,1,Curiosity,,,,
angular/angular,pull_request,712055253,2021-09-20 10:43:38,petebacondarwin,"I see. Thanks.

If I remember correctly, we had a workaround in the doc-gen to cope with this scenario, by adding in the current path to all local fragment URLs.

I wonder if we could remove that doc-gen fix, now that the app itself is able to cope?","I see. Thanks.

If I remember correctly, we had a workaround in the doc-gen to cope with this scenario, by adding in the current path to all local fragment URLs.

I wonder if we could remove that doc-gen fix, now that the app itself is able to cope?",0,0,0,0,0,1,Curiosity,,Curiosity,,
flutter/flutter,pull_request,714266492,2021-09-22 19:59:10,creativecreatorormaybenot,@Piinks So what is that valid code? Why can we not fix the assertion?,[USER] So what is that valid code? Why can we not fix the assertion?,0,0,0,0,0,1,Curiosity,,,,
flutter/flutter,pull_request,715193824,2021-09-23 22:18:21,darrenaustin,"Why ""slightly less""? Do we just want to make sure it doesn't paint outside of the chip?","Why ""slightly less""? Do we just want to make sure it doesn't paint outside of the chip?",0,0,0,0,0,1,Curiosity,,Curiosity,,
angular/angular,pull_request,716648129,2021-09-27 12:36:35,mlc-mlapis,"@petebacondarwin Hmm, even when doing it fully programmatically? What happens with an already existed module instance? Is it simply overwritten in the registry even already used in an application?","[USER] Hmm, even when doing it fully programmatically? What happens with an already existed module instance? Is it simply overwritten in the registry even already used in an application?",0,0,0,0,0,1,Curiosity,,,,
angular/angular,pull_request,716661839,2021-09-27 12:53:13,petebacondarwin,Hmm I wonder if we should actually include these files?,Hmm I wonder if we should actually include these files?,0,0,0,0,0,1,Curiosity,,,,
flutter/flutter,pull_request,717848960,2021-09-28 18:19:09,justinmc,"Why not throw an error?

I don't really have an opinion either way, just seeing if you do.","Why not throw an error?

I don't really have an opinion either way, just seeing if you do.",0,0,0,0,0,1,Curiosity,,Curiosity,,
flutter/flutter,pull_request,717994498,2021-09-28 21:54:24,justinmc,Is this deleted because it's covered by an EditableText test now?,Is this deleted because it's covered by an EditableText test now?,0,0,0,0,0,1,Curiosity,,Curiosity,,
flutter/flutter,pull_request,718039974,2021-09-28 23:38:16,christopherfujino,Is this font already bundled with Flutter?,Is this font already bundled with Flutter?,0,0,0,0,0,1,Curiosity,,,,
flutter/flutter,pull_request,718043500,2021-09-28 23:47:59,LongCatIsLooong,No unfortunately. I'll put a comment there. I'm a bit curious how macOS handles a keyboard layout that doesn't have a command key. Does it automatically detect that and change the shortcuts?,No unfortunately. I'll put a comment there. I'm a bit curious how macOS handles a keyboard layout that doesn't have a command key. Does it automatically detect that and change the shortcuts?,0,0,0,0,0,1,Curiosity,,,,
Microsoft/TypeScript,pull_request,718942362,2021-09-29 23:03:31,sandersn,"to make sure I understand this: without the new code, would only rc-table show up? Or would neither show up?","to make sure I understand this: without the new code, would only rc-table show up? Or would neither show up?",0,0,0,0,0,1,Curiosity,,,,
flutter/flutter,pull_request,720568368,2021-10-01 22:20:31,craiglabenz,I also wonder whether this should be paired with an `inactiveCircleColor` property 🤔,I also wonder whether this should be paired with an `inactiveCircleColor` property 🤔,0,0,0,0,0,1,Curiosity,,Curiosity,,
flutter/flutter,pull_request,722809324,2021-10-06 0:57:07,christopherfujino,is this ensured to exist?,is this ensured to exist?,0,0,0,0,0,1,Curiosity,,,,
flutter/flutter,pull_request,725846342,2021-10-11 7:14:25,darrenaustin,Is this ignore still needed given that ListTileTheme doesn't implement ListTileThemeData?,Is this ignore still needed given that ListTileTheme doesn't implement ListTileThemeData?,0,0,0,0,0,1,Curiosity,,Curiosity,,
webpack/webpack,pull_request,727920077,2021-10-13 10:26:06,shuding,"Just curious, why using xor here?","Just curious, why using xor here?",0,0,0,0,0,1,Curiosity,,Curiosity,,
flutter/flutter,pull_request,728359136,2021-10-13 18:53:43,blasten,"is this relevant for the test, or could it just be an empty `void main() {}`?","is this relevant for the test, or could it just be an empty `void main() {}`?",0,0,0,0,0,1,Curiosity,,Curiosity,,
angular/angular,pull_request,732186725,2021-10-19 19:38:58,dario-piotrowicz,"anyways yeah sorry, just wanted to ask you, so would you want us to use ` *` instead of `\s*`? or would you like to go a step further and go with ` {num}`? or even forget about the `toMatch` altogether and I just use `toEqual` with string literals everywhere?","anyways yeah sorry, just wanted to ask you, so would you want us to use ` *` instead of `\s*`? or would you like to go a step further and go with ` {num}`? or even forget about the `toMatch` altogether and I just use `toEqual` with string literals everywhere?",0,0,0,0,0,1,Curiosity,,,,
webpack/webpack,issue,813345539,2021-04-05 11:19:32,meglio,"Dear community, what's the current workaround until this is fixed?","Dear community, what's the current workaround until this is fixed?",0,0,0,0,0,1,Curiosity,,,,
webpack/webpack,issue,818272671,2021-04-12 22:04:04,wdfinch,Any updates here?,Any updates here?,0,0,0,0,0,1,Curiosity,,,,
webpack/webpack,issue,823315003,2021-04-20 14:21:32,tugayilik,"I see. But what is the plus of this intend, why it inlines instead of referencing it like other modules?","I see. But what is the plus of this intend, why it inlines instead of referencing it like other modules?",0,0,0,0,0,1,Curiosity,,Curiosity,,
webpack/webpack,issue,841912387,2021-05-17 1:04:55,XiaofengXie16,"Hello @raix , out of curiosity, have you figured out a way to do it without the proxy? I am on the same boat as you. My team has a proxy service that can do the routing correctly, however, it will break without the proxy which makes the dev experience kinda bad.","Hello [USER] , out of curiosity, have you figured out a way to do it without the proxy? I am on the same boat as you. My team has a proxy service that can do the routing correctly, however, it will break without the proxy which makes the dev experience kinda bad.",0,0,0,0,0,1,Curiosity,,Curiosity,,
webpack/webpack,issue,870966514,2021-06-29 22:42:58,sokra,hmm... interesting... Could you try to run `gc()` before doing the heapdump? (`--expose-gc`),hmm... interesting... Could you try to run `gc()` before doing the heapdump? (`--expose-gc`),0,0,0,0,0,1,Curiosity,,,,
angular/angular,issue,898692298,2021-08-13 20:03:59,JoostK,"@mattlewis92 I'm always interested in real-life repos to do perf tests with, as they often show new insights in ways to optimize builds.

The first rebuild is indeed slower because incremental type checking of TS sources is ineffective in the first rebuild. This is a known limitation because of how template type checking is achieved. I'd be interested to learn where the 7s deficit from JIT mode comes from.","[USER] I'm always interested in real-life repos to do perf tests with, as they often show new insights in ways to optimize builds.

The first rebuild is indeed slower because incremental type checking of TS sources is ineffective in the first rebuild. This is a known limitation because of how template type checking is achieved. I'd be interested to learn where the 7s deficit from JIT mode comes from.",0,0,0,0,0,1,Curiosity,,Interest -> Curiosity,,
Microsoft/TypeScript,issue,899112604,2021-08-15 21:32:38,masaeedu,"> I think we're both partially, but not fully correct, with you more correct than me.
Fascinating. Could you point out what I am ""not fully correct"" about?","[BLOCK QUOTE].
Fascinating. Could you point out what I am ""not fully correct"" about?",0,0,0,0,0,1,Curiosity,,,,
angular/angular,issue,916414317,2021-09-09 20:29:06,dario-piotrowicz,@gkalpak sorry for bothering you :sweat: is this PR ok to merge? What's the plan? When can breaking change PRs be merged? :slightly_smiling_face:,[USER] sorry for bothering you :sweat: is this PR ok to merge? What's the plan? When can breaking change PRs be merged? :slightly_smiling_face:,0,0,0,0,0,1,Curiosity,,,,
angular/angular,issue,917168702,2021-09-10 19:49:53,atscott,"@jordankittle What is the issue number of the previous one that was closed? Also, please provide a sample project.","[USER] What is the issue number of the previous one that was closed? Also, please provide a sample project.",0,0,0,0,0,1,Curiosity,,,,
webpack/webpack,issue,936068938,2021-10-06 11:39:34,alexander-akait,"@alexander-akait I don't see workarounds here, what is your target? What is `Critical line in index.ts line 57.`?","[USER] I don't see workarounds here, what is your target? What is `Critical line in index.ts line 57.`?",0,0,0,0,0,1,Curiosity,,Curiosity,,
Microsoft/TypeScript,issue,937982740,2021-10-07 16:59:43,juliabmenezes,Any updates please?,Any updates please?,0,0,0,0,0,1,Curiosity,,,,
Microsoft/TypeScript,issue,940030145,2021-10-11 13:24:33,MartinJohns,But why?,But why?,0,0,0,0,0,1,Curiosity,,Curiosity,,
Microsoft/TypeScript,issue,940518902,2021-10-11 23:36:22,ljharb,What bugs did that introduce?,What bugs did that introduce?,0,0,0,0,0,1,Curiosity,,,,
Microsoft/TypeScript,issue,943521102,2021-10-14 16:28:59,andrewbranch,What exactly was happening here?,What exactly was happening here?,0,0,0,0,0,1,Curiosity,,,,
flutter/flutter,issue,945184362,2021-10-17 19:50:52,hatano0x06,any update?,any update?,0,0,0,0,0,1,Curiosity,,,,
flutter/flutter,issue,945965495,2021-10-18 16:47:01,emvaized,"Correct me if I'm wrong, but all material dropdown buttons were behaving like that in older Android version (6.x, 7.x), but in newer versions (starting from 8.x or 9.x, I'm not sure) they decided to remove this behavior for some reason.
I remember that it was possible to select entries in Chrome main menu with single finger gesture, and also change language in Google Translate dropdowns on top of the screen.
But at some point this behavior was ditched out from all applications, deliberately or by accident, and it became not possible since then. However, it's still possible in some Android apps, for example please see [Vivaldi browser](https://play.google.com/store/apps/details?id=com.vivaldi.browser) — main menu button behaves exactly like that:
![Screen_Recording_20210814-193643_Vivaldi](https://user-images.githubusercontent.com/37851576/137774084-84e89f07-5b60-4d2c-826f-9ac14f99125a.gif)
And I wonder now how to replicate this behavior in Flutter application.","Correct me if I'm wrong, but all material dropdown buttons were behaving like that in older Android version (6.x, 7.x), but in newer versions (starting from 8.x or 9.x, I'm not sure) they decided to remove this behavior for some reason.

I remember that it was possible to select entries in Chrome main menu with single finger gesture, and also change language in Google Translate dropdowns on top of the screen.

But at some point this behavior was ditched out from all applications, deliberately or by accident, and it became not possible since then. However, it's still possible in some Android apps, for example please see [Vivaldi browser]([URL] — main menu button behaves exactly like that:
![Screen_Recording_20210814-193643_Vivaldi]([URL]

And I wonder now how to replicate this behavior in Flutter application.",0,0,0,0,0,1,Curiosity,,,,
flutter/flutter,issue,945968078,2021-10-18 16:50:09,godofredoc,Also do you know why it just started failing now?,Also do you know why it just started failing now?,0,0,0,0,0,1,Curiosity,,,,
angular/angular,issue,947420199,2021-10-20 7:56:47,Totati,"Hi @gkalpak, I'm curious. Why did you replace dot notation with bracket notation? 😶",Hi [USER] I'm curious. Why did you replace dot notation with bracket notation? 😶,0,0,0,0,0,1,Curiosity,,,,
flutter/flutter,issue,947625085,2021-10-20 12:39:57,apegineer,Do we have any workaround for this yet in the meantime?,Do we have any workaround for this yet in the meantime?,0,0,0,0,0,1,Curiosity,,Curiosity,,
Microsoft/TypeScript,issue,948136622,2021-10-21 0:33:20,fatcerberus,"> Could still hit the same issues if you replace these conditionals with

…with what? The suspense is killing me!","[BLOCK QUOTE]. 

…with what? The suspense is killing me!",0,0,0,0,0,1,Curiosity,,Curiosity,,1
flutter/flutter,issue,948306551,2021-10-21 6:45:40,danagbemava-nc,"@jeremiahlukus, is it safe to assume that your issue has been solved?","[USER], is it safe to assume that your issue has been solved?",0,0,0,0,0,1,Curiosity,,Curiosity,,
flutter/flutter,issue,948858522,2021-10-21 17:43:05,justinmc,@gspencergoog @stuartmorgan I'm curious what you guys think about the approaches in https://github.com/flutter/flutter/issues/30725#issuecomment-948063626.,[USER] [USER] I'm curious what you guys think about the approaches in [URL],0,0,0,0,0,1,Curiosity,,,,
angular/angular,issue,950663179,2021-10-25 8:30:55,onuradsay,Any news on this? NoopAnimationsModule still costs 17kb even with gzipped.,Any news on this? NoopAnimationsModule still costs 17kb even with gzipped.,0,0,0,0,0,1,Curiosity,,,,
Microsoft/TypeScript,issue,950928012,2021-10-25 13:25:46,jordanamr,"Hello, any update on this ?","Hello, any update on this ?",0,0,0,0,0,1,Curiosity,,,,
flutter/flutter,issue,952255014,2021-10-26 19:35:24,ab-zephyr,Any news about investigation of this problem?,Any news about investigation of this problem?,0,0,0,0,0,1,Curiosity,,,,
angular/angular,issue,953301655,2021-10-27 20:52:17,atscott,"@alexanderkenney Based on your description of the problem, I'm not sure exactly how this is related to the Angular router. Presumably the analytics code is throwing an error while the Router is navigating, and that error causes the navigation to abort? How/where is that problematic piece of code invoked? Now that you've identified the source of the error, are you able to create a minimal reproduction?","[USER] Based on your description of the problem, I'm not sure exactly how this is related to the Angular router. Presumably the analytics code is throwing an error while the Router is navigating, and that error causes the navigation to abort? How/where is that problematic piece of code invoked? Now that you've identified the source of the error, are you able to create a minimal reproduction?",0,0,0,0,0,1,Curiosity,,Curiosity,,
flutter/flutter,issue,954082678,2021-10-28 18:10:56,thiagocarvalho0877,"I'm also very curious about it, @laurensdewaele . Can you provide some example code to us?","I'm also very curious about it, [USER] . Can you provide some example code to us?",0,0,0,0,0,1,Curiosity,,,,
flutter/flutter,issue,954440724,2021-10-29 5:26:52,dhrubrawat66,any body support me to tell roadmap for how to start the flutter embedded.,any body support me to tell roadmap for how to start the flutter embedded.,0,0,0,0,0,1,Curiosity,,,,
flutter/flutter,issue,955795913,2021-10-31 21:37:30,12people,@andreidiaconu Any updates on this?,[USER] Any updates on this?,0,0,0,0,0,1,Curiosity,,,,
flutter/flutter,issue,955823494,2021-11-01 0:26:31,zanderso,Was this a breaking change? Are end-users going to have to take any action to compensate for the updated engine deps?,Was this a breaking change? Are end-users going to have to take any action to compensate for the updated engine deps?,0,0,0,0,0,1,Curiosity,,,,
angular/angular,issue,958353427,2021-11-02 23:02:21,jessicajaniuk,@JiaLiPassion Any updates on this PR? Is it still needed?,[USER] Any updates on this PR? Is it still needed?,0,0,0,0,0,1,Curiosity,,,,
flutter/flutter,issue,958721169,2021-11-03 7:56:31,danagbemava-nc,"Hi @HekmatFavid, can you explain more what exactly you're requesting for?","Hi [USER], can you explain more what exactly you're requesting for?",0,0,0,0,0,1,Curiosity,,Curiosity,1,
Microsoft/TypeScript,pull_request,336796724,2019-10-20 20:51:44,JoshuaKGoldberg,"Aha, going through the baselines, this has a bug!
```ts
class Ha {
get x() { return ''; }
set x(value: string) {}
}
```
This logic should check for how many unique names are in the node members.","Aha, going through the baselines, this has a bug!
[TRIPLE QUOTE].
This logic should check for how many unique names are in the node members.",0,0,0,0,0,1,Realiazation,,,,
webpack/webpack,pull_request,101379573,2017-02-15 20:51:15,timse,just realized that even the parameter this resembles doesnt even exist :),just realized that even the parameter this resembles doesnt even exist :),0,0,0,0,0,1,Realization,,,,
webpack/webpack,pull_request,192954324,2018-06-05 6:02:57,xtuc,"Interesting, I had trouble to find a test case for that, maybe you're right and it's not even needed.
The case is:
```wat
(module
(import ""a"" ""b"" (global i32))
(global i32 (get_global 0))
)
```
Without handling the global referencing another global, the init function will be:
```wat
(func (param i32)
(get_local 0)
(set_global 0)
)
```
And with is should look like this:
```wat
(func (param i32)
(get_local 0)
(set_global 0)
(get_local 0)
(set_global 1)
)
```
It seems to not be required. I need to recheck my tests.","Interesting, I had trouble to find a test case for that, maybe you're right and it's not even needed.

The case is:
[TRIPLE QUOTE].

Without handling the global referencing another global, the init function will be:

[TRIPLE QUOTE].

And with is should look like this:

[TRIPLE QUOTE].

It seems to not be required. I need to recheck my tests.",0,0,0,0,0,1,Realization,,,,
Microsoft/TypeScript,pull_request,425983552,2020-05-15 18:43:25,jupiter,"@rbuckton Very interesting, forgot about toJSON. It seems like comprehensively typing stringify is not an option right now. It is tempting though. However, falsely returning `string` for any input value is bad and not doing that would be a vast improvement.","[USER] Very interesting, forgot about toJSON. It seems like comprehensively typing stringify is not an option right now. It is tempting though. However, falsely returning `string` for any input value is bad and not doing that would be a vast improvement.",0,0,0,0,0,1,Realization,,,,
Microsoft/TypeScript,pull_request,516378121,2020-11-03 1:07:55,amcasey,"Why? This was a sneaky way to flag the checker events that don't get reported in server traces. I was going to use a separate boolean, but realized that the restriction would only ever apply in the checker.","Why? This was a sneaky way to flag the checker events that don't get reported in server traces. I was going to use a separate boolean, but realized that the restriction would only ever apply in the checker.",0,0,0,0,0,1,Realization,,,,
flutter/flutter,pull_request,645060469,2021-06-03 19:10:51,Piinks,"Actually, this may be better handled in the Scaffold, see comment below.","Actually, this may be better handled in the Scaffold, see comment below.",0,0,0,0,0,1,Realization,,Realization,,
flutter/flutter,pull_request,666620736,2021-07-09 1:57:17,Hixie,"oh i see, wow. how did that not get caught before.","oh i see, wow. how did that not get caught before.",0,0,0,0,0,1,Realization,,,,
flutter/flutter,pull_request,667115380,2021-07-09 17:44:45,justinmc,"Oh got it, I didn't realize it was only for a single character.","Oh got it, I didn't realize it was only for a single character.",0,0,0,0,0,1,Realization,,,,
flutter/flutter,pull_request,735890067,2021-10-25 19:17:34,christopherfujino,"ahh, I see they are in the containing scope.","ahh, I see they are in the containing scope.",0,0,0,0,0,1,Realization,,,,
Microsoft/TypeScript,pull_request,743149916,2021-11-04 19:42:16,andrewbranch,"I see—must be a difference with Monaco, because that’s the behavior I was seeing in the Playground.","I see—must be a difference with Monaco, because that’s the behavior I was seeing in the Playground.",0,0,0,0,0,1,Realization,,,,
Microsoft/TypeScript,issue,925391490,2021-09-22 23:07:53,andrewbranch,"We realized that
```ts
declare function f<T>(): T;
const [a, b, c] = f();
```
should really error, and this PR makes it legal (`T` is inferred as `[any, any, any`]). While it _may_ be true that object binding patterns never contribute anything useful to type argument inference, it is _not_ true that array binding patterns _always_ contribute usefully to type argument inference. What we really want is for binding patterns to contribute contextual typing information to _other_ inference sources, while never being allowed to stand on their own as inference sources. I’m going to close this and do a full revert of #45719 so we can investigate a more thorough solution in the future.","We realized that
[TRIPLE QUOTE].
should really error, and this PR makes it legal (`T` is inferred as `[any, any, any`]). While it _may_ be true that object binding patterns never contribute anything useful to type argument inference, it is _not_ true that array binding patterns _always_ contribute usefully to type argument inference. What we really want is for binding patterns to contribute contextual typing information to _other_ inference sources, while never being allowed to stand on their own as inference sources. I’m going to close this and do a full revert of #45719 so we can investigate a more thorough solution in the future.",0,0,0,0,0,1,Realization,,,,
Microsoft/TypeScript,issue,944038085,2021-10-15 6:33:21,dgoldstein0,"ah sorry I minimized the repro further after my initial post, Just updated that.
... I am shocked to realize you are right, that this is in fact a compiler default - https://www.typescriptlang.org/tsconfig#allowUnreachableCode defaults to undefined, which only shows unreachable code as warnings. However, typescript playground still has no way to actually set that to undefined it seems. So the behavior does differ, just perhaps not usefully.
I still hold that it would be much more useful to include a warning about the code being unreachable when narrowing the types to `never`s. Perhaps that shouldn't be error `TS7027` but rather some sort of extension of the ""hey this is never so this doesn't work"" error messages, for those of us working without editor integration.","ah sorry I minimized the repro further after my initial post, Just updated that.
... I am shocked to realize you are right, that this is in fact a compiler default - [URL] defaults to undefined, which only shows unreachable code as warnings. However, typescript playground still has no way to actually set that to undefined it seems. So the behavior does differ, just perhaps not usefully.
I still hold that it would be much more useful to include a warning about the code being unreachable when narrowing the types to `never`s. Perhaps that shouldn't be error `TS7027` but rather some sort of extension of the ""hey this is never so this doesn't work"" error messages, for those of us working without editor integration.",0,0,0,0,0,1,Realization,,,,
flutter/flutter,issue,950360854,2021-10-24 17:16:27,TheCGDF,"Okay... My understanding was overtuned twice...
I'll close this issue because it is just duplicate of https://github.com/flutter/flutter/issues/73652",Okay... My understanding was overtuned twice... I'll close this issue because it is just duplicate of [URL],0,0,0,0,0,1,Realization,,Realization (that it's a duplicate),,
flutter/flutter,issue,956424862,2021-11-01 17:18:11,christopherfujino,"This was not intentional, but fallout from two things:

1. A quirk in the way the Flutter CLI tool calculates the version on the `master` channel (it only looks at version tags that are on direct ancestors); and
2. The fact that the last beta release was not based on a dev release.

To fix this, I will update the flutter conductor release tool to always tag the branch point when publishing a new release branch.","This was not intentional, but fallout from two things:

1. A quirk in the way the Flutter CLI tool calculates the version on the `master` channel (it only looks at version tags that are on direct ancestors); and
2. The fact that the last beta release was not based on a dev release.

To fix this, I will update the flutter conductor release tool to always tag the branch point when publishing a new release branch.",0,0,0,0,0,1,Realization,,Realization (about an error) -> Surprise,,
Microsoft/TypeScript,pull_request,524603224,2020-11-16 21:27:24,amcasey,"I understand why we skip the work if there are no open files, but not why we're looking at external projects. Can you please explain?","I understand why we skip the work if there are no open files, but not why we're looking at external projects. Can you please explain?",0,0,0,0,0,1,"Realization, Curiosity",,Realization+Curiosity,1,
webpack/webpack,pull_request,86515132,2016-11-04 9:59:02,SpaceK33z,"Interesting, we don't use that anywhere in the schema at the moment. Will try out if it works.","Interesting, we don't use that anywhere in the schema at the moment. Will try out if it works.",0,0,0,0,0,1,Surprise,,Interesting -> Surprise,,
webpack/webpack,pull_request,175115024,2018-03-16 14:53:43,sokra,This is weird. Just add the `parser` as additional argument to call member methods.,This is weird. Just add the `parser` as additional argument to call member methods.,0,0,0,0,0,1,Surprise,,Surprise,,
webpack/webpack,pull_request,175290087,2018-03-18 13:55:39,Hypnosphi,"Not sure it's the best way to filter out an entrypoint, but it looks like the easiest one","Not sure it's the best way to filter out an entrypoint, but it looks like the easiest one",0,0,0,0,0,1,Surprise,,Surprise,,
webpack/webpack,pull_request,192952534,2018-06-05 5:49:53,xtuc,"Ah I was wondering why, ok thanks.","Ah I was wondering why, ok thanks.",0,0,0,0,0,1,Surprise,,"Wondering, Realization -> Surprise",,
webpack/webpack,pull_request,236088525,2018-11-25 20:22:42,ooflorent,`true` feels like magic. Maybe it should be a default value provided to the set or a symbol.,`true` feels like magic. Maybe it should be a default value provided to the set or a symbol.,0,0,0,0,0,1,Surprise,Amazement,Magic -> Amazed -> Surprise,,
webpack/webpack,pull_request,244567313,2018-12-31 9:32:11,sokra,This is weird,This is weird,0,0,0,0,0,1,Surprise,astonishment,,,
webpack/webpack,pull_request,467085009,2020-08-07 14:42:41,sokra,interesting... I'll fix that,interesting... I'll fix that,0,0,0,0,0,1,Surprise,-,Surprise,,
Microsoft/TypeScript,pull_request,499872328,2020-10-05 21:05:45,uniqueiniquity,I'm a little surprised by this - it seems like whatever the editor sends on the specific project is unconditionally overwritten by the host config. Is that intended?,I'm a little surprised by this - it seems like whatever the editor sends on the specific project is unconditionally overwritten by the host config. Is that intended?,0,0,0,0,0,1,Surprise,astonishment,,,
Microsoft/TypeScript,pull_request,533806843,2020-12-02 0:10:04,sheetalkamat,Interesting.. i thought that would be elided only if O had elided it.,Interesting.. i thought that would be elided only if O had elided it.,0,0,0,0,0,1,Surprise,Realization,Realization,,
Microsoft/TypeScript,pull_request,549814226,2020-12-29 19:01:36,andrewbranch,This was a very strange test,This was a very strange test,0,0,0,0,0,1,Surprise,,Surprise,,
Microsoft/TypeScript,pull_request,582760126,2021-02-25 11:33:18,Kingwl,This is not expected. But I have no idea about that...,This is not expected. But I have no idea about that...,0,0,0,0,0,1,Surprise,,Unexpected -> Surprise,,
webpack/webpack,pull_request,598752673,2021-03-22 14:14:35,sokra,I don't understand what you mean with that?,I don't understand what you mean with that?,0,0,0,0,0,1,Surprise,,Confusion,,
angular/angular,pull_request,623522289,2021-04-30 1:13:28,aikidave,Not sure how that got there! Deleted.,Not sure how that got there! Deleted.,0,0,0,0,0,1,Surprise,,Surprise,,
Microsoft/TypeScript,pull_request,636512072,2021-05-20 22:17:52,sandersn,"Well, it *used* to. I'm not sure why it didn't complain this time.","Well, it *used* to. I'm not sure why it didn't complain this time.",0,0,0,0,0,1,Surprise,,Surprise,,
flutter/flutter,pull_request,644243466,2021-06-02 18:59:07,darrenaustin,"Surprised this wasn't caught by the compiler, but thanks.","Surprised this wasn't caught by the compiler, but thanks.",0,0,0,0,0,1,Surprise,,Surprise,,
flutter/flutter,pull_request,644408851,2021-06-03 0:50:45,jmagman,I don't know why I used it.,I don't know why I used it.,0,0,0,0,0,1,Surprise,,Surprise,,
angular/angular,pull_request,650409367,2021-06-12 16:22:31,petebacondarwin,"> Also, I don't think backticks (template strings) are legal quotes in Angular templates.
Yes, I didn't realise that!","[BLOCK QUOTE].
Yes, I didn't realise that!",0,0,0,0,0,1,Surprise,Realization,Realization,,
angular/angular,pull_request,664549260,2021-07-06 13:21:08,petebacondarwin,"Interestingly, `ResourceLoader` is now abstract, along with `get()` so this override does not strictly appear to be necessary?","Interestingly, `ResourceLoader` is now abstract, along with `get()` so this override does not strictly appear to be necessary?",0,0,0,0,0,1,Surprise,,Surprise,,
flutter/flutter,pull_request,679530906,2021-07-29 22:41:20,keyonghan,Is this intended?,Is this intended?,0,0,0,0,0,1,Surprise,,Surprise,,
flutter/flutter,pull_request,681890997,2021-08-03 15:52:58,chunhtai,"ah so you change this line, too?

I thought this pr is aiming at the Form.onchange is called after the field value changes, not the CupertinoTextFormFieldRow.onChange? or am I missing something?","ah so you change this line, too?

I thought this pr is aiming at the Form.onchange is called after the field value changes, not the CupertinoTextFormFieldRow.onChange? or am I missing something?",0,0,0,0,0,1,Surprise,Realization,Realization,,
flutter/flutter,pull_request,682149383,2021-08-03 22:42:32,LongCatIsLooong,Oh this is a snippet not a sample so no `main` needed.,Oh this is a snippet not a sample so no `main` needed.,0,0,0,0,0,1,Surprise,Realization,Realization,,
angular/angular,pull_request,692353282,2021-08-19 17:45:04,gkalpak,"Oh, wow, it never occurred to me that my `OOC` (or other acronyms I use) could be interpreted differently than I intended (in fact giving my comments the exact opposite meaning) 🤯

I wonder how many times I've given the wrong impression to people due to this 😱

Good lesson for me to try to use less acronyms in the future. (Written communication is already nuanced enough 😅)
Thx a lot for pointing this out ❤️ (and sorry for all the scares I've caused 😇)","Oh, wow, it never occurred to me that my `OOC` (or other acronyms I use) could be interpreted differently than I intended (in fact giving my comments the exact opposite meaning) 🤯

I wonder how many times I've given the wrong impression to people due to this 😱

Good lesson for me to try to use less acronyms in the future. (Written communication is already nuanced enough 😅)
Thx a lot for pointing this out ❤️ (and sorry for all the scares I've caused 😇)",0,0,0,0,0,1,Surprise,Amazement,Amazement,1,
flutter/flutter,pull_request,696001650,2021-08-25 18:14:16,Piinks,"Oh strange, the nit was a line break in between 70/71","Oh strange, the nit was a line break in between 70/71",0,0,0,0,0,1,Surprise,,Strange -> Surprise,,
angular/angular,pull_request,715866242,2021-09-24 19:47:52,JoostK,Yeah I was surprised by this as well. I don't know what's caused this output to be different; it is generated exactly like this by api-extractor and not touched by a formatter afterwards. I am a bit surprised how a change to the whitespace does not cause golden file failures in the first place.,Yeah I was surprised by this as well. I don't know what's caused this output to be different; it is generated exactly like this by api-extractor and not touched by a formatter afterwards. I am a bit surprised how a change to the whitespace does not cause golden file failures in the first place.,0,0,0,0,0,1,Surprise,-,Surprised,,
flutter/flutter,pull_request,717814697,2021-09-28 17:32:41,chunhtai,"I see, so it will run before the next frame starts. SGTM","I see, so it will run before the next frame starts. SGTM",0,0,0,0,0,1,Surprise,Realization,Realization,,
flutter/flutter,pull_request,720486012,2021-10-01 19:17:13,christopherfujino,"this got reverted? did you change this, or was it flutter update-packages?","this got reverted? did you change this, or was it flutter update-packages?",0,0,0,0,0,1,Surprise,,Surprise,,
flutter/flutter,pull_request,722787651,2021-10-05 23:53:34,gspencergoog,"Ahh, OK, I'll revert this. Is someone migrating the template too?","Ahh, OK, I'll revert this. Is someone migrating the template too?",0,0,0,0,0,1,Surprise,Realization,Realization,,
flutter/flutter,pull_request,733968505,2021-10-21 19:02:19,justinmc,I'm surprised that there aren't more tests to update!,I'm surprised that there aren't more tests to update!,0,0,0,0,0,1,Surprise,-,Surprise,,
webpack/webpack,issue,797023712,2021-03-11 20:22:32,sokra,Hmm yeah I see. That's the weird backward-compat stuff...,Hmm yeah I see. That's the weird backward-compat stuff...,0,0,0,0,0,1,Surprise,Realization,Realization,,
webpack/webpack,issue,818892510,2021-04-13 16:57:27,alexander-akait,"> new webpack.debug.ProfilingPlugin({
> outputPath: path.join(__dirname, 'profiling/profileEvents.json'),
> });
Weird, should work, in theory you can try to capture memory usage in watch mode (without this plugin, https://nodejs.org/api/debugger.html), so we will understand leaking inside webpack or dev server.","[BLOCK QUOTE].

Weird, should work, in theory you can try to capture memory usage in watch mode (without this plugin, [URL] so we will understand leaking inside webpack or dev server.",0,0,0,0,0,1,Surprise,-,Weird -> Surprise,,
webpack/webpack,issue,838640650,2021-05-11 15:03:55,alexander-akait,"I see, make sense... we need think how better to do it, maybe in future we will have more args...","I see, make sense... we need think how better to do it, maybe in future we will have more args...",0,0,0,0,0,1,Surprise,Realization,Realization,,
webpack/webpack,issue,862192637,2021-06-16 9:11:30,panlina,"So there's no way to workaround it for inline loader? Since there's no way to set `type: ""javascript/auto""` on it.","So there's no way to workaround it for inline loader? Since there's no way to set `type: ""javascript/auto""` on it.",0,0,0,0,0,1,Surprise,Realization,Realization,,
Microsoft/TypeScript,issue,904224196,2021-08-24 0:21:28,devanshj,"I was surprised you marked it as ""bug"" but then realized it indeed is a bug -- as the renaming refactor produces a compile error! xD","I was surprised you marked it as ""bug"" but then realized it indeed is a bug -- as the renaming refactor produces a compile error! xD",0,0,0,0,0,1,Surprise,-,Surprise,,
angular/angular,issue,914589705,2021-09-07 20:07:20,dario-piotrowicz,"Yes I agree, it is not as clear cut as it first appeared","Yes I agree, it is not as clear cut as it first appeared",0,0,0,0,0,1,Surprise,-,not as clear cut as it first appeared -> surprised,,
angular/angular,issue,923893956,2021-09-21 11:32:54,gkalpak,Nice! I didn't know `content` could accept alt text 🤯,Nice! I didn't know `content` could accept alt text 🤯,0,0,0,0,0,1,Surprise,,Surprise,,
angular/angular,issue,927878841,2021-09-27 13:31:32,andreaslarssen,"@petebacondarwin Ok, so just to be clear. That means that noone running Angular 9 - pre-11.1.0 project can use those libs, and there's no way to fix it?","[USER] Ok, so just to be clear. That means that noone running Angular 9 - pre-11.1.0 project can use those libs, and there's no way to fix it?",0,0,0,0,0,1,Surprise,Realization,Surprise/Realization,,
Microsoft/TypeScript,issue,934671785,2021-10-05 18:42:43,andrewbranch,"> I'm just curious why there is a difference in behavior in this case

I looked at this with a few others on the team and nobody could quite remember or figure out where the difference comes from within a short amount of time, but we supposed there is probably an old, old PR that would explain it. I will say that it does kind of match my intuition of the subtle differences between object types and interfaces, where interfaces are just presumed to be more class-like. There is clearly not some super rigorous principle that we can appeal to in the abstract here—the example you came up with does look sort of surprising—but it is likely driven by heuristics that lend more useful type checking behavior to certain patterns in code that uses a lot of classes and interfaces. Coming up with a more specific answer would require a bit more spelunking into the `git blame` of the checker.","[BLOCK QUOTE]. 

I looked at this with a few others on the team and nobody could quite remember or figure out where the difference comes from within a short amount of time, but we supposed there is probably an old, old PR that would explain it. I will say that it does kind of match my intuition of the subtle differences between object types and interfaces, where interfaces are just presumed to be more class-like. There is clearly not some super rigorous principle that we can appeal to in the abstract here—the example you came up with does look sort of surprising—but it is likely driven by heuristics that lend more useful type checking behavior to certain patterns in code that uses a lot of classes and interfaces. Coming up with a more specific answer would require a bit more spelunking into the `git blame` of the checker.",0,0,0,0,0,1,Surprise,-,Surprise,,
Microsoft/TypeScript,issue,934941507,2021-10-05 22:24:50,andrewbranch,"> how would that be done?
```ts
type AgendaScheduler = import('@hokify/scheduler').AgendaScheduler
```
should work. The error could be silenced, since it’s really meant to stop you from doing something that’s impossible at _runtime_, but we need to think about whether it’s more or less confusing for type-only imports to be exempt 😕. @DanielRosenwasser @weswigham thoughts?","[BLOCK QUOTE].
[TRIPLE QUOTE].
should work. The error could be silenced, since it’s really meant to stop you from doing something that’s impossible at _runtime_, but we need to think about whether it’s more or less confusing for type-only imports to be exempt 😕. [USER] [USER] thoughts?",0,0,0,0,0,1,Surprise,,Confusion,,
angular/angular,issue,947478694,2021-10-20 9:13:34,HyperLife1119,"Wait a minute, i'm recovering...","Wait a minute, i'm recovering...",0,0,0,0,0,1,Surprise,,Surprise,,
Microsoft/TypeScript,issue,948116812,2021-10-20 23:45:01,andrewbranch,"Wow, this PR really came back from the dead! 🧟","Wow, this PR really came back from the dead! 🧟",0,0,0,0,0,1,Surprise,,,,
flutter/flutter,issue,953237690,2021-10-27 19:19:55,jmagman,"I'm a bit surprised at the suggested workaround since that process is already running in Rosetta, all the executables in question are x86_64.
https://github.com/flutter/flutter/pull/92508 has merged. If possible, could anyone reproducing this validate that it no longer crashes on the master channel (without the `Open in Rosetta` workaround)?","I'm a bit surprised at the suggested workaround since that process is already running in Rosetta, all the executables in question are x86_64.
[URL] has merged. If possible, could anyone reproducing this validate that it no longer crashes on the master channel (without the `Open in Rosetta` workaround)?",0,0,0,0,0,1,Surprise,amazement,,,
webpack/webpack,issue,957072254,2021-11-02 3:37:37,quick007,see what I said before. I also had this issue before with another project and it magically worked after tweaking random settings,see what I said before. I also had this issue before with another project and it magically worked after tweaking random settings,0,0,0,0,0,1,Surprise,,Magically worked -> Surprise,,
Microsoft/TypeScript,issue,957307796,2021-11-02 10:24:36,ritschwumm,"wait, do you say if you add it in the compilerOptions is doesn't work, but as a command line parameter it does? that would be.... surprising.","wait, do you say if you add it in the compilerOptions is doesn't work, but as a command line parameter it does? that would be.... surprising.",0,0,0,0,0,1,Surprise,amazement,,,
flutter/flutter,issue,958163863,2021-11-02 21:02:29,Aristidios,"Why is this issue closed ? Glitch is not fixed

```
void main() {
 runApp(MyApp());
}

class MyApp extends StatelessWidget {
 @override
 Widget build(BuildContext context) {
 return MaterialApp(
 themeMode: ThemeMode.system,
 home: Scaffold(
 backgroundColor: Colors.blue,
 body: SafeArea(
 child: Center(
 child: TextField(
 autofocus: false,
 keyboardType: TextInputType.emailAddress,
 autofillHints: [AutofillHints.email],
 ),
 ),
 ),
 ),
 title: 'Flutter Test',
 );
 }
}
```","Why is this issue closed ? Glitch is not fixed 

[TRIPLE QUOTE].",0,0,0,0,0,1,Surprise,-,Surprised (about why issue closed),1,
Microsoft/TypeScript,issue,958659484,2021-11-03 5:07:49,CMCDragonkai,"I find it interesting that even if TS2732 error occurs, the tsc compiler just continues. Surely there must be a way to make it not bother compiling the JSON file, so that we can reference things outside the `outDir`.","I find it interesting that even if TS2732 error occurs, the tsc compiler just continues. Surely there must be a way to make it not bother compiling the JSON file, so that we can reference things outside the `outDir`.",0,0,0,0,0,1,Surprise,,Surprise,,
angular/angular,pull_request,671666729,2021-07-17 10:03:51,dario-piotrowicz,"ah wow! sorry I did not notice that!
I find this strange thought... it looks like a pretty low level function to be in the public API :confused: What can we do about this? :disappointed:",ah wow! sorry I did not notice that! I find this strange thought... it looks like a pretty low level function to be in the public API :confused: What can we do about this? :disappointed:,0,0,0,0,0,1,"Surprise, Confusion",Amazement,"Confusion, Amazement",,
flutter/flutter,pull_request,735900904,2021-10-25 19:34:56,christopherfujino,"Ahh, I see. Let's first discuss whether we should add mockito to the repo then.","Ahh, I see. Let's first discuss whether we should add mockito to the repo then.",0,0,0,0,0,1,Realization,,"ahh, I see -> Realization",,
flutter/flutter,pull_request,688339712,2021-08-13 8:29:13,GaryQian,"Ahh, I think this is just some bad file merging on my end. Templates seem fine.","Ahh, I think this is just some bad file merging on my end. Templates seem fine.",0,0,0,0,0,1,Realization,,,,
Microsoft/TypeScript,pull_request,594169910,2021-03-15 9:23:40,Kingwl,I hate TmLanguage. 😭😭😭😭😭,I hate TmLanguage. 😭😭😭😭😭,0,0,0,0,1,0,Sadness,Sorrow,Crying emojis -> Sad,,
webpack/webpack,issue,853769619,2021-06-03 10:35:08,dennemark,"Thanks for the fast reply! I categorized it as a bug, sorry for the inconvenience...
I assume you mean to use require.resolve within the alias to have a direct path to the module. This however, still leads to the same result.
```
alias: {
...config.resolve.alias,
'mapbox-gl': require.resolve('maplibre-gl')
}
```","Thanks for the fast reply! I categorized it as a bug, sorry for the inconvenience...
I assume you mean to use require.resolve within the alias to have a direct path to the module. This however, still leads to the same result.
[TRIPLE QUOTE].",0,0,0,0,1,0,Neglect,Embarrassment,gratitude → affection → love,,
angular/angular,pull_request,685514378,2021-08-09 20:54:59,dario-piotrowicz,"You are totally right about the commas and the regex, I actually took a very naive and brittle approach and felt ok with it because it passed all the tests
as soon as you mentioned that and I noticed a regex I right away got what where you were saying and totally agree with you of course
I'll see to make the change and add the tests, so sorry for my silliness :bow: :bow: :bow: :cry:","You are totally right about the commas and the regex, I actually took a very naive and brittle approach and felt ok with it because it passed all the tests
as soon as you mentioned that and I noticed a regex I right away got what where you were saying and totally agree with you of course
I'll see to make the change and add the tests, so sorry for my silliness :bow: :bow: :bow: :cry:",0,0,0,0,1,0,Neglect,embarassment,,,
angular/angular,pull_request,685271530,2021-08-09 14:59:41,gkalpak,"Ah, good point :+1:
It is still unfortunate that we have the same bits of code before and inside the `while` loop. How about something like this (to avoid the code duplication):
```ts
function<T>(thisArg: any, _arguments: any, generator: () => Generator<T>) {
const zone = Zone.current;
const gen = generator.apply(thisArg, _arguments);
let res = null;
const args = [undefined];
while (!res?.done) {
try {
res = zone.run(gen.next, gen, args, 'native await');
args[0] = res.done ? res.value : await res.value;
} catch (error) {
zone.runGuarged(() => {
res = gen.throw(error);
}, undefined, [], 'native await');
}
}
return res.value;
}
```","Ah, good point :+1:
It is still unfortunate that we have the same bits of code before and inside the `while` loop. How about something like this (to avoid the code duplication):
[TRIPLE QUOTE].",0,0,0,0,1,0,Disappoinment,,,,
Microsoft/TypeScript,pull_request,713475952,2021-09-21 22:59:41,gabritto,"To be honest, I'm very new to the team and I don't know if there's a methodical way to figure those things out. I don't think there is, sadly. Some things in the code have very descriptive names or comments, but others sometimes don't, as is the case of `assumeTrue`. I'd say if you can't find an explanation by looking at the code, or in the TypeScript wiki, or in https://github.com/orta/typescript-notes, your best bet is to ask someone from the team and we'll be able to help.
@sandersn and @orta might have more tips about where/who to ask those kinds of question.
About `assumeTrue`'s meaning: to give you an example, I figured this one out by looking at the code in `narrowTypeByEquality` and seeing that `assumeTrue` had its boolean value flipped if the condition we had was an inequality (e.g. `a !== b`).
**tl;dr** in `narrowTypeByEquality(type, operator, value, assumeTrue)`, if `assumeTrue` is true we should assume `value` has type `type`. Otherwise, we should assume `value` does *not* have type `type`.
To give you an example:
```ts
var v: unknown;
if (v == null) {
// ... Here we will call `narrowTypeByEquality` with `assumeTrue` being `true`, because inside this `if` branch, the equality is true, like so: `narrowTypeByEquality(unknownType, operator, null, true)`.
}
else {
// ... Here we will call `narrowTypeByEquality` with `assumeTrue` being `false`, because inside this `else` branch, the equality above is false, like so: `narrowTypeByEquality(unknownType, operator, null, false)`.
}
```","To be honest, I'm very new to the team and I don't know if there's a methodical way to figure those things out. I don't think there is, sadly. Some things in the code have very descriptive names or comments, but others sometimes don't, as is the case of `assumeTrue`. I'd say if you can't find an explanation by looking at the code, or in the TypeScript wiki, or in [URL] your best bet is to ask someone from the team and we'll be able to help.
@sandersn and [USER] might have more tips about where/who to ask those kinds of question.
About `assumeTrue`'s meaning: to give you an example, I figured this one out by looking at the code in `narrowTypeByEquality` and seeing that `assumeTrue` had its boolean value flipped if the condition we had was an inequality (e.g. `a !== b`).
**tl;dr** in `narrowTypeByEquality(type, operator, value, assumeTrue)`, if `assumeTrue` is true we should assume `value` has type `type`. Otherwise, we should assume `value` does *not* have type `type`.
To give you an example:
[TRIPLE QUOTE].",0,0,0,0,1,0,Disappoinment,,,,
flutter/flutter,pull_request,715216708,2021-09-23 23:16:37,CaseyHillers,"Unfortunately, you can't change the name and remove bringup from this PR","Unfortunately, you can't change the name and remove bringup from this PR",0,0,0,0,1,0,Disappoinment,,,,
flutter/flutter,pull_request,720577815,2021-10-01 22:53:13,Piinks,"What I mean to say is that this assertion that you are adding in this PR catches the error you intend to catch, but it is also catching other cases that are not valid to assert.

While I cannot share internal code, it stands to reason that if the internal code were invalid, it would crash with the same bad error message you are trying to fix here. I am going to close this PR as the internal test proves that it asserts when it should not. Unfortunately, I do not have a simple reproduction of this case.

I appreciate your work on this, it just does not work in the way that you expect.","What I mean to say is that this assertion that you are adding in this PR catches the error you intend to catch, but it is also catching other cases that are not valid to assert.

While I cannot share internal code, it stands to reason that if the internal code were invalid, it would crash with the same bad error message you are trying to fix here. I am going to close this PR as the internal test proves that it asserts when it should not. Unfortunately, I do not have a simple reproduction of this case.

I appreciate your work on this, it just does not work in the way that you expect.",0,0,0,0,1,0,Disappoinment,,,1,
webpack/webpack,issue,824976425,2021-04-22 16:07:50,JonathanLorimer,"same result unfortunately
```
 npx webpack serve --hot --stats-children
ℹ ｢wds｣: Project is running at http://localhost:3001/
ℹ ｢wds｣: webpack output is served from /
ℹ ｢wds｣: Content not from webpack is served from /home/jonathanl/Mercury/mercury-web/public
ℹ ｢wds｣: 404s will fallback to /index.html
Warning: The 'no-floating-promises' rule requires type information.
Browserslist: caniuse-lite is outdated. Please run:
npx browserslist@latest --update-db
ℹ ｢wdm｣: 395 assets
3912 modules
webpack 5.35.0 compiled successfully in 34088 ms
ℹ ｢wdm｣: Compiled successfully.
Issues checking in progress...
No issues found.
ℹ ｢wdm｣: Compiling...
⚠ ｢wdm｣: 397 assets
3912 modules
1 WARNING in child compilations (Use 'stats.children: true' resp. '--stats-children' for more details)
webpack 5.35.0 compiled with 1 warning in 3061 ms
ℹ ｢wdm｣: Compiled with warnings.
No issues found.
```","same result unfortunately
[TRIPLE QUOTE].",0,0,0,0,1,0,Disappoinment,,,,
webpack/webpack,issue,887502766,2021-07-27 13:15:21,alexander-akait,@xtuc ci still broken(,[USER] ci still broken(,0,0,0,0,1,0,Disappoinment,,,,
angular/angular,issue,897875936,2021-08-12 18:34:19,alan-agius4,"@artaommahe, unfortunately as @JoostK mentioned without a reproduction, even shared privately it will not be possible to get to the bottom of this.","[USER] unfortunately as [USER] mentioned without a reproduction, even shared privately it will not be possible to get to the bottom of this.",0,0,0,0,1,0,Disappoinment,,,,
webpack/webpack,issue,899418860,2021-08-16 11:00:15,alexsoin,"Thank you! Yes, it was a problem due to the `webpack-stream` plugin which depends on version 4 of the webpack. Unfortunately, this plugin does not support version 5 and now it is supported only in the [pull request](https://github.com/shama/webpack-stream/pull/235#issuecomment-898454149). We are waiting for the merge))))","Thank you! Yes, it was a problem due to the `webpack-stream` plugin which depends on version 4 of the webpack. Unfortunately, this plugin does not support version 5 and now it is supported only in the [pull request]([URL] We are waiting for the merge))))",0,0,0,0,1,0,Disappoinment,,,1,
angular/angular,issue,917098487,2021-09-10 17:55:21,gkalpak,"Oh, there are different failures now 😞 I'll have to take another look 😅","Oh, there are different failures now 😞 I'll have to take another look 😅",0,0,0,0,1,0,Disappoinment,,,,
Microsoft/TypeScript,issue,917503891,2021-09-11 23:46:16,Brawaru,"Sorry it took long to reply!
Unfortunately, that is not going to work in my setup: I am dynamically importing Preact during the runtime, that is `getPreact()` returns Preact's exports. `jsxImportSource` implies automatic import, which is not going to work. I can, of course, use it to silence TypeScript and continue using ESBuild, which will actually use `h` defined in the scope, but then TypeScript starts to complain about ‘unused’ `h` declaration, while also not saying anything if I don't declare the `h` (duh).
I'd actually expect TypeScript to *not expect* that `h` can only come from the imports, but rather do what ESBuild does — use `h` defined within the scope; like in my situation — it is defined at the top of the file. Thus I filed it as a bug report, because it's an absolutely valid use case.
Also, I just noticed that I accidentally deleted CodeSandbox example, I re-wrote it here (will update in the issue body): https://codesandbox.io/s/dank-wood-cqpld?file=/src/index.tsx.","Sorry it took long to reply!
Unfortunately, that is not going to work in my setup: I am dynamically importing Preact during the runtime, that is `getPreact()` returns Preact's exports. `jsxImportSource` implies automatic import, which is not going to work. I can, of course, use it to silence TypeScript and continue using ESBuild, which will actually use `h` defined in the scope, but then TypeScript starts to complain about ‘unused’ `h` declaration, while also not saying anything if I don't declare the `h` (duh).
I'd actually expect TypeScript to *not expect* that `h` can only come from the imports, but rather do what ESBuild does — use `h` defined within the scope; like in my situation — it is defined at the top of the file. Thus I filed it as a bug report, because it's an absolutely valid use case.
Also, I just noticed that I accidentally deleted CodeSandbox example, I re-wrote it here (will update in the issue body): [URL]",0,0,0,0,1,0,Disappoinment,,,,
Microsoft/TypeScript,issue,925392557,2021-09-22 23:09:52,andrewbranch,Unfortunately the fix wasn't quite right and we decided to revert it and investigate more for next release—see #46009 and #46012,Unfortunately the fix wasn't quite right and we decided to revert it and investigate more for next release—see #46009 and #46012,0,0,0,0,1,0,Disappoinment,,,,
Microsoft/TypeScript,issue,933258523,2021-10-04 8:24:19,MartinJohns,"Also somewhat related: #41470.
---
I find the idea of ""local"" types declared within the implementation body to leak outside extremely unpleasant and disturbing. This would also require additional new syntax for declaration files, which was not considered at all in this issue. I hardly see any benefit and a lot of complexity.
And unfortunately the issue template for feature requests was not filled out.","Also somewhat related: #41470.
---
I find the idea of ""local"" types declared within the implementation body to leak outside extremely unpleasant and disturbing. This would also require additional new syntax for declaration files, which was not considered at all in this issue. I hardly see any benefit and a lot of complexity.
And unfortunately the issue template for feature requests was not filled out.",0,0,0,0,1,0,Disappoinment,,,,
flutter/flutter,issue,944607416,2021-10-15 19:26:31,Hixie,"Unfortunately there's disadvantages to this approach too -- Android/iOS tools no longer work because files appear to be missing, for example. Understanding what Android/iOS want from you is harder because the files aren't there so you can't just explore the files and find the comments we left explaining things. You could imagine a mode where you ask the files to appear, then edit them, then ask the unchanged files to be removed, but now there's extra steps, none of which are obvious to the developer, and it's easy to accidentally add or delete the wrong file (or make trivial changes that you don't need to save), etc.
I do wish something like this would exist, though.
cc @christopherfujino @blasten @jmagman","Unfortunately there's disadvantages to this approach too -- Android/iOS tools no longer work because files appear to be missing, for example. Understanding what Android/iOS want from you is harder because the files aren't there so you can't just explore the files and find the comments we left explaining things. You could imagine a mode where you ask the files to appear, then edit them, then ask the unchanged files to be removed, but now there's extra steps, none of which are obvious to the developer, and it's easy to accidentally add or delete the wrong file (or make trivial changes that you don't need to save), etc.

I do wish something like this would exist, though.

cc [USER] [USER] [USER]",0,0,0,0,1,0,Disappoinment,,,,
Microsoft/TypeScript,issue,947000738,2021-10-19 18:34:21,joshuat,"> @weswigham I noticed that a `types` path must be `.d.ts` and not `.ts` (pointing to source file). Any reason that can't be supported?
This is very disappointing - this will require us to introduce a build step in our monorepo development environment","[BLOCK QUOTE].
This is very disappointing - this will require us to introduce a build step in our monorepo development environment",0,0,0,0,1,0,Disappoinment,,,,
flutter/flutter,issue,957179425,2021-11-02 7:57:57,TheCGDF,"Flutter has not provided us a way to change it, so the document is impossible for now.","Flutter has not provided us a way to change it, so the document is impossible for now.",0,0,0,0,1,0,Disappoinment,,,,
flutter/flutter,pull_request,729462534,2021-10-15 1:43:24,blasten,"> I'm not sure if you can have multiple arguments on the function actually used for the entry point of the isolate

Is there an API that Flutter supports that allows to do that? I don't think the current embedding/engine APIs allows to pass custom parameters.

> instead of wrapping the function, how about just exporting it?

That doesn't work unfortunately. The Dart plugin registrant isn't called. It might just be that the engine cannot find the dart plugin registrant because it isn't in the same file that defined the main entrypoint.","[BLOCK QUOTE].

Is there an API that Flutter supports that allows to do that? I don't think the current embedding/engine APIs allows to pass custom parameters.

[BLOCK QUOTE].

That doesn't work unfortunately. The Dart plugin registrant isn't called. It might just be that the engine cannot find the dart plugin registrant because it isn't in the same file that defined the main entrypoint.",0,0,0,0,1,0,Disappointment,,,,
Microsoft/TypeScript,pull_request,607233139,2021-04-05 17:56:11,sandersn,"Just a PR -- I'll mark it with the Housekeeping label. (The bot doesn't know about Housekeeping iirc, so it will still probably comment, unfortunately.)","Just a PR -- I'll mark it with the Housekeeping label. (The bot doesn't know about Housekeeping iirc, so it will still probably comment, unfortunately.)",0,0,0,0,1,0,Disappointment,,Unfortunately -> Disappointment,,
flutter/flutter,pull_request,645799029,2021-06-04 19:18:56,chunhtai,"That is an unfortunate how onSelectionHandleTapped behave differently based on the implementation of TextSelectionControls. 

I am ok with this approach if we can deprecate the onSelectionHandleTapped at some point....","That is an unfortunate how onSelectionHandleTapped behave differently based on the implementation of TextSelectionControls. 

I am ok with this approach if we can deprecate the onSelectionHandleTapped at some point....",0,0,0,0,1,0,Disappointment,-,Disappointment,,
angular/angular,pull_request,665335063,2021-07-07 12:45:30,dario-piotrowicz,mh.... yeah sorry about that :disappointed:,mh.... yeah sorry about that :disappointed:,0,0,0,0,1,0,Disappointment,,Disappointed,,
angular/angular,pull_request,685491920,2021-08-09 20:17:09,dario-piotrowicz,"yeah, sorry my bad :disappointed:","yeah, sorry my bad :disappointed:",0,0,0,0,1,0,Disappointment,,Disappointment,,
angular/angular,pull_request,711649080,2021-09-18 22:27:58,gkalpak,"I don't have access to ""real"" Safari, but by playing in an emulator another option that I think would work (and avoid repetition) would be to use a `<g>` element and a CSS scale transform:
```diff
<style>
.land { fill: #f2f2f2; }
.water { fill: #ddd; }
+ #angular-logo { transform: scale(0.16); }
</style>
<title>Loved by Millions</title>
<defs>
- <symbol id=""angular-logo"" viewBox=""0 0 200 200"">
+ <g id=""angular-logo"">
<!-- ... -->
- </symbol>
+ </g>
```
##
Either way is not great, so leaving it up to you 😇","I don't have access to ""real"" Safari, but by playing in an emulator another option that I think would work (and avoid repetition) would be to use a `<g>` element and a CSS scale transform: 

[TRIPLE QUOTE]. 

## Either way is not great, so leaving it up to you 😇",0,0,0,0,1,0,Disappointment,-,Disappointment,,
webpack/webpack,issue,851132132,2021-05-31 2:58:05,myNameIsDu,I don't quite understand why CI failed. Could you please give me some help,I don't quite understand why CI failed. Could you please give me some help,0,0,0,0,1,0,Disappointment,,Disappointment,,
webpack/webpack,issue,856050690,2021-06-07 15:43:09,alexander-akait,"Sorry we can't fix it in webpack or webpack-dev-server, anyway feel free to feedback","Sorry we can't fix it in webpack or webpack-dev-server, anyway feel free to feedback",0,0,0,0,1,0,Disappointment,-,Disappointment,,
angular/angular,issue,899814627,2021-08-16 21:00:35,dylhunn,"Hi @theodorejb, thanks for working on the changes in this PR! I had a quick chat about this with @AndrewKushnir, and the problem with this fix is that changing DOM value happens asynchronously and that can lead to subtle issues as described in [this comment](https://github.com/angular/angular/pull/23784#issuecomment-692342393). We think the best approach would be to update the DOM value once the rendering is complete. Currently there is no lifecycle hook that for that, and we'd need a project proposal to add one. If there is a decision to add such lifecycle hook, the fix in this PR can leverage that and we should be able to land the change.

This is certainly a disappointing outcome, since this is a major performance issue and you put in a lot of effort on this. Sorry that it turned out to be blocked on a major addition like this :/","Hi [USER], thanks for working on the changes in this PR! I had a quick chat about this with [USER], and the problem with this fix is that changing DOM value happens asynchronously and that can lead to subtle issues as described in [this comment]([URL]) We think the best approach would be to update the DOM value once the rendering is complete. Currently there is no lifecycle hook that for that, and we'd need a project proposal to add one. If there is a decision to add such lifecycle hook, the fix in this PR can leverage that and we should be able to land the change. 

This is certainly a disappointing outcome, since this is a major performance issue and you put in a lot of effort on this. Sorry that it turned out to be blocked on a major addition like this :/",0,0,0,0,1,0,Disappointment,-,Disappointed,,
webpack/webpack,issue,903122738,2021-08-21 14:16:09,alexander-akait,"But you can use `--profile` and avoid output stats, I don't understand what is the problem with `--stats verbose`","But you can use `--profile` and avoid output stats, I don't understand what is the problem with `--stats verbose`",0,0,0,0,1,0,Disappointment,,Disappointment,,
angular/angular,issue,916475242,2021-09-09 22:10:12,atscott,Closing. This isn't feasible at this time.,Closing. This isn't feasible at this time.,0,0,0,0,1,0,Disappointment,,Disappointment,,
Microsoft/TypeScript,issue,922159377,2021-09-18 1:53:28,igorer88,It happens to me too. :disappointed:,It happens to me too. :disappointed:,0,0,0,0,1,0,Disappointment,,Disappointment,,
Microsoft/TypeScript,issue,942688270,2021-10-13 20:18:59,mjbvz,I closed it because it's gotten 3 upvotes over the past 3 years,I closed it because it's gotten 3 upvotes over the past 3 years,0,0,0,0,1,0,Disappointment,,Disappointment,,
flutter/flutter,issue,946029784,2021-10-18 18:05:45,kenzieschmoll,@zanderso @keyonghan I am not sure how to fix this since I cannot reproduce locally. Do either of you have ideas for a fix?,[USER] [USER] I am not sure how to fix this since I cannot reproduce locally. Do either of you have ideas for a fix?,0,0,0,0,1,0,Disappointment,,Disappointment,,
flutter/flutter,issue,948692661,2021-10-21 14:47:02,danagbemava-nc,"Without additional information, we are unfortunately not sure how to resolve this issue. 
We are therefore reluctantly going to close this bug for now. 
Please don't hesitate to comment on the bug if you have any more information for us; we will reopen it right away! 
Thanks for your contribution.

Could everyone who still has this problem please file a new issue with the exact description of what happens, logs, and the output of `flutter doctor -v`.
All system setups can be slightly different, so it's always better to open new issues and reference related issues.","Without additional information, we are unfortunately not sure how to resolve this issue. 
We are therefore reluctantly going to close this bug for now. 
Please don't hesitate to comment on the bug if you have any more information for us; we will reopen it right away! 
Thanks for your contribution.

Could everyone who still has this problem please file a new issue with the exact description of what happens, logs, and the output of `flutter doctor -v`.
All system setups can be slightly different, so it's always better to open new issues and reference related issues.",0,0,0,0,1,0,Disappointment,-,Unfortunate -> Disappointment,1,
flutter/flutter,issue,953541913,2021-10-28 6:30:39,Hixie,"I don't think there's a way to distinguish what buttons are pushed when the mouse is clicked, unfortunately. We should add an onStartDetails handler (or probably just change the argument to onStart, if we can find a good way to `dart fix` it, but that might not be easy) that gives you that information.

Currently you only get that information on the first move update after the click.","I don't think there's a way to distinguish what buttons are pushed when the mouse is clicked, unfortunately. We should add an onStartDetails handler (or probably just change the argument to onStart, if we can find a good way to `dart fix` it, but that might not be easy) that gives you that information.

Currently you only get that information on the first move update after the click.",0,0,0,0,1,0,Disappointment,-,Disappointment (on not having ways to distinguish),,
Microsoft/TypeScript,issue,955279639,2021-10-30 15:01:02,lewisgauss,"> Here is a link to a working solution on stackoverflow The solution requires adding the json schema to vscode JSON Settings https://stackoverflow.com/questions/61287127/vscode-shows-typescript-related-problems-in-jsconfig-json-file#answer-66552275

I tried this, sadly it doesn't work for me.","[BLOCK QUOTE]. I tried this, sadly it doesn't work for me.",0,0,0,0,1,0,Disappointment,-,Disappointment,,
flutter/flutter,issue,957183512,2021-11-02 8:04:32,mamuseferha,"@misici234 I’m unable to reproduce the issue to pinpoint the cause, it could be the third party’s integration with the framework. I'll be labelling it for further investigation.","[USER] I’m unable to reproduce the issue to pinpoint the cause, it could be the third party’s integration with the framework. I'll be labelling it for further investigation.",0,0,0,0,1,0,Disappointment,,Disappointment,,
angular/angular,issue,958255605,2021-11-02 22:14:04,jessicajaniuk,Closing this since it's seen no updates for 2 years and is out of date. We can re-open and land if the change is still valid.,Closing this since it's seen no updates for 2 years and is out of date. We can re-open and land if the change is still valid.,0,0,0,0,1,0,Disappointment,,,,
flutter/flutter,issue,959791063,2021-11-03 18:07:00,ArnoudWellens,"Hello, I have tried both suggestions but unfortunately none of them worked. The first option did not change anything; for the second options, I could not see these files anywhere.","Hello, I have tried both suggestions but unfortunately none of them worked. The first option did not change anything; for the second options, I could not see these files anywhere.",0,0,0,0,1,0,Disappointment,,Disappointment,,
webpack/webpack,pull_request,108326688,2017-03-28 3:14:51,mc-zone,My bad. Looks like didn't load the .editorconfig at the time. It's weird. I've reinstall my editor plugin then fixed it.,My bad. Looks like didn't load the .editorconfig at the time. It's weird. I've reinstall my editor plugin then fixed it.,0,0,0,0,1,0,Neglect,,,,
webpack/webpack,pull_request,112711969,2017-04-21 15:16:09,sokra,"You forgot to add the prettier rule to the eslint rules. This does nothing currently.

https://github.com/not-an-aardvark/eslint-plugin-prettier#usage","You forgot to add the prettier rule to the eslint rules. This does nothing currently.

[URL]",0,0,0,0,1,0,Neglect,,Neglect,,
webpack/webpack,pull_request,139258275,2017-09-15 21:56:23,fresheneesz,"Oops, that wasn't intentional","Oops, that wasn't intentional",0,0,0,0,1,0,Neglect,Embarrassment,Embarrassment,,
webpack/webpack,pull_request,159822327,2018-01-05 7:49:00,ooflorent,"Right, I forgot to remove this while investigating the failing test case.","Right, I forgot to remove this while investigating the failing test case.",0,0,0,0,1,0,Neglect,-,Neglect,,
webpack/webpack,pull_request,159985236,2018-01-05 21:35:13,ooflorent,Right. This is embarrassing...,Right. This is embarrassing...,0,0,0,0,1,0,Neglect,Embarrassment,Embarrassment,,
webpack/webpack,pull_request,164284889,2018-01-27 23:59:31,TheLarkInn,Nope this is still proof of concept and is a good reminder that I forget console logs. 😬,Nope this is still proof of concept and is a good reminder that I forget console logs. 😬,0,0,0,0,1,0,Neglect,Embarrassment,Embarrassment,,
webpack/webpack,pull_request,175305372,2018-03-18 21:46:55,Hypnosphi,Oops my bad,Oops my bad,0,0,0,0,1,0,Neglect,Embarrassment,Embarrassment,,
webpack/webpack,pull_request,175672802,2018-03-20 7:28:13,nveenjain,"Yeah, will edit that, sorry. :smiley:, wanted to ask question related to mocking.","Yeah, will edit that, sorry. :smiley:, wanted to ask question related to mocking.",0,0,0,0,1,0,Neglect,Embarrassment,Embarrased for a mistake,,
webpack/webpack,pull_request,187519600,2018-05-11 4:48:05,ScottRudiger,"Sorry, I meant to include the exposed variables in the diff.","Sorry, I meant to include the exposed variables in the diff.",0,0,0,0,1,0,Neglect,Embarrassment,Embarrassed,1,
webpack/webpack,pull_request,195418891,2018-06-14 13:19:25,Legends,"aaa I see what you mean, sh...... ok, sorry will fix this","aaa I see what you mean, sh...... ok, sorry will fix this",0,0,0,0,1,0,Neglect,Embarrassment,Embarrased (over mistake),,
Microsoft/TypeScript,pull_request,441936829,2020-06-18 2:43:15,Zzzen,"🤦 It was meant to be:

```
Only care about a result better than or at least the same as the best so far in terms of case-insensitive distances.
```

Do you have any suggestions?","🤦 It was meant to be: 

[TRIPLE QUOTE]. 

Do you have any suggestions?",0,0,0,0,1,0,Neglect,Embarrassment,Embarrassment,,
angular/angular,pull_request,499866660,2020-10-05 20:54:43,atscott,"Ah, yes that's right! I was thinking about this case again over the weekend and forgot why I had previously realized it would be fine (because we skip the browser url update in this case 🤦 )","Ah, yes that's right! I was thinking about this case again over the weekend and forgot why I had previously realized it would be fine (because we skip the browser url update in this case 🤦 )",0,0,0,0,1,0,Neglect,embarassment,,,
Microsoft/TypeScript,pull_request,527391825,2020-11-20 4:34:18,orange4glace,"Oh, I forgot to revert that. Sorry. Fixed!","Oh, I forgot to revert that. Sorry. Fixed!",0,0,0,0,1,0,Neglect,,,,
Microsoft/TypeScript,pull_request,531047169,2020-11-26 13:59:11,weswigham,"Hah, sorry, yeah, ok. Diffs don't really expand in `checker` and I was reading on mobile~","Hah, sorry, yeah, ok. Diffs don't really expand in `checker` and I was reading on mobile~",0,0,0,0,1,0,Neglect,,,,
Microsoft/TypeScript,pull_request,545912300,2020-12-18 15:33:24,amcasey,"Oops, missed the precedent. Changed.","Oops, missed the precedent. Changed.",0,0,0,0,1,0,Neglect,,,,
Microsoft/TypeScript,pull_request,561172432,2021-01-20 18:11:51,sheetalkamat,sorry about that..,sorry about that..,0,0,0,0,1,0,Neglect,embarassment,,,
Microsoft/TypeScript,pull_request,608856666,2021-04-07 17:32:49,andrewbranch,"Ok, so, in this case, we don’t need a semicolon because we had a line break and `{` is not one of the tokens that prevents ASI from happening. So here, we do want `Unexpected token. A constructor, method, accessor, or property was expected.` But if it were on the previous line, we’d want `';' expected.` Sorry if I led you astray in my previous comment—I think what I said was right, but incomplete. This stuff is tricky 😅 Some test cases:
```ts
class A {
foo = 0 {} // ';' expected
}
class B {
foo = 0; {} // Unexpected token. A constructor, method, accessor, or property was expected.
}
class C {
foo = 0
{} // Unexpected token. A constructor, method, accessor, or property was expected.
}
```
which is what they all say in current master.","Ok, so, in this case, we don’t need a semicolon because we had a line break and `{` is not one of the tokens that prevents ASI from happening. So here, we do want `Unexpected token. A constructor, method, accessor, or property was expected.` But if it were on the previous line, we’d want `';' expected.` Sorry if I led you astray in my previous comment—I think what I said was right, but incomplete. This stuff is tricky 😅 Some test cases:
[TRIPLE QUOTE].
which is what they all say in current master.",0,0,0,0,1,0,Neglect,guilt,,,
Microsoft/TypeScript,pull_request,624256467,2021-04-30 22:22:42,sheetalkamat,Sorry i wasnt very clear in my comment.. What i was saying was that comparison needs to be between `Path` but value needs to be string.,Sorry i wasnt very clear in my comment.. What i was saying was that comparison needs to be between `Path` but value needs to be string.,0,0,0,0,1,0,Neglect,embarassment,,,
angular/angular,pull_request,626079878,2021-05-04 20:23:22,kapunahelewong,"Oh yes, I just mixed that one up. Fixing!","Oh yes, I just mixed that one up. Fixing!",0,0,0,0,1,0,Neglect,embarassment,,,
flutter/flutter,pull_request,646869077,2021-06-07 19:10:09,jonahwilliams,"I thought I did, my bad","I thought I did, my bad",0,0,0,0,1,0,Neglect,embarassment,,,
flutter/flutter,pull_request,648607519,2021-06-09 19:18:38,craiglabenz,"Oh whoops, I thought I'd added this.","Oh whoops, I thought I'd added this.",0,0,0,0,1,0,Neglect,,,,
flutter/flutter,pull_request,661805785,2021-06-30 20:56:53,justinmc,"Oh sorry, you're good. I was misreading the open/close brackets for the parameters in SelectableText.rich.","Oh sorry, you're good. I was misreading the open/close brackets for the parameters in SelectableText.rich.",0,0,0,0,1,0,Neglect,Embarrassment,Neglect,,
flutter/flutter,pull_request,668162301,2021-07-12 18:30:56,HansMuller,"Oops, good catch. I'd forgotten to commit some local changes.","Oops, good catch. I'd forgotten to commit some local changes.",0,0,0,0,1,0,Neglect,,Neglect,,
Microsoft/TypeScript,pull_request,670810244,2021-07-15 21:15:16,rbuckton,Obvious typo I wish I'd caught sooner 😔. Good catch.,Obvious typo I wish I'd caught sooner 😔. Good catch.,0,0,0,0,1,0,Neglect,Embarrassment,Embarrassment,,
angular/angular,pull_request,670920406,2021-07-16 2:24:24,bjarkler,"You are indeed correct. I must have screwed something up when I initially tested this, but I've now formatted all of the SVGs properly and confirmed that they are still working fine.","You are indeed correct. I must have screwed something up when I initially tested this, but I've now formatted all of the SVGs properly and confirmed that they are still working fine.",0,0,0,0,1,0,Neglect,,Neglect,,
angular/angular,pull_request,676953338,2021-07-26 21:21:46,dario-piotrowicz,"yeah sorry, I got so focused on the other issues that I missed the simplest thing :cry: :sob:
`str` is 100% useless, I'll get rid of it, sorry :disappointed: :bow:","yeah sorry, I got so focused on the other issues that I missed the simplest thing :cry: :sob:
`str` is 100% useless, I'll get rid of it, sorry :disappointed: :bow:",0,0,0,0,1,0,Neglect,embarassment,,,
angular/angular,pull_request,678683145,2021-07-28 22:03:19,danieltre23,I think it's best to avoid the null assertion.,I think it's best to avoid the null assertion.,0,0,0,0,1,0,Neglect,,,,
angular/angular,pull_request,680373369,2021-07-31 15:36:51,IgorMinar,"""Illustrate"" doesn't seem right. I think the original meaning was ""let's take an example of"" or ""let's take a look at"".","""Illustrate"" doesn't seem right. I think the original meaning was ""let's take an example of"" or ""let's take a look at"".",0,0,0,0,1,0,Neglect,,Neglect (towards original meaning),,
angular/angular,pull_request,688922297,2021-08-14 12:01:48,crisbeto,"Ah good point, not sure how I missed that 😅","Ah good point, not sure how I missed that 😅",0,0,0,0,1,0,Neglect,-,Neglect,,
flutter/flutter,pull_request,691654921,2021-08-18 22:48:03,justinmc,I'm embarrassed that I never thought of using reduce for calculating math.max of more than 2 items. 👍,I'm embarrassed that I never thought of using reduce for calculating math.max of more than 2 items. 👍,0,0,0,0,1,0,Neglect,embarassment,,,
angular/angular,pull_request,704845188,2021-09-08 23:33:44,AndrewKushnir,"Ah, I've missed that 🤦 Thanks Andrew.","Ah, I've missed that 🤦 Thanks Andrew.",0,0,0,0,1,0,Neglect,Embarrassment,Embarrassed (based on emoji),,
Microsoft/TypeScript,pull_request,708188146,2021-09-14 11:49:59,Kingwl,Seems my fault.,Seems my fault.,0,0,0,0,1,0,Neglect,Embarrassment,Embarrassment,,
angular/angular,pull_request,713771774,2021-09-22 9:41:02,petebacondarwin,"Oops my mistake. This should be:
```suggestion
// #docregion imports
import { Component, OnInit, Input } from '@angular/core';
import { Product } from '../products';
// #enddocregion imports
// #docregion as-generated
```","Oops my mistake. This should be:
[TRIPLE QUOTE].",0,0,0,0,1,0,Neglect,,,,
flutter/flutter,pull_request,714192042,2021-09-22 18:09:51,christopherfujino,"sorry, didn't push yet...","sorry, didn't push yet...",0,0,0,0,1,0,Neglect,,,,
flutter/flutter,pull_request,720379174,2021-10-01 16:19:44,Piinks,"Oh right! 🙃 This started as a Mac issue, I forgot to add the rest","Oh right! 🙃 This started as a Mac issue, I forgot to add the rest",0,0,0,0,1,0,Neglect,,Neglect,,
angular/angular,pull_request,725161517,2021-10-08 16:44:51,gkalpak,"Ooops! I would swear there was a higher up `describe` with something like `'on initialization'` 🧐
I'll change it to `should be enabled when the component is initialized` (because it get enabled in the `ngOnInit()` hook).","Ooops! I would swear there was a higher up `describe` with something like `'on initialization'` 🧐
I'll change it to `should be enabled when the component is initialized` (because it get enabled in the `ngOnInit()` hook).",0,0,0,0,1,0,Neglect,,,,
flutter/flutter,pull_request,729849950,2021-10-15 14:03:07,DanTup,"Oops, bad copy/paste from Dart. Updated to refer to Flutter tool.","Oops, bad copy/paste from Dart. Updated to refer to Flutter tool.",0,0,0,0,1,0,Neglect,,Neglect,,
flutter/flutter,pull_request,729998768,2021-10-15 17:23:51,Piinks,"Oh my, clearly not enough coffee this day. 🤦‍♀️","Oh my, clearly not enough coffee this day. 🤦‍♀️",0,0,0,0,1,0,Neglect,Embarrassment,Embarrassment,,
flutter/flutter,pull_request,730130505,2021-10-15 21:27:32,Yugue,"Oh my bad, removed.","Oh my bad, removed.",0,0,0,0,1,0,Neglect,,,,
angular/angular,pull_request,731743222,2021-10-19 10:57:57,daiscog,🤦 will fix,🤦 will fix,0,0,0,0,1,0,Neglect,embarassment,,,
angular/angular,pull_request,732620316,2021-10-20 10:10:03,HyperLife1119,Sorry i was careless.,Sorry i was careless.,0,0,0,0,1,0,Neglect,guilt,,,
webpack/webpack,issue,860083418,2021-06-12 17:23:32,Jules-Bertholet,"Oops, forgot a step in the reproduction instructions, `output.wasmLoading` needs to be set also","Oops, forgot a step in the reproduction instructions, `output.wasmLoading` needs to be set also",0,0,0,0,1,0,Neglect,,Neglect,,
angular/angular,issue,878506656,2021-07-12 18:41:54,meblum,"New to GitHub pull-requests, I apologize for the unintended close.","New to GitHub pull-requests, I apologize for the unintended close.",0,0,0,0,1,0,Neglect,,,,
Microsoft/TypeScript,issue,904916186,2021-08-24 19:30:16,MarkKahn,"whoops, I hit undo one too many times before committing. Fixed, sorry. Issue is in `a/c.ts`","whoops, I hit undo one too many times before committing. Fixed, sorry. Issue is in `a/c.ts`",0,0,0,0,1,0,Neglect,,,,
Microsoft/TypeScript,issue,917988261,2021-09-13 9:05:03,Kvek,"Sorry, accidentally closed it.","Sorry, accidentally closed it.",0,0,0,0,1,0,Neglect,Embarrassment,Embarrassed,1,
webpack/webpack,issue,919488143,2021-09-14 20:26:36,Download,"Ok, sorry for raising the alarm. I didn't realize I had to use `browserslist` and configure that I wanted support for IE11 explicitly in later versions, but it makes sense. Gotta forget about IE at some point :)","Ok, sorry for raising the alarm. I didn't realize I had to use `browserslist` and configure that I wanted support for IE11 explicitly in later versions, but it makes sense. Gotta forget about IE at some point :)",0,0,0,0,1,0,Neglect,-,Neglect,1,
angular/angular,issue,920557276,2021-09-16 4:01:50,cesperian,"> @cesperian - did you have time to finish the updates to get this PR landed?

@petebacondarwin to be honest i completely neglected it because of a sizable, single-person project that landed on me several months ago. If I can't carve out some time inside the next couple days to get this done I will let you know. Sincere apologies...","[BLOCK QUOTE]. 

[USER] to be honest i completely neglected it because of a sizable, single-person project that landed on me several months ago. If I can't carve out some time inside the next couple days to get this done I will let you know. Sincere apologies...",0,0,0,0,1,0,Neglect,-,Neglect,1,
Microsoft/TypeScript,issue,926787602,2021-09-24 17:06:47,andrewbranch,"Ah, I forgot about that 👍","Ah, I forgot about that 👍",0,0,0,0,1,0,Neglect,,Neglect,,
Microsoft/TypeScript,issue,931556612,2021-09-30 18:19:35,andrewbranch,Apparently I didn’t pull recently enough to resolve all the conflicts 🤦,Apparently I didn’t pull recently enough to resolve all the conflicts 🤦,0,0,0,0,1,0,Neglect,embarassment,,,
Microsoft/TypeScript,issue,932902244,2021-10-03 10:08:07,DetachHead,"Yeah sorry that was a bit lazy of me, that was just the earliest version on playground I tested against before other errors started to show up","Yeah sorry that was a bit lazy of me, that was just the earliest version on playground I tested against before other errors started to show up",0,0,0,0,1,0,Neglect,,,,
angular/angular,issue,938433530,2021-10-08 8:05:38,tnodet,"I think I messed up this pull request, I didn't push with `--force-with-lease`. Let me open a new clean pull request.","I think I messed up this pull request, I didn't push with `--force-with-lease`. Let me open a new clean pull request.",0,0,0,0,1,0,Neglect,Embarrassment,Embarrassment,,
Microsoft/TypeScript,issue,944841426,2021-10-16 2:29:07,dgoldstein0,"I'm not entirely sure what #45267 is going for - while it makes sense in theory, the reality of allowUnreachableCode: false is that it seems to include the type-unreachable things. Anyhow I suppose my complaint for type-unreachable code is that the error messages could be more clear, even when allowUnreachableCode: true. It's not immediately clear to me if that means this ticket will have the same resolution as that one or not.","I'm not entirely sure what #45267 is going for - while it makes sense in theory, the reality of allowUnreachableCode: false is that it seems to include the type-unreachable things. Anyhow I suppose my complaint for type-unreachable code is that the error messages could be more clear, even when allowUnreachableCode: true. It's not immediately clear to me if that means this ticket will have the same resolution as that one or not.",0,0,0,0,1,0,Neglect,,"""my complaint ... could be more clear"" -> Neglect",,
flutter/flutter,issue,946750179,2021-10-19 13:56:21,danagbemava-nc,"Hi @YowFung, my question was poorly phrased. 

I meant are you running the app or `android`, `web` or `desktop`?

Thank you","Hi [USER], my question was poorly phrased. 

I meant are you running the app or `android`, `web` or `desktop`? 

Thank you",0,0,0,0,1,0,Neglect,Embarrassment,Embarrassment (over poorly phrased question),,
flutter/flutter,issue,949074310,2021-10-21 23:23:30,dnfield,"Yes, sorry - I forgot to close this when that patch got reverted. It may still be possible to do something with `Picture.dispose` on the DOM side, but not for diffing.","Yes, sorry - I forgot to close this when that patch got reverted. It may still be possible to do something with `Picture.dispose` on the DOM side, but not for diffing.",0,0,0,0,1,0,Neglect,Embarrassment,Neglect,,
angular/angular,issue,949935121,2021-10-22 20:19:53,tsteuwer-accesso,"Oh snap, I didn't even see that 😭.","Oh snap, I didn't even see that 😭.",0,0,0,0,1,0,Neglect,embarassment,,,
webpack/webpack,issue,952144731,2021-10-26 17:14:26,hmil,This one was on me. I somehow ended up with two different copies of `webpack` in my `node_modules` and so the mix of versions didn't go well. 🤦 Really sorry for the trouble.,This one was on me. I somehow ended up with two different copies of `webpack` in my `node_modules` and so the mix of versions didn't go well. 🤦 Really sorry for the trouble.,0,0,0,0,1,0,Neglect,Embarrassment,Embarrassment,,
Microsoft/TypeScript,issue,952194368,2021-10-26 18:20:04,zackradisic,"Can't believe I missed that, that does the trick. Thanks!","Can't believe I missed that, that does the trick. Thanks!",0,0,0,0,1,0,Neglect,,,1,
flutter/flutter,issue,953315083,2021-10-27 21:11:08,zanderso,"I don't think we've seen this flake in a long time, so I'm going to close this as part of the engine flaky issue triage process. Please feel free to re-open if I'm mistaken.","I don't think we've seen this flake in a long time, so I'm going to close this as part of the engine flaky issue triage process. Please feel free to re-open if I'm mistaken.",0,0,0,0,1,0,Neglect,Insecurity,Insecurity,,
Microsoft/TypeScript,pull_request,539427939,2020-12-09 15:57:04,sandersn,"haha sorry, my scheme history finally caught up with me","haha sorry, my scheme history finally caught up with me",0,0,0,0,1,0,Neglect,Embarrassment,,,
Microsoft/TypeScript,issue,925412915,2021-09-23 0:02:07,andrewbranch,"I think the notes lost some context there—what I called “rocket science” was actually hand-authoring type definitions (e.g. for DefinitelyTyped) that work for a package that ships CJS and ESM side-by-side, and my point was that being able to redirect type resolution (to a separate module definition for each module kind) via export maps is going to be a super nice feature for us, and for type definition authors.

(Also, rocket science was probably a bad analogy, since I assume that rocket science is meticulous, precise, and reliable 😬)","I think the notes lost some context there—what I called “rocket science” was actually hand-authoring type definitions (e.g. for DefinitelyTyped) that work for a package that ships CJS and ESM side-by-side, and my point was that being able to redirect type resolution (to a separate module definition for each module kind) via export maps is going to be a super nice feature for us, and for type definition authors.

(Also, rocket science was probably a bad analogy, since I assume that rocket science is meticulous, precise, and reliable 😬)",0,0,0,0,1,0,"Neglect, Sadness",-,"Agrees that the analogy was bad -> neglect, and the emoji -> sad",,
webpack/webpack,issue,921221402,2021-09-16 20:27:20,fresheneesz,"Sorry, it seems I lost track of this. Is this PR still useful? Should I try to fix the issues?","Sorry, it seems I lost track of this. Is this PR still useful? Should I try to fix the issues?",0,0,0,0,1,0,"Neglect, Zest",enthusiasm,,,
webpack/webpack,pull_request,184589259,2018-04-27 4:25:54,Jessidhia,I generally don't like using `Function` but it seems appropriate in this case 😔,I generally don't like using `Function` but it seems appropriate in this case 😔,0,0,0,0,1,0,Nervousness,uneasiness,,,
angular/angular,issue,878122592,2021-07-12 9:29:32,petebacondarwin,"Yes, I agree with your assessment. This is still a bug.

But just to manage expectations: since the workaround is straightforward and it seems this bug is hit fairly rarely, it is unlikely that it will be fixed very soon.","Yes, I agree with your assessment. This is still a bug.

But just to manage expectations: since the workaround is straightforward and it seems this bug is hit fairly rarely, it is unlikely that it will be fixed very soon.",0,0,0,0,1,0,Sadness,,,,
webpack/webpack,pull_request,94136333,2016-12-29 13:38:22,sokra,It's sad that this has to be removed. It was intended as documentation of the available parameters,It's sad that this has to be removed. It was intended as documentation of the available parameters,0,0,0,0,1,0,Sadness,,Sadness,,
webpack/webpack,pull_request,97872933,2017-01-25 20:38:35,lgraziani2712,I forget to change that 😟,I forget to change that 😟,0,0,0,0,1,0,Sadness,Sorrow,Sad (based on emoji),,
webpack/webpack,pull_request,128043467,2017-07-18 17:35:22,sokra,"Yep, I was wrong. Sorry","Yep, I was wrong. Sorry",0,0,0,0,1,0,Sadness,Sorrow,Sorrow -> Sad,,
webpack/webpack,pull_request,177723176,2018-03-28 11:53:47,ooflorent,"Unfortunately I didn't check it earlier but there are errors in the type definitions. If `context` is defined, then the first argument is not `T1` but the context.","Unfortunately I didn't check it earlier but there are errors in the type definitions. If `context` is defined, then the first argument is not `T1` but the context.",0,0,0,0,1,0,Sadness,Sorrow,Sad,,
webpack/webpack,pull_request,180850694,2018-04-11 18:18:08,rtsao,"Interesting, TIL!

Unfortunately, the elegance of this implementation relies on the fact that setting script src produces an absolute URL, even if the original path is relative. Which versions of IE suffer from that problem? According to [this MDN table](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script#Browser_compatibility) IE doesn't support the `crossorigin` attribute, so it could be safely set after setting src. I'll move setting src back to the end, but I think setting crossorigin after `src` is still safe. 

The alternative might be producing an absolute URL via something like: https://stackoverflow.com/a/24437713","Interesting, TIL!

Unfortunately, the elegance of this implementation relies on the fact that setting script src produces an absolute URL, even if the original path is relative. Which versions of IE suffer from that problem? According to this MDN table([URL]) IE doesn't support the `crossorigin` attribute, so it could be safely set after setting src. I'll move setting src back to the end, but I think setting crossorigin after `src` is still safe. 

The alternative might be producing an absolute URL via something like: [URL]",0,0,0,0,1,0,Sadness,Sorrow,Unfortunate -> Sad,,
webpack/webpack,pull_request,187446670,2018-05-10 20:16:27,xtuc,I don't understand this change,I don't understand this change,0,0,0,0,1,0,Sadness,,Sadness,,
webpack/webpack,pull_request,290343159,2019-06-04 14:59:13,Bkucera,thought that could be a problem,thought that could be a problem,0,0,0,0,1,0,Sadness,Gloom,Gloom,,
webpack/webpack,pull_request,349088242,2019-11-21 13:39:27,raxraj,"Oh!! Sorry! while I was updating my node version, I touched it!!
Lemme Solve it!","Oh!! Sorry! while I was updating my node version, I touched it!!
Lemme Solve it!",0,0,0,0,1,0,Sadness,,Sadness,,
Microsoft/TypeScript,pull_request,562879521,2021-01-22 20:07:23,sandersn,these errors seem worse than before,these errors seem worse than before,0,0,0,0,1,0,Sadness,,Sadness,,
Microsoft/TypeScript,pull_request,575596542,2021-02-13 1:15:37,DanielRosenwasser,Sad! Maybe we should continue to auto-synthesize un-declared symbols.,Sad! Maybe we should continue to auto-synthesize un-declared symbols.,0,0,0,0,1,0,Sadness,Sorrow,Sadness,,
Microsoft/TypeScript,pull_request,599231575,2021-03-23 3:02:44,rbuckton,"Unfortunately, we changed how we write the type of `keyof A` here, so the only way to validate it now is using assignability.","Unfortunately, we changed how we write the type of `keyof A` here, so the only way to validate it now is using assignability.",0,0,0,0,1,0,Sadness,,Sadness,,
Microsoft/TypeScript,pull_request,629528064,2021-05-10 17:06:30,snowystinger,"my bad, I saw it was added to the available options in es5 here https://github.com/microsoft/TypeScript/pull/40709/files
so I assumed it would also be in the resolved options at that point
I'm happy to move it","my bad, I saw it was added to the available options in es5 here [URL]
so I assumed it would also be in the resolved options at that point
I'm happy to move it",0,0,0,0,1,0,Sadness,,Sadness,,
angular/angular,pull_request,640065913,2021-05-26 19:36:01,devversion,Unfortunately not in a reasonable way. The data is stored in `Cldr._resolved` and we'd need to specify a locale to get access (which I think is odd given this is global data not specific to a given locale),Unfortunately not in a reasonable way. The data is stored in `Cldr._resolved` and we'd need to specify a locale to get access (which I think is odd given this is global data not specific to a given locale),0,0,0,0,1,0,Sadness,Sorrow,Sad,,
flutter/flutter,pull_request,642114763,2021-05-30 18:59:28,omchiii,Yes. My bad,Yes. My bad,0,0,0,0,1,0,Sadness,,Sadness,,
angular/angular,pull_request,649834230,2021-06-11 9:30:51,petebacondarwin,One person's bug fix is another person's breaking change... but perhaps you are right 😞 No doubt there will be loads of these in G3...,One person's bug fix is another person's breaking change... but perhaps you are right 😞 No doubt there will be loads of these in G3...,0,0,0,0,1,0,Sadness,,Sadness,,
flutter/flutter,pull_request,650371928,2021-06-12 9:39:16,Anas35,"I’m sorry, I didn’t understand that? Should I remove the reference to the type of MaterialState?","I’m sorry, I didn’t understand that? Should I remove the reference to the type of MaterialState?",0,0,0,0,1,0,Sadness,,Sadness,,
flutter/flutter,pull_request,653426749,2021-06-17 10:13:40,creativecreatorormaybenot,"@LongCatIsLooong This is a **breaking change** 😓 How are we supposed to deal with packages that should work with multiple versions of Flutter that call `buildHandle`.

https://pub.dev/packages/flutter_math_fork is such a package and now it cannot work.

The change should have been `[VoidCallback? onTap]`, otherwise it is breaking. Should I make a PR and we cherry pick a hot fix for the dev channel?","[USER] This is a **breaking change** 😓 How are we supposed to deal with packages that should work with multiple versions of Flutter that call `buildHandle`.

[URL] is such a package and now it cannot work.

The change should have been `[VoidCallback? onTap]`, otherwise it is breaking. Should I make a PR and we cherry pick a hot fix for the dev channel?",0,0,0,0,1,0,Sadness,,Sadness,,
flutter/flutter,pull_request,657432636,2021-06-23 20:18:40,HansMuller,"Forgive me.
```dart
 assert((){
 // Whether the behavior is set through the constructor or the theme,
 // assert that our other properties are configured properly.
 if (snackBarBehavior != SnackBarBehavior.floating) {
 String message(parameter) {
 final String prefix = '$parameter can only be used with floating behavior. ';
 if (widget.behavior != null) {
 return '$prefix SnackBarBehavior.fixed was set in the SnackBar constructor.';
 } else if (snackBarTheme.behavior != null) {
 return '$prefix SnackBarBehavior.fixed was set by the inherited SnackBarThemeData.';
 } else {
 return '$prefix SnackBarBehavior.fixed was set by default.';
 }
 }
 assert(widget.margin == null, message('Margin'));
 assert(widget.width == null, message('Width'));
 }
 return true;
 }());
```","Forgive me.
[TRIPLE QUOTE].",0,0,0,0,1,0,Sadness,,,,
Microsoft/TypeScript,pull_request,657694993,2021-06-24 7:28:28,Kingwl,Oops. My bad.,Oops. My bad.,0,0,0,0,1,0,Sadness,,Sadness,,
angular/angular,pull_request,665138134,2021-07-07 8:02:44,petebacondarwin,This makes me a bit sad...,This makes me a bit sad...,0,0,0,0,1,0,Sadness,,Sadness,,
angular/angular,pull_request,666193520,2021-07-08 13:29:04,dario-piotrowicz,"Oh gosh, I am so sorry you had to look into things so much because of me :cry: 

I see what you mean, I will check it and try to place the normalization where it makes more sense :slightly_smiling_face: 

( again sorry for not having looked at this well enough :sob: )","Oh gosh, I am so sorry you had to look into things so much because of me :cry: 

I see what you mean, I will check it and try to place the normalization where it makes more sense :slightly_smiling_face: 

( again sorry for not having looked at this well enough :sob: )",0,0,0,0,1,0,Sadness,Sorrow,Sad,1,
angular/angular,pull_request,671742097,2021-07-17 20:48:48,dario-piotrowicz,":fearful: you're right!!!!!!
sorry :cry:",":fearful: you're right!!!!!!
sorry :cry:",0,0,0,0,1,0,Sadness,,Sadness,,
angular/angular,pull_request,675514594,2021-07-23 12:06:57,petebacondarwin,"This is completely foreign to me, but I think it is just simply stripping off the last line if the file contains a `sourceMappingURL`, right?
Perhaps a comment here would be helpful?","This is completely foreign to me, but I think it is just simply stripping off the last line if the file contains a `sourceMappingURL`, right?
Perhaps a comment here would be helpful?",0,0,0,0,1,0,Sadness,,Sadness,,
flutter/flutter,pull_request,687159377,2021-08-11 20:20:05,chunhtai,"I didnt get the logic, the _scheduleShowCaretOnScreen will be called in line 1770 anyway?","I didnt get the logic, the _scheduleShowCaretOnScreen will be called in line 1770 anyway?",0,0,0,0,1,0,Sadness,,Sadness,,
Microsoft/TypeScript,pull_request,690217466,2021-08-17 9:55:51,stkevintan,"Sorry, updated.","Sorry, updated.",0,0,0,0,1,0,Sadness,,Sadness,,
angular/angular,pull_request,700599098,2021-09-01 21:51:58,dario-piotrowicz,"sorry I am not completely sure :sweat: , in what they can help?
.... :thinking: I have been thinking but I can't formulate a sentence with ""Wildcard states can help you in/with..."" :sweat: I believe that the sentence as it currently is does make sense in saying that wildcard states are ""better"" when there are multiple states, I just don't think that that is the right word as they don't actually become better, they are give more useful... :thinking: is there something you particularly don't like in the sentence?","sorry I am not completely sure :sweat: , in what they can help?
.... :thinking: I have been thinking but I can't formulate a sentence with ""Wildcard states can help you in/with..."" :sweat: I believe that the sentence as it currently is does make sense in saying that wildcard states are ""better"" when there are multiple states, I just don't think that that is the right word as they don't actually become better, they are give more useful... :thinking: is there something you particularly don't like in the sentence?",0,0,0,0,1,0,Sadness,Sorrow,Sad,1,
flutter/flutter,pull_request,707557723,2021-09-13 17:53:11,LongCatIsLooong,"Yeah sorry I digressed. I was suggesting the json should be a map with a list of deltas.
- a map so we can add a fields in the future.
- a list of deltas so we don't have to write separately logic for handling batched/non-batched updates .","Yeah sorry I digressed. I was suggesting the json should be a map with a list of deltas.
- a map so we can add a fields in the future.
- a list of deltas so we don't have to write separately logic for handling batched/non-batched updates .",0,0,0,0,1,0,Sadness,,,,
Microsoft/TypeScript,pull_request,714195532,2021-09-22 18:14:56,acutmore,"Parser logic updated now. At first I thought going with this approach had broken the tests but turned out the tests were wrong, and this new approach leads to the correct result.

When I wrote the tests for this back in Febuary there were not implementations to try, and babel did not get the parsing right (they have now addressed these issues). So I unfortunately developed the wrong intuition for how this syntax should parse when nested within other expressions.

Did spot an issue in V8 when trying to compare to what they do: https://bugs.chromium.org/p/v8/issues/detail?id=12259","Parser logic updated now. At first I thought going with this approach had broken the tests but turned out the tests were wrong, and this new approach leads to the correct result.

When I wrote the tests for this back in Febuary there were not implementations to try, and babel did not get the parsing right (they have now addressed these issues). So I unfortunately developed the wrong intuition for how this syntax should parse when nested within other expressions.

Did spot an issue in V8 when trying to compare to what they do: [URL]",0,0,0,0,1,0,Sadness,,Unfortunately -> Sadness,,
flutter/flutter,pull_request,716891371,2021-09-27 17:15:51,LongCatIsLooong,"Yeah I'm not a big fan of the force unwraps, I'm something of a typesafety cultist myself. Sadly there isn't syntax sugar for unwrapping an expression in dart. I wouldn't too worried about the performance cost of an additional local variable, it's the compiler's job to optimize this kind of things I think.","Yeah I'm not a big fan of the force unwraps, I'm something of a typesafety cultist myself. Sadly there isn't syntax sugar for unwrapping an expression in dart. I wouldn't too worried about the performance cost of an additional local variable, it's the compiler's job to optimize this kind of things I think.",0,0,0,0,1,0,Sadness,Sorrow,Sadness,,1
flutter/flutter,pull_request,729997614,2021-10-15 17:21:55,Piinks,"I don't think I can, since it is an implementing class. The analyzer is unhappy with it.","I don't think I can, since it is an implementing class. The analyzer is unhappy with it.",0,0,0,0,1,0,Sadness,unhappiness,,,
flutter/flutter,pull_request,732302912,2021-10-19 23:02:34,HansMuller,"I agree, although moving all of those properties around (again) will be painful.","I agree, although moving all of those properties around (again) will be painful.",0,0,0,0,1,0,Sadness,,Sadness,,
angular/angular,pull_request,736906624,2021-10-26 20:47:18,dario-piotrowicz,"- my bad you're totally right about the `-foo` I totally missed that :sweat:, I guess it could be fixed with a negative lookahead? :thinking:
- about the ` *` and catastrophic backtracking (:fearful:) yeah it's unnecessary, sorry I just sort of got confused there sort of treating `.` as it would not match ` ` :sweat: - yeah, not sure why I put the group there :sweat_smile: :cry:","- my bad you're totally right about the `-foo` I totally missed that :sweat:, I guess it could be fixed with a negative lookahead? :thinking:
- about the ` *` and catastrophic backtracking (:fearful:) yeah it's unnecessary, sorry I just sort of got confused there sort of treating `.` as it would not match ` ` :sweat: - yeah, not sure why I put the group there :sweat_smile: :cry:",0,0,0,0,1,0,Sadness,,Sadness,,
angular/angular,pull_request,738719288,2021-10-28 19:59:19,dario-piotrowicz,"I am very sorry that I so bad at explaining stuff :sweat: what I was trying to say is that I try to avoid using string literals spanning across multiple lines as they more often than not in order to preserve their spacing need to break the normal document's indentation
for example in the code I mentioned in my previous comment we have:
```ts
expect(fixture.nativeElement.innerHTML)
.toEqual(`<div>Contenu: <div>avant<span>milieu</span>après</div><!--bindings={
""ng-reflect-ng-if"": ""true""
}-->!</div>`);
fixture.componentRef.instance.visible = false;
fixture.detectChanges();
```
which I don't like too much as it breaks the natural nice indentation of the document (since the second line of the string literal needs to have precisely two leading spaces and the last line zero)
so in that case something like:
```ts
expect(fixture.nativeElement.innerHTML)
.toEqual(
'<div>Contenu: <div>avant<span>milieu</span>après</div><!--bindings={\n'+
'""ng-reflect-ng-if"": ""true""}-->!</div>'
);
fixture.componentRef.instance.visible = false;
fixture.detectChanges();
```
would probably look nicer in my opinion
(not sure if the `toEqual` block should be less indented, but yeah that's not the point)
Anyways it is really unimportant and boils down to personal preferences I guess :slightly_smiling_face: (also I think it doesn't apply to the the comment anymore as the code has already changed a bunch since when the comment was made? :thinking: )","I am very sorry that I so bad at explaining stuff :sweat: what I was trying to say is that I try to avoid using string literals spanning across multiple lines as they more often than not in order to preserve their spacing need to break the normal document's indentation
for example in the code I mentioned in my previous comment we have:
[TRIPLE QUOTE].
which I don't like too much as it breaks the natural nice indentation of the document (since the second line of the string literal needs to have precisely two leading spaces and the last line zero)
so in that case something like:
[TRIPLE QUOTE].
would probably look nicer in my opinion
(not sure if the `toEqual` block should be less indented, but yeah that's not the point)
Anyways it is really unimportant and boils down to personal preferences I guess :slightly_smiling_face: (also I think it doesn't apply to the the comment anymore as the code has already changed a bunch since when the comment was made? :thinking: )",0,0,0,0,1,0,Sadness,,Sadness,,
Microsoft/TypeScript,pull_request,739509440,2021-10-29 20:18:38,DanielRosenwasser,"One day, we should find an easy/reusable way to easily ask ""is this true *assuming that there are no circularities?""
Today is not that day.","One day, we should find an easy/reusable way to easily ask ""is this true *assuming that there are no circularities?""
Today is not that day.",0,0,0,0,1,0,Sadness,Melancholy,"Sadness, Melancholy",,
webpack/webpack,pull_request,742485985,2021-11-04 2:26:11,g4rry420,"My apologies.
For testing, I have run the `yarn jest ConfigTestCases` and from my understanding the testing has been done in `ConfigTestCases.tempate.js` file which grabs the files from `configCases` folder and tests them. But still didn't understand what should I update in `test/configCases/emit-asset/different-source` ? Please, let me know about it.","My apologies. For testing, I have run the `yarn jest ConfigTestCases` and from my understanding the testing has been done in `ConfigTestCases.tempate.js` file which grabs the files from `configCases` folder and tests them. But still didn't understand what should I update in `test/configCases/emit-asset/different-source` ? Please, let me know about it.",0,0,0,0,1,0,Sadness,Sorrow,Sad,1,
webpack/webpack,issue,791360637,2021-03-05 11:28:43,alfonsomunozpomer,"You’re totally right, I think `package-lock.json` was playing tricks on me. Sorry for the noise.","You’re totally right, I think `package-lock.json` was playing tricks on me. Sorry for the noise.",0,0,0,0,1,0,Sadness,Sorrow,Sad (about the noise),1,
webpack/webpack,issue,793841817,2021-03-09 12:47:09,wojtekmaj,"Sorry, I don't know this repo well enough to create it.","Sorry, I don't know this repo well enough to create it.",0,0,0,0,1,0,Sadness,,Sadness,,
webpack/webpack,issue,809948282,2021-03-30 6:26:25,Nabwinsaud,all your review are worthless to me 😪,all your review are worthless to me 😪,0,0,0,0,1,0,Sadness,despair,,,
webpack/webpack,issue,819669744,2021-04-14 16:56:01,7rulnik,"Ooops sorry, missed it somehow","Ooops sorry, missed it somehow",0,0,0,0,1,0,Sadness,Sorrow,Sadness,1,
webpack/webpack,issue,822773291,2021-04-19 20:45:42,oles,"Thank you for that.
Sadly it only changed a word in my output: ""asset"" to ""hidden""
Sad to see the nice table overview of the sizes of the assets gone.
Was useful to quickly skim over the sizes row to see if something was wrong.
Now it's quick to miss if something got unexpectedly big:
![Screenshot from 2021-04-19 22-44-40](https://user-images.githubusercontent.com/7634050/115301024-f7210200-a160-11eb-8d1f-36bcd14ee088.png)","Thank you for that.
Sadly it only changed a word in my output: ""asset"" to ""hidden""
Sad to see the nice table overview of the sizes of the assets gone.
Was useful to quickly skim over the sizes row to see if something was wrong.
Now it's quick to miss if something got unexpectedly big: [URL]",0,0,0,0,1,0,Sadness,Sorrow,Sad,,
webpack/webpack,issue,839753858,2021-05-12 13:02:04,depoulo,"Sorry, I don't think I'll be able to help, since I could not get it to compile multiple CSS files (using mini-css-extract-plugin) with my setup in a satisfying way. The problem is that my CSS files are imported from the JS files, so the _layers_ solution only works if I multiply the main JS entrypoint, but then obviously it also compiles the whole JS again and again for every theme.

I worked around it by adding an entry point for every theme, each listing every single CSS file and defining `layer: theme`, so I could define different loader rules based on the `issuerLayer`.","Sorry, I don't think I'll be able to help, since I could not get it to compile multiple CSS files (using mini-css-extract-plugin) with my setup in a satisfying way. The problem is that my CSS files are imported from the JS files, so the _layers_ solution only works if I multiply the main JS entrypoint, but then obviously it also compiles the whole JS again and again for every theme.

I worked around it by adding an entry point for every theme, each listing every single CSS file and defining `layer: theme`, so I could define different loader rules based on the `issuerLayer`.",0,0,0,0,1,0,Sadness,,Sadness,,
webpack/webpack,issue,861433761,2021-06-15 11:52:38,alexander-akait,"Duplicate of https://github.com/webpack/webpack/issues/10400, unfortunately shared cache is not supported right now",Duplicate of [URL] unfortunately shared cache is not supported right now,0,0,0,0,1,0,Sadness,,Sadness,,
webpack/webpack,issue,867036924,2021-06-23 17:46:08,slorber,"Sorry, my example was a bit wrong: I'm reading aliases from the filesystem structure, and they are not static in the webpack config file (so I guess `buildDependencies: {config: [__filename]}` can't kick in):
```js
const myAliases = getAliases(""/dirname/theme"")
module.exports = {
cache: {
type: ""filesystem"",
},
resolve: { alias: myAliases }
}
```
I could maybe add `/dirname/theme/**` to buildDependencies as well, but it is also quite aggressive to evict the cache if any of the files are updated.
--- > It is impossible, webpack can't know about your external variables/envs/files/etc
Actually, I don't ask webpack to know about external things, but only aliases that I explicitly provide as webpack config.
> In theory we can keep resolved aliases from resolve.alias for each module and invalidate modules only when something in resolve.alias was changed, but version does not let us know which of these variables is used as alias. Also, this can be said about many options from configuration, it is really complex and kill cache performance
I totally understand it is a complex problem to solve. I don't really expect it to be solved in the near future and my workaround will be fine. Wanted to document this issue a bit as others might encounter it. I also think the doc could explain better which config changes are supported by webpack caching and which the user should take care of.","Sorry, my example was a bit wrong: I'm reading aliases from the filesystem structure, and they are not static in the webpack config file (so I guess `buildDependencies: {config: [__filename]}` can't kick in):
[TRIPLE QUOTE]
I could maybe add `/dirname/theme/**` to buildDependencies as well, but it is also quite aggressive to evict the cache if any of the files are updated.
--- [BLOCK QUOTE].
Actually, I don't ask webpack to know about external things, but only aliases that I explicitly provide as webpack config.
[BLOCK QUOTE].
I totally understand it is a complex problem to solve. I don't really expect it to be solved in the near future and my workaround will be fine. Wanted to document this issue a bit as others might encounter it. I also think the doc could explain better which config changes are supported by webpack caching and which the user should take care of.",0,0,0,0,1,0,Sadness,Sorrow,Sad,1,
angular/angular,issue,873062003,2021-07-02 14:58:24,L96Github,I also need this... Any updates?,I also need this... Any updates?,0,0,0,0,1,0,Sadness,Despair,Despair,,
angular/angular,issue,873062847,2021-07-02 14:59:44,suppadeliux,Still nothing... 😭😭😭,Still nothing... 😭😭😭,0,0,0,0,1,0,Sadness,,Sadness,,
angular/angular,issue,877571048,2021-07-10 5:29:33,simeyla,So back to reinventing the wheel every time I need to do this - in a slightly different way each time :-(,So back to reinventing the wheel every time I need to do this - in a slightly different way each time :-(,0,0,0,0,1,0,Sadness,,Sadness,,
angular/angular,issue,880975085,2021-07-15 20:00:01,atamansv,"Thanks for the tip. Unfortunately, because of this and due to there is no support for http multiplexing, I have to write my own service worker","Thanks for the tip. Unfortunately, because of this and due to there is no support for http multiplexing, I have to write my own service worker",0,0,0,0,1,0,Sadness,,Sadness,,
angular/angular,issue,881783211,2021-07-17 0:25:07,alxhub,Unfortunately we're not currently planning to add any features to animations.,Unfortunately we're not currently planning to add any features to animations.,0,0,0,0,1,0,Sadness,,Sadness,,
angular/angular,issue,891359597,2021-08-02 21:54:54,AndrewKushnir,"Ah, sorry, I think there is a minor comment related to the tests that would be great to address, so I'm adding the ""cleanup"" label for now. Another presubmit should not be required since additional changes would be in tests only.","Ah, sorry, I think there is a minor comment related to the tests that would be great to address, so I'm adding the ""cleanup"" label for now. Another presubmit should not be required since additional changes would be in tests only.",0,0,0,0,1,0,Sadness,,Sadness,,
webpack/webpack,issue,891814919,2021-08-03 12:41:25,alexander-akait,"> except the compatibility with both Webpack 4 and Webpack 5 which case-sensitive-paths-webpack-plugin offers

Unfortunately, this is not entirely possible with types, even we fix it, we still have other types problems","[BLOCK QUOTE].

Unfortunately, this is not entirely possible with types, even we fix it, we still have other types problems",0,0,0,0,1,0,Sadness,,,,
Microsoft/TypeScript,issue,895693953,2021-08-10 3:10:07,Kingwl,Sorry my bad. Would we just add a new command?,Sorry my bad. Would we just add a new command?,0,0,0,0,1,0,Sadness,,Sadness,,
angular/angular,issue,896292481,2021-08-10 20:21:39,josephperrott,"@vugar005 Unfortunately this issue is really only apparently when we actually went to perform the next merge, we will be changing how our infrastructure tooling is generated and consumed so in the future this isn't even a concern, but that is a couple weeks away likely.","[USER] Unfortunately this issue is really only apparently when we actually went to perform the next merge, we will be changing how our infrastructure tooling is generated and consumed so in the future this isn't even a concern, but that is a couple weeks away likely.",0,0,0,0,1,0,Sadness,Sorrow,Sadness,,
Microsoft/TypeScript,issue,898772496,2021-08-13 23:53:17,amcasey,My first impression is that all the extra time is spent on file existence checks. 😢,My first impression is that all the extra time is spent on file existence checks. 😢,0,0,0,0,1,0,Sadness,Sorrow,Sad,,
angular/angular,issue,900894267,2021-08-18 7:42:56,petebacondarwin,"😭 - I am sorry @AndrewKushnir - this is becoming an epic. I just realised that I don't think I fixed the i18n problem for attributes, only for text nodes. Let me add tests and fix that.","😭 - I am sorry [USER] - this is becoming an epic. I just realised that I don't think I fixed the i18n problem for attributes, only for text nodes. Let me add tests and fix that.",0,0,0,0,1,0,Sadness,Sorrow,Sadness,1,
webpack/webpack,issue,901000739,2021-08-18 10:26:05,alexander-akait,Unfortunately without profile file we can't help,Unfortunately without profile file we can't help,0,0,0,0,1,0,Sadness,,,,
Microsoft/TypeScript,issue,903120729,2021-08-21 14:02:02,ShuiRuTian,"Well, life is complicated, so this issue is not that easy as it looks...
@DanielRosenwasser Sorry for bothering, but I want to ask some questions before continuing coding. Or is there an existing design meeting note I missed?
Some existing problem I found(or I think it is! Not pretty sure):
1. Property could not inherit JsDoc too, not only setter/getter
2. When we have setter and getter in base class and derived class, and the getter and setter in base class are documented, the description of quickInfo getter/setter in derived class are both combined. I think they should only inherit correspond accessor.
3. quickInfo of getter and setter in class declaration should be ""getter""/""setter"" rather than ""property""
Finally, @ilyub should we really use `@returns` on getter/setter? There is a discussion:https://github.com/jsdoc/jsdoc/issues/973","Well, life is complicated, so this issue is not that easy as it looks...
@DanielRosenwasser Sorry for bothering, but I want to ask some questions before continuing coding. Or is there an existing design meeting note I missed?
Some existing problem I found(or I think it is! Not pretty sure):
1. Property could not inherit JsDoc too, not only setter/getter
2. When we have setter and getter in base class and derived class, and the getter and setter in base class are documented, the description of quickInfo getter/setter in derived class are both combined. I think they should only inherit correspond accessor.
3. quickInfo of getter and setter in class declaration should be ""getter""/""setter"" rather than ""property""
Finally, [USER] should we really use `@returns` on getter/setter? There is a discussion:[URL]",0,0,0,0,1,0,Sadness,Melancholy,Melancholy,,
angular/angular,issue,903166962,2021-08-21 19:41:47,JoostK,I'm afraid that is not something I can help you with.,I'm afraid that is not something I can help you with.,0,0,0,0,1,0,Sadness,-,Sadness,1,
webpack/webpack,issue,907110947,2021-08-27 10:46:28,lukasoppermann,"Having the same problem in nextjs because of webpack. Compiles fine locally, but fails on server. Please fix this. 🙏","Having the same problem in nextjs because of webpack. Compiles fine locally, but fails on server. Please fix this. 🙏",0,0,0,0,1,0,Sadness,,Sadness,,
Microsoft/TypeScript,issue,907623277,2021-08-28 12:59:57,Luke-zhang-04,"Ok, sorry about opening the issue then. But IMO this is super weird behaviour even with the flag. It feels counter-intuitive that a strict flag makes the code ""less strict"".","Ok, sorry about opening the issue then. But IMO this is super weird behaviour even with the flag. It feels counter-intuitive that a strict flag makes the code ""less strict"".",0,0,0,0,1,0,Sadness,,Sadness,,
angular/angular,issue,913848015,2021-09-06 20:48:07,shammy8,"@jnizet thanks I think I'm starting to understand better now, think it's the part about it cascading that made me understand. I don't think any of the articles I've read has mentioned this.
Sorry, I posted on the Discord but didn't get a satisfying answer, I should have tried StackOverflow first. Just one more thing though.
Shouldn't we change the doc at https://angular.io/api/core/ChangeDetectionStrategy ? The bit about it applying to all child directive doesn't seem to be accurate at least the way I read it.
So from what I understand, in my StackBlitz with parent set to OnPush and Child set to Default, the reason the setInterval isn't doing anything isn't because the Child is inheriting OnPush from the parent but because the Parent doesn't invocate change detection so it doesn't cascade down to the Child.","[USER] thanks I think I'm starting to understand better now, think it's the part about it cascading that made me understand. I don't think any of the articles I've read has mentioned this.
Sorry, I posted on the Discord but didn't get a satisfying answer, I should have tried StackOverflow first. Just one more thing though.
Shouldn't we change the doc at [URL] ? The bit about it applying to all child directive doesn't seem to be accurate at least the way I read it.
So from what I understand, in my StackBlitz with parent set to OnPush and Child set to Default, the reason the setInterval isn't doing anything isn't because the Child is inheriting OnPush from the parent but because the Parent doesn't invocate change detection so it doesn't cascade down to the Child.",0,0,0,0,1,0,Sadness,Sorrow,Sad (about not getting satisfying answer),,
webpack/webpack,issue,916232365,2021-09-09 16:02:48,alexander-akait,"I think somebody modify URL so I got this problem, I can't reproduce this problem even with broken data URI","I think somebody modify URL so I got this problem, I can't reproduce this problem even with broken data URI",0,0,0,0,1,0,Sadness,,Sadness,,
Microsoft/TypeScript,issue,918641453,2021-09-13 22:53:03,jespertheend,Why was this abandoned? :(,Why was this abandoned? :(,0,0,0,0,1,0,Sadness,Sorrow,Sad,,
angular/angular,issue,920094505,2021-09-15 14:55:09,petebacondarwin,"Hi @lacolaco - thank you for your work on this.

We discussed this further today and decided that we do not want to implement this feature.
We don't control the quality of the sites that we would be redirecting users to, and also this would add more snackbar pop ups which is not a great UX either.","Hi [USER] - thank you for your work on this.

We discussed this further today and decided that we do not want to implement this feature.
We don't control the quality of the sites that we would be redirecting users to, and also this would add more snackbar pop ups which is not a great UX either.",0,0,0,0,1,0,Sadness,Melancholy,Sadness,,
Microsoft/TypeScript,issue,922603520,2021-09-20 2:41:24,ducnguyen96,"@MartinJohns Sorry my bad, clearly I haven't understood enum behavior here.","[USER] Sorry my bad, clearly I haven't understood enum behavior here.",0,0,0,0,1,0,Sadness,,Sadness,,
Microsoft/TypeScript,issue,923543995,2021-09-21 2:31:11,blair,"As the OP, apology for not linking to the original bug #38752.

Regarding opening this bug, I didn't think the original bug (#38752) was given close attention that it needed. After it was marked external, I replied and a bot closed it, I didn't see a way to reopen it to continue the conversation. I then emailed the issue to some TypeScript more-expert-than-me colleagues at work and there was consensus on the issue was fair. So I reopened this one without any references to typescript-eslint to keep it focused on TypeScript itself.

I agree, making a new bug to continue the discussion isn't good. I would like to request a way to reopen bugs or have a second look at them. Any suggestions? How would I do that in the future?

Thanks for reconsidering this topic.","As the OP, apology for not linking to the original bug #38752.

Regarding opening this bug, I didn't think the original bug (#38752) was given close attention that it needed. After it was marked external, I replied and a bot closed it, I didn't see a way to reopen it to continue the conversation. I then emailed the issue to some TypeScript more-expert-than-me colleagues at work and there was consensus on the issue was fair. So I reopened this one without any references to typescript-eslint to keep it focused on TypeScript itself.

I agree, making a new bug to continue the discussion isn't good. I would like to request a way to reopen bugs or have a second look at them. Any suggestions? How would I do that in the future?

Thanks for reconsidering this topic.",0,0,0,0,1,0,Sadness,Despair,Despair,1,
angular/angular,issue,924196484,2021-09-21 17:22:06,JoostK,"I'm sorry, I do not.","I'm sorry, I do not.",0,0,0,0,1,0,Sadness,,Sadness,,
Microsoft/TypeScript,issue,924896165,2021-09-22 12:45:57,whenmoon,Nothing yet?,Nothing yet?,0,0,0,0,1,0,Sadness,,Sadness,,
angular/angular,issue,928082343,2021-09-27 17:11:16,JoostK,"That looks all as expected, so all is fine there. Unfortunately that does leave us in the dark as to what might be going on; we'd need to be able to reproduce this to get to the bottom of it.","That looks all as expected, so all is fine there. Unfortunately that does leave us in the dark as to what might be going on; we'd need to be able to reproduce this to get to the bottom of it.",0,0,0,0,1,0,Sadness,,Sadness,,
Microsoft/TypeScript,issue,930019073,2021-09-29 9:44:50,AlexDM0,"Right, sorry missed that one. I'll close this. Thanks for the heads up!","Right, sorry missed that one. I'll close this. Thanks for the heads up!",0,0,0,0,1,0,Sadness,Sorrow,Sorry,,
webpack/webpack,issue,934356939,2021-10-05 12:18:33,caiquelsousa,Same here i'm not sure how to solve this.. can someone help please?,Same here i'm not sure how to solve this.. can someone help please?,0,0,0,0,1,0,Sadness,,Sadness,,
angular/angular,issue,945002738,2021-10-16 20:25:03,dario-piotrowicz,"@gkalpak... I just realized something :sweat:

The division between js/ts and html is a bit flawed, as we can have the html in the component's decorator :cry:
(js/ts can't really be present in html to the extent of having eslint comments there I believe)

so I may need to rethink that... or just apply the all regexes to all types js/ts/html (I don't see too much a problem with that, except having html comments with js/ts code with eslint comments and vice versa)....

( this could actually force me to restart from scratch :disappointed: )

I am so sorry for realizing this only now... :cry:

What are your thoughts on it?

___

or I could just ignore the html comments that could contain js/ts and handle ts in the following way:
 check if there is a `@Component` decorators and see if it uses the `template` property, if so put a placeholder for the html, run the normal js/ts lint on the file with the html placeholder and reapply the original html but run through the remove eslint-comment function (sort of borrowing the same logic I mentioned [here](https://github.com/angular/angular/pull/43831#discussion_r730296367))","[USER]... I just realized something :sweat:

The division between js/ts and html is a bit flawed, as we can have the html in the component's decorator :cry:
(js/ts can't really be present in html to the extent of having eslint comments there I believe)

so I may need to rethink that... or just apply the all regexes to all types js/ts/html (I don't see too much a problem with that, except having html comments with js/ts code with eslint comments and vice versa)....

( this could actually force me to restart from scratch :disappointed: )

I am so sorry for realizing this only now... :cry:

What are your thoughts on it?

___

or I could just ignore the html comments that could contain js/ts and handle ts in the following way:
 check if there is a `@Component` decorators and see if it uses the `template` property, if so put a placeholder for the html, run the normal js/ts lint on the file with the html placeholder and reapply the original html but run through the remove eslint-comment function (sort of borrowing the same logic I mentioned here([URL]))",0,0,0,0,1,0,Sadness,Sorrow,Cry -> Sad,,
flutter/flutter,issue,945649905,2021-10-18 11:00:53,SergioSanchezUltralytics,"Any solution apart from this?

> > > @camsim99 is working on the fix in [flutter/plugins#4423](https://github.com/flutter/plugins/pull/4423)
> >
> >
> > How can you pull this ? Could you help me? I try to declare on pubspec.yaml like this:
> > ```
> > camera:
> > git:
> > url: https://github.com/camsim99/plugins.git
> > path: packages/camera/camera
> > ref: master
> > ```
> >
> >
> >
> >
> >
> >
> >
> >
> >
> >
> >
> > but i get the same error as before
>
> This work for me, as a temporary solution of course :
>
> ```
> dependencies:
> ...
> # camera: ^0.9.4+2
> camera:
> git:
> url: https://github.com/camsim99/plugins.git
> path: packages/camera/camera
> ref: issue_89578_dev
> ...
> ```","Any solution apart from this?

[BLOCK QUOTE].",0,0,0,0,1,0,Sadness,Melancholy,Melancholy,,
flutter/flutter,issue,946015294,2021-10-18 17:49:27,zanderso,"Unfortunately, the symbolicated backtrace seems like it doesn't make sense, and we probably can't extract any actionable information from it. Do you have a backtrace with more frames in it, or a small test case that locally demonstrates the issue?","Unfortunately, the symbolicated backtrace seems like it doesn't make sense, and we probably can't extract any actionable information from it. Do you have a backtrace with more frames in it, or a small test case that locally demonstrates the issue?",0,0,0,0,1,0,Sadness,,Sadness,,
flutter/flutter,issue,947079950,2021-10-19 20:28:04,annagrin,"I was on vacation, apologies for the delay. If the stable update is near, let's just wait.
FYI, Dwds fix: https://github.com/dart-lang/webdev/pull/1384","I was on vacation, apologies for the delay. If the stable update is near, let's just wait.

FYI, Dwds fix: [URL]",0,0,0,0,1,0,Sadness,,,1,
Microsoft/TypeScript,issue,947226052,2021-10-20 1:15:20,andrewbranch,"Yes, this should be closed. Sorry @paranoiacblack, I’m sad about it too 😕","Yes, this should be closed. Sorry [USER] I’m sad about it too 😕",0,0,0,0,1,0,Sadness,,Sadness,,
flutter/flutter,issue,947372272,2021-10-20 6:37:58,vrnvorona,"> > any way to avoid part libraries? Or just ignore the warning?
>
> @vrnvorona do you found any way to avoid part libraries from `coverage_helper_test.dart` file?

Didn't try anything yet sadly, so no.","[BLOCK QUOTE].

Didn't try anything yet sadly, so no.",0,0,0,0,1,0,Sadness,,Sadness,,
Microsoft/TypeScript,issue,949082369,2021-10-21 23:46:29,DanielRosenwasser,"Please, no more plot twists, my heart can't handle it anymore.","Please, no more plot twists, my heart can't handle it anymore.",0,0,0,0,1,0,Sadness,,Sadness,,
flutter/flutter,issue,950842534,2021-10-25 11:49:33,RazaShabbir-vrc,"Any follow-up on this? I made the entire application on Gotham fonts and now it won't work on iOS, any text closer to looking as Gotham can help too.","Any follow-up on this? I made the entire application on Gotham fonts and now it won't work on iOS, any text closer to looking as Gotham can help too.",0,0,0,0,1,0,Sadness,Despair,Despair,,
flutter/flutter,issue,950886728,2021-10-25 12:44:15,anup-geeky,Anyone get a solution to this.,Anyone get a solution to this.,0,0,0,0,1,0,Sadness,Despair,,,
flutter/flutter,issue,951146872,2021-10-25 17:30:55,ditman,@tvolkert sounds good! Apologies we never found a more definitive answer to this problem :/,[USER] sounds good! Apologies we never found a more definitive answer to this problem :/,0,0,0,0,1,0,Sadness,,,1,
flutter/flutter,issue,951650211,2021-10-26 7:44:50,8090boy,Help me.,Help me.,0,0,0,0,1,0,Sadness,Despair,Despair,,
webpack/webpack,issue,952816078,2021-10-27 11:18:28,fu1996,"> What is fix it?

Sorry, I made a mistake","[BLOCK QUOTE]. 

Sorry, I made a mistake",0,0,0,0,1,0,Sadness,Sorrow,Sad,,
flutter/flutter,issue,953556510,2021-10-28 6:59:12,darshankawar,"Unfortunately I don't have Windows 7 machine / OS to verify and confirm this behavior, so I'll need to directly label it for further investigation from team.

/cc @cbracken","Unfortunately I don't have Windows 7 machine / OS to verify and confirm this behavior, so I'll need to directly label it for further investigation from team.

/cc [USER]",0,0,0,0,1,0,Sadness,,Sadness,,
flutter/flutter,issue,955179043,2021-10-30 9:18:08,or-adar,"> It seems correct but when I try to eliminate `.value` from the end of following line of code, I get new errors as following:
>
> `const { email, password } = await ctx.request.body(); ` It gives me error messages like:
>
> `Property 'email' does not exist on type 'Body'. `Property 'password' does not exist on type 'Body'.
Yeah, I was wrong, sorry.
I'm not familliar with Deno and it seems like the ""value"" propery is just the way the framework your using parses the body.
But, If I may have another assumption, you probably need to provide a ""content-type"" header when making your post request to the server on ```auth.dart```, like so:
```dart
final response = await http.post(
url,
headers: {""Content-Type"": ""application/json""},
body: json.encode(
{
'email': email,
'password': password
},
),
);
```
It should tell the body parser to treat the request's body as json.","[BLOCK QUOTE].

Yeah, I was wrong, sorry.
I'm not familliar with Deno and it seems like the ""value"" propery is just the way the framework your using parses the body.
But, If I may have another assumption, you probably need to provide a ""content-type"" header when making your post request to the server on [TRIPLE QUOTE]., like so:
[TRIPLE QUOTE].
It should tell the body parser to treat the request's body as json.",0,0,0,0,1,0,Sadness,,,,
webpack/webpack,issue,957299529,2021-11-02 10:14:17,alexander-akait,I don't understand what you want to achieve,I don't understand what you want to achieve,0,0,0,0,1,0,Sadness,,Sadness,,
flutter/flutter,issue,957306324,2021-11-02 10:22:50,adamsowinski,Unfortunately this is a showstopper for me. I can't use Flutter as pointer is a hard requirement. I doubt we will switch to Flutter at a later stage once we have a fully functional iOS app.,Unfortunately this is a showstopper for me. I can't use Flutter as pointer is a hard requirement. I doubt we will switch to Flutter at a later stage once we have a fully functional iOS app.,0,0,0,0,1,0,Sadness,Sorrow,Sadness,,
flutter/flutter,issue,957820609,2021-11-02 15:26:35,stuartmorgan,"> > The build errors out if the name contains spaces. I'm curious if this is a Win32 limitation, or a limitation of our CMake scripts.
>
> Almost certainly the latter. I'll check later today; it's probably just missing quoting.

It turns out it's not that simple unfortunately. Filed https://github.com/flutter/flutter/issues/92914

Given that nobody has ever asked for that functionality it's going to be low priority, but it is fixable.","[BLOCK QUOTE].

It turns out it's not that simple unfortunately. Filed [URL]

Given that nobody has ever asked for that functionality it's going to be low priority, but it is fixable.",0,0,0,0,1,0,Sadness,,Sadness,,
flutter/flutter,issue,958777099,2021-11-03 9:27:41,Aflysun,"I had the same problem, also use A ，😭","I had the same problem, also use A ，😭",0,0,0,0,1,0,Sadness,,Sadness,,
flutter/flutter,issue,959695696,2021-11-03 16:41:49,kaanakyalcin,It still not working,It still not working,0,0,0,0,1,0,Sadness,,Sadness,,
flutter/flutter,issue,955787744,2021-10-31 20:38:57,Sectur1,"@timsneath I am a Flutter dev for about 3 years now. I really love everything about Flutter, but I really think Flutter or (dartpad) needs something like Expo. I have apps on the Playstore, but I don't have any on the App store. The only reason being that MacBook are crazy expensive. The cheapest you can get here in Nigeria is around 250,000 NGN (610 USD). But with something like Expo, you can test how your app will look and behave on all platforms and even build the app irrespective of the platform Linux, Windows or Mac. I think Expo can also handle release on the App store and Playstore. That's one of the reasons why I think Flutter needs something similar","[USER] I am a Flutter dev for about 3 years now. I really love everything about Flutter, but I really think Flutter or (dartpad) needs something like Expo. I have apps on the Playstore, but I don't have any on the App store. The only reason being that MacBook are crazy expensive. The cheapest you can get here in Nigeria is around 250,000 NGN (610 USD). But with something like Expo, you can test how your app will look and behave on all platforms and even build the app irrespective of the platform Linux, Windows or Mac. I think Expo can also handle release on the App store and Playstore. That's one of the reasons why I think Flutter needs something similar",0,0,0,0,1,0,"Sadness, Disappointment",Sorrow,Sad/disappointed about Flutter not having something like Expo,,
angular/angular,pull_request,629699307,2021-05-10 21:35:29,AndrewKushnir,Sorry I forgot to mention that we also need to add tests for the async validators as well (they have the same contract). You can probably just extend this test to add one more custom validator (it'd provide itself as `NG_ASYNC_VALIDATORS`) that would increment a different counter.,Sorry I forgot to mention that we also need to add tests for the async validators as well (they have the same contract). You can probably just extend this test to add one more custom validator (it'd provide itself as `NG_ASYNC_VALIDATORS`) that would increment a different counter.,0,0,0,0,1,0,Shame,Regret,Regret,1,
Microsoft/TypeScript,pull_request,714629888,2021-09-23 9:37:35,acutmore,"Regretting that when I disabled all of my extensions to free up some CPU I also disabled the code-spell-checker. I'll reenable, as mistakes like this shouldn't be getting through to the PR.","Regretting that when I disabled all of my extensions to free up some CPU I also disabled the code-spell-checker. I'll reenable, as mistakes like this shouldn't be getting through to the PR.",0,0,0,0,1,0,Shame,Regret,Regret,,
webpack/webpack,issue,824966555,2021-04-22 15:55:46,alexander-akait,"Unfortunately, then I can hardly help you and probably nobody can, sorry. Do you try `--stats-children`?","Unfortunately, then I can hardly help you and probably nobody can, sorry. Do you try `--stats-children`?",0,0,0,0,1,0,Shame,Regret,Regret,,
angular/angular,issue,877496933,2021-07-09 22:53:02,jessicajaniuk,"Thank you for submitting this feature request. The team has reviewed the feature request and has decided not to move forward with it. The approach described here would introduce significant XSS concerns and does not align with the angular architectural approach. We do see the need, though, and we will discuss addressing dynamically creating components in other creative approaches that should satisfy this need in a safe and robust way.","Thank you for submitting this feature request. The team has reviewed the feature request and has decided not to move forward with it. The approach described here would introduce significant XSS concerns and does not align with the angular architectural approach. We do see the need, though, and we will discuss addressing dynamically creating components in other creative approaches that should satisfy this need in a safe and robust way.",0,0,0,0,1,0,Shame,Regret,Regret,,
Microsoft/TypeScript,issue,908550521,2021-08-30 17:43:51,andrewbranch,"We'll monitor comments on this issue, but if it wasn't noticed until a full version later, it's unlikely this warrants a patch.","We'll monitor comments on this issue, but if it wasn't noticed until a full version later, it's unlikely this warrants a patch.",0,0,0,0,1,0,Shame,Regret,Regret,,
Microsoft/TypeScript,issue,917987679,2021-09-13 9:04:28,Kvek,"> @Kvek @danieldt232 Would either of you be able to provide a link to a repo where this is happening? Short of that, your dependencies/devDependencies and what package manager you’re using would help.

My apologies @andrewbranch, a little late to the party. Unfortunately it's my company's repo, so it's private. I'm using `npm`.

node - v12.13.0;
npm - 6.12.0;

```
 ""dependencies"": {
 ""@date-io/core"": ""1.3.6"",
 ""@date-io/date-fns"": ""1.3.6"",
 ""@material-ui/core"": ""^4.11.4"",
 ""@material-ui/icons"": ""^4.11.2"",
 ""@material-ui/lab"": ""^4.0.0-alpha.58"",
 ""@material-ui/pickers"": ""^3.3.10"",
 ""@mdi/js"": ""^5.9.55"",
 ""@mdi/react"": ""^1.5.0"",
 ""@reach/router"": ""^1.3.4"",
 ""@reduxjs/toolkit"": ""^1.5.1"",
 ""ag-grid-community"": ""^25.3.0"",
 ""ag-grid-react"": ""^25.3.0"",
 ""classnames"": ""2.2.6"",
 ""clipboard-copy"": ""3.1.0"",
 ""date-fns"": ""2.23.0"",
 ""dayjs"": ""1.10.4"",
 ""debounce"": ""1.2.1"",
 ""google-protobuf"": ""3.17.3"",
 ""grpc-web"": ""1.2.1"",
 ""node-sass"": ""4.14.1"",
 ""numbro"": ""2.3.2"",
 ""ramda"": ""0.27.1"",
 ""rc-dock"": ""^2.6.2"",
 ""react"": ""^17.0.1"",
 ""react-datepicker"": ""4.2.1"",
 ""react-dom"": ""^17.0.1"",
 ""react-flag-icon-css"": ""^1.0.25"",
 ""react-grid-layout"": ""^0.18.3"",
 ""react-helmet"": ""^6.1.0"",
 ""react-modal"": ""^3.14.3"",
 ""react-redux"": ""7.1.0"",
 ""react-scripts"": ""^4.0.3"",
 ""react-spring"": ""9.0.0-rc.3"",
 ""react-toastify"": ""^6.1.0"",
 ""react-transition-group"": ""4.2.2"",
 ""redux"": ""4.0.4"",
 ""redux-devtools-extension"": ""^2.13.8"",
 ""redux-logger"": ""^3.0.6"",
 ""redux-observable"": ""^1.2.0"",
 ""redux-thunk"": ""2.3.0"",
 ""reselect"": ""4.0.0"",
 ""rxjs"": ""6.6.7"",
 ""styled-components"": ""5.1.0"",
 ""uuid"": ""3.4.0""
 },

""devDependencies"": {
 ""@commitlint/cli"": ""^12.1.4"",
 ""@commitlint/config-conventional"": ""^12.1.4"",
 ""@commitlint/format"": ""^12.0.1"",
 ""@commitlint/prompt-cli"": ""^12.1.4"",
 ""@microsoft/tsdoc"": ""^0.12.9"",
 ""@types/classnames"": ""^2.2.11"",
 ""@types/debounce"": ""^1.2.0"",
 ""@types/jest"": ""24.0.18"",
 ""@types/node"": ""12.7.5"",
 ""@types/numbro"": ""^1.9.3"",
 ""@types/ramda"": ""0.27.44"",
 ""@types/reach__router"": ""^1.2.5"",
 ""@types/react"": ""^16.9.2"",
 ""@types/react-datepicker"": ""^3.1.2"",
 ""@types/react-dom"": ""16.9.0"",
 ""@types/react-flag-icon-css"": ""^1.0.4"",
 ""@types/react-grid-layout"": ""^1.1.1"",
 ""@types/react-helmet"": ""^6.1.2"",
 ""@types/react-redux"": ""^7.1.5"",
 ""@types/redux"": ""3.6.0"",
 ""@types/redux-logger"": ""^3.0.8"",
 ""@types/redux-thunk"": ""2.1.0"",
 ""@types/styled-components"": ""^4.1.19"",
 ""@types/uuid"": ""^8.3.1"",
 ""@types/yup"": ""^0.26.24"",
 ""@typescript-eslint/eslint-plugin"": ""^4.30.0"",
 ""@typescript-eslint/parser"": ""^4.30.0"",
 ""babel-eslint"": ""^10.1.0"",
 ""enzyme"": ""^3.10.0"",
 ""enzyme-adapter-react-16"": ""^1.14.0"",
 ""eslint"": ""^7.32.0"",
 ""eslint-config-airbnb"": ""^18.2.1"",
 ""eslint-config-prettier"": ""^7.2.0"",
 ""eslint-config-react-app"": ""^6.0.0"",
 ""eslint-formatter-mo"": ""^1.0.0"",
 ""eslint-plugin-flowtype"": ""^5.9.1"",
 ""eslint-plugin-import"": ""^2.24.2"",
 ""eslint-plugin-jest"": ""^21.15.0"",
 ""eslint-plugin-jsx-a11y"": ""^6.4.1"",
 ""eslint-plugin-prettier"": ""^3.3.1"",
 ""eslint-plugin-react"": ""^7.25.1"",
 ""eslint-plugin-react-hooks"": ""^4.2.0"",
 ""eslint-plugin-simple-import-sort"": ""^7.0.0"",
 ""eslint-plugin-sort-destructure-keys"": ""^1.3.5"",
 ""eslint-plugin-sort-keys-fix"": ""^1.1.2"",
 ""eslint-plugin-typescript-sort-keys"": ""^1.7.0"",
 ""husky"": ""^4.3.8"",
 ""lint-staged"": ""^10.5.4"",
 ""prettier"": ""2.2.1"",
 ""pretty-quick"": ""^1.11.1"",
 ""react-test-renderer"": ""16.12.0"",
 ""typescript"": ""^4.2.3"",
 ""typescript-styled-plugin"": ""^0.15.0"",
 ""webpack-bundle-analyzer"": ""^4.4.2"",
 ""worker-plugin"": ""^1.1.1""
 }
```","[BLOCK QUOTE]. 

My apologies [USER], a little late to the party. Unfortunately it's my company's repo, so it's private. I'm using `npm`. node - v12.13.0; npm - 6.12.0; 

[TRIPLE QUOTE].",0,0,0,0,1,0,Shame,Regret,Regret,1,
angular/angular,issue,949804899,2021-10-22 16:54:26,petebacondarwin,"This PR has not received much support in term of votes and, as mentioned above, it is already provided for in a number of 3rd party libraries. So we do not plan to implement this ourselves.","This PR has not received much support in term of votes and, as mentioned above, it is already provided for in a number of 3rd party libraries. So we do not plan to implement this ourselves.",0,0,0,0,1,0,Shame,Regret,Regret,,
flutter/flutter,issue,950629088,2021-10-25 7:56:25,maheshmnj,"Hi @mdeveracoding, Thanks for filing the issue. Unfortunately, we do not provide support for older versions of flutter, I would advise you to please upgrade to the latest `stable 2.5.3` and feel free to write back if you still see the issue.

Thanks","Hi [USER] Thanks for filing the issue. Unfortunately, we do not provide support for older versions of flutter, I would advise you to please upgrade to the latest `stable 2.5.3` and feel free to write back if you still see the issue.

Thanks",0,0,0,0,1,0,Shame,Regret,Regret,,
flutter/flutter,issue,954104040,2021-10-28 18:41:01,jmagman,"> Any chance this could be hotfixed into stable?

Unlikely since there's a workaround, and it doesn't reproduce every time. https://github.com/flutter/flutter/wiki/Flutter-build-release-channels#will-a-particular-bug-fix-be-provided-in-a-hotfix-release","[BLOCK QUOTE].

Unlikely since there's a workaround, and it doesn't reproduce every time. [URL]",0,0,0,0,1,0,Shame,Regret,Regret -> Sad,,
flutter/flutter,issue,954481520,2021-10-29 7:02:18,maheshmnj,"Hi @goodmanworld,
This issue doesn't seem to describe a bug or a feature request. Please see https://flutter.dev/community for resources and asking questions like this, you may also get some help if you post it on Stackoverflow and if you need help with your code, please see https://www.reddit.com/r/flutterhelp/

Closing, as this isn't an issue with Flutter itself. If you disagree, please write in the comments and I will reopen it.
Thank you","Hi [USER]
This issue doesn't seem to describe a bug or a feature request. Please see [URL] for resources and asking questions like this, you may also get some help if you post it on Stackoverflow and if you need help with your code, please see [URL]

Closing, as this isn't an issue with Flutter itself. If you disagree, please write in the comments and I will reopen it.
Thank you",0,0,0,0,1,0,Shame,Regret,Regret,,
flutter/flutter,issue,955770319,2021-10-31 18:29:47,stuartmorgan,"The issue tracker is specifically for bug reports and feature request; see https://flutter.dev/community for a list of other resources where you can get help with your own code.

Closing as this is not a Flutter bug.","The issue tracker is specifically for bug reports and feature request; see [URL] for a list of other resources where you can get help with your own code.

Closing as this is not a Flutter bug.",0,0,0,0,1,0,Shame,Regret,Regret,,
angular/angular,issue,956449272,2021-11-01 17:51:27,gkalpak,"Yes, this is happening because the SW strips off request headers. This is being tracked in #24227. Closing as a duplicate of #24227.","Yes, this is happening because the SW strips off request headers. This is being tracked in #24227. Closing as a duplicate of #24227.",0,0,0,0,1,0,Shame,Regret,Regret,,
webpack/webpack,pull_request,98041125,2017-01-26 17:06:17,lgraziani2712,But I cannot catch the error 😢 .,But I cannot catch the error 😢 .,0,0,0,0,1,0,Suffering,,Suffering -> Sadness,,
webpack/webpack,issue,888903136,2021-07-29 8:14:27,tejparekh,"@hhimanshu Hey did you find a solution to this issue?
I am facing a similar issue during the compilation of app using webpack 5, https://github.com/ant-design/ant-design-pro/issues/8828 @amol222patil

Please see if you can provide any inputs.
Thanks,","[USER] Hey did you find a solution to this issue?
I am facing a similar issue during the compilation of app using webpack 5, [URL] [USER]

Please see if you can provide any inputs.
Thanks,",0,0,0,0,1,0,Suffering,,Suffering,,
webpack/webpack,issue,908178680,2021-08-30 9:11:24,yuzhanglong,"same problem happened to me, did you fix it?","same problem happened to me, did you fix it?",0,0,0,0,1,0,Suffering,,Suffering,,
angular/angular,issue,914234942,2021-09-07 11:47:08,DimaPateuk,"nothing, but some part of the angular break this functionality that is why I am asking the angular team about it and not stackoverflow","nothing, but some part of the angular break this functionality that is why I am asking the angular team about it and not stackoverflow",0,0,0,0,1,0,Suffering,,Suffering,,
webpack/webpack,issue,927257879,2021-09-26 8:21:32,GouJieShinee,@shubhamkes how you fix this problem? I meet the same problem,[USER] how you fix this problem? I meet the same problem,0,0,0,0,1,0,Suffering,,Suffering,,
angular/angular,issue,948315684,2021-10-21 7:01:44,olivewind,I have the same problem. any update?,I have the same problem. any update?,0,0,0,0,1,0,Suffering,,Suffering,,
flutter/flutter,issue,960665789,2021-11-04 11:21:08,awasum,I am also facing this problem. Has anyone found a solution to this?,I am also facing this problem. Has anyone found a solution to this?,0,0,0,0,1,0,Suffering,Agony,Agony,,
angular/angular,issue,873033825,2021-07-02 14:17:52,gkalpak,"Due to the low priority and low demand for this feature, I don't think we will ever get to implementing it at this point.","Due to the low priority and low demand for this feature, I don't think we will ever get to implementing it at this point.",0,0,0,0,1,0,Sympathy,Pity,Sympathy,,
webpack/webpack,issue,873096201,2021-07-02 15:52:08,alexander-akait,"Yes, regression on our side, please wait, we will fix it in near future","Yes, regression on our side, please wait, we will fix it in near future",0,0,0,0,1,0,Sympathy,,Sympathy,,
Microsoft/TypeScript,pull_request,613542715,2021-04-14 19:50:03,sheetalkamat,ahh well it still is going to build all the time i guess... it was never tested scenario.. so ....,ahh well it still is going to build all the time i guess... it was never tested scenario.. so ....,0,0,0,0,1,0,Disappointment,,Disappointment tone,,
webpack/webpack,issue,912968761,2021-09-04 12:47:10,alexander-akait,"When you create reproducible test repo please avoid using private package, unfortunately nobody can test it:
```
error An unexpected error occurred: ""https://npm.fontawesome.com/@fortawesome/free-brands-svg-icons/-/5.15.4/free-brands-svg-icons-5.15.4.tgz: Request failed \""401 Unauthorized\"""".
info If you think this is a bug, please open a bug report with the information provided in ""/path/to/webpack-error-reproduction/xui/yarn-error.log"".
info Visit https://yarnpkg.com/en/docs/cli/install for documentation about this command.
```","When you create reproducible test repo please avoid using private package, unfortunately nobody can test it: 

[TRIPLE QUOTE].",0,0,0,0,1,0,Disappointment,Displeasure,Displeasured about the private package,1,
angular/angular,issue,917704604,2021-09-12 20:26:43,petebacondarwin,I can't actually even build the libraries...,I can't actually even build the libraries...,0,0,0,0,1,0,Suffering,,Suffering,,
webpack/webpack,issue,801669067,2021-03-18 6:32:07,FezVrasta,Could somebody provide a complete example or link to some documentation please?,Could somebody provide a complete example or link to some documentation please?,0,0,0,0,1,0,Sadness,Despair,,,
webpack/webpack,issue,802052512,2021-03-18 16:07:34,pcorpet,Can someone help me with the failing test please?,Can someone help me with the failing test please?,0,0,0,0,1,0,Sadness,Despair,,,
webpack/webpack,issue,779270595,2021-02-15 14:50:59,alexander-akait,"Yep, bug, thanks for the issue","Yep, bug, thanks for the issue",0,0,0,1,0,0,Approval,,Affirming sth -> Approval,1,
webpack/webpack,pull_request,107297025,2017-03-21 22:59:00,timse,will check that tonight! thanks 👍,will check that tonight! thanks 👍,0,0,0,1,0,0,Zest,Enthusiasm,,1,
flutter/flutter,issue,946149649,2021-10-18 20:43:26,yuvaldolev,"@mdebbar
Thanks!
I will take a look at it 🙂","[USER]
Thanks!
I will take a look at it 🙂",0,0,0,1,0,0,Zest,Enthusiasm,Enthusiasm to help,,
webpack/webpack,issue,850845815,2021-05-29 14:50:25,voraciousdev,"@ilkkao oh, perfect. Which version was it added to?","[USER] oh, perfect. Which version was it added to?",0,0,0,1,0,0,Contentment,,Happy about something -> Contentment,,
angular/angular,pull_request,657369594,2021-06-23 18:36:29,dario-piotrowicz,"Thank you so very much!!! :smiley: yeah also in my PR comment I wasn't totally sure if this was a breaking change but yeah since those can be referenced in js code it does really seem like a breaking change!
I also totally agree, that identifying the problem can be quite difficult especially in complex projects, whilst the workaround is straightforward.
Another thing that I don't like is that this kind of breaks angular's view encapsulation contract by actually leaking some css unbeknown of the user (opposite to what happens to the native shadow dom).
About the scope name being a suffix, I think you are right, I didn't really put much thought on where to put the scope name to be honest (by prefix felt natural as it is sort of what happens with classes, the scope gets put before the actual element), I will amend it :slightly_smiling_face:","Thank you so very much!!! :smiley: yeah also in my PR comment I wasn't totally sure if this was a breaking change but yeah since those can be referenced in js code it does really seem like a breaking change!
I also totally agree, that identifying the problem can be quite difficult especially in complex projects, whilst the workaround is straightforward.
Another thing that I don't like is that this kind of breaks angular's view encapsulation contract by actually leaking some css unbeknown of the user (opposite to what happens to the native shadow dom).
About the scope name being a suffix, I think you are right, I didn't really put much thought on where to put the scope name to be honest (by prefix felt natural as it is sort of what happens with classes, the scope gets put before the actual element), I will amend it :slightly_smiling_face:",0,0,0,1,0,0,Relief,Relief,Relief,1,
angular/angular,pull_request,656831098,2021-06-23 7:28:18,gkalpak,"These kinds of types should be forbidden 😠
My brain hurts 🤯 😛","These kinds of types should be forbidden 😠
My brain hurts 🤯 😛",0,0,0,1,0,0,Cheerfulness,Joviality,Joking -> Joviality,,
flutter/flutter,issue,947904739,2021-10-20 17:56:54,stuartmorgan,"> there's currently no ffi in flutter_tools

Some PR has to be the first one to use it 😁

It's a bit ugly, as with all FFI, but it didn't seem terrible.","[BLOCK QUOTE].

Some PR has to be the first one to use it 😁

It's a bit ugly, as with all FFI, but it didn't seem terrible.",0,0,0,1,0,0,Cheerfulness,Joviality,😁 -> Happy,,
angular/angular,issue,959781169,2021-11-03 17:54:49,A-5ingh,"> Hey @A-5ingh 👋, not sure why _file_ an issue is different than _report_ 😕 I think that the former is a valid word for filing/reporting issues, bugs, and other things.
Hi there @bampakoa for some reason _file_ a bug/defect/issue didn't sound right while reading the doc. Mostly have seen usage of either _report_ or _log_ bug/defect, Ha 😃 I could be wrong too. But in my opinion, I felt _report_ sound much better than _file_, even though it is a tiny change.","[BLOCK QUOTE].
Hi there [USER] for some reason _file_ a bug/defect/issue didn't sound right while reading the doc. Mostly have seen usage of either _report_ or _log_ bug/defect, Ha 😃 I could be wrong too. But in my opinion, I felt _report_ sound much better than _file_, even though it is a tiny change.",0,0,0,1,0,0,Zest,Enthusiasm,,1,
webpack/webpack,pull_request,122603437,2017-06-18 23:20:55,timse,"yeah, I wasn't sure if this approach is ok and if I wanted to shadow as little as possible from the initial set (: happy to add some logic there","yeah, I wasn't sure if this approach is ok and if I wanted to shadow as little as possible from the initial set (: happy to add some logic there",0,0,0,1,0,0,Cheerfulness,Happiness,,,
angular/angular,pull_request,704844644,2021-09-08 23:32:07,atscott,"This change doesn't affect anything but makes the code more clear. If you look at the line about, `currentUrlTree` is set to `urlAfterRedirects`.","This change doesn't affect anything but makes the code more clear. If you look at the line about, `currentUrlTree` is set to `urlAfterRedirects`.",0,0,0,1,0,0,Admiration,,Happy about the change -> Admiration,,
webpack/webpack,pull_request,92501584,2016-12-14 22:12:11,SpaceK33z,"I also agree, but lets keep them for now since we aren't done with setting it up on webpack.js.org yet.","I also agree, but lets keep them for now since we aren't done with setting it up on webpack.js.org yet.",0,0,0,1,0,0,Approval,-,Agreement -> Approval,,
webpack/webpack,pull_request,94004395,2016-12-28 8:03:24,elodszopos,I simply took what was above in the same file! I do agree they don't really make sense though.,I simply took what was above in the same file! I do agree they don't really make sense though.,0,0,0,1,0,0,Approval,,,,
webpack/webpack,pull_request,94504993,2017-01-03 23:23:00,naknode,"Yeah, that makes sense. I have omitted the output property from the test.","Yeah, that makes sense. I have omitted the output property from the test.",0,0,0,1,0,0,Approval,-,Agreement -> Approval,1,
webpack/webpack,pull_request,101964698,2017-02-20 8:20:01,timse,uhh good catch. and yes should have further cleaned up.,uhh good catch. and yes should have further cleaned up.,0,0,0,1,0,0,Approval,,,,
webpack/webpack,pull_request,168005195,2018-02-13 21:22:52,ooflorent,Then it's fine 👍,Then it's fine 👍,0,0,0,1,0,0,Approval,,,,
webpack/webpack,pull_request,184581200,2018-04-27 2:53:05,TheLarkInn,"I agree we can discuss there. If we need to change, I'll go in and remove where needed.","I agree we can discuss there. If we need to change, I'll go in and remove where needed.",0,0,0,1,0,0,Approval,,,,
webpack/webpack,pull_request,206464542,2018-07-31 9:52:53,ooflorent,Yep. I was hesitant. That's probably the best move.,Yep. I was hesitant. That's probably the best move.,0,0,0,1,0,0,Approval,,,,
webpack/webpack,pull_request,225866422,2018-10-17 10:23:47,xtuc,"No it isn't, good catch","No it isn't, good catch",0,0,0,1,0,0,Approval,,Approval,,
webpack/webpack,pull_request,274094522,2019-04-10 18:19:10,hiroppy,"Yes, We need to implement features that can be used with the file/url-loader.
So, I want to implement it in the next step. Also, I want to move all test cases from these loaders.","Yes, We need to implement features that can be used with the file/url-loader. So, I want to implement it in the next step. Also, I want to move all test cases from these loaders.",0,0,0,1,0,0,Approval,-,Agreement -> Approval,1,
webpack/webpack,pull_request,324006383,2019-09-13 1:14:13,maxwoo-houzz,"you're right, I should have wrapped the entire thing in the promise. I changed it, should be visible in the latest commit","you're right, I should have wrapped the entire thing in the promise. I changed it, should be visible in the latest commit",0,0,0,1,0,0,Approval,-,Agreement -> Approval,1,
Microsoft/TypeScript,pull_request,477496765,2020-08-26 18:18:08,sandersn,"oh, that makes sense; `@see {@link ... }` is a pretty common construction I think. never mind.","oh, that makes sense; `[USER] {[USER] ... }` is a pretty common construction I think. never mind.",0,0,0,1,0,0,Approval,-,Agreement -> Approval,,
Microsoft/TypeScript,pull_request,485136866,2020-09-08 19:07:50,andrewbranch,"This looks sketchy, but I manually verified that the assertion should hold in all cases we currently have; it’s just hard to encode it into the types. The only times `host.getCurrentDirectory` is `undefined` are

1. The command line parser and typings installer each call the module name resolver in an ad-hoc way under certain circumstances, but they pass a hard-coded `compilerOptions` that lack `paths`, so this code path is never taken.
2. `Project` calls `getAutomaticTypeDirectives` with a `DirectoryStructureHost`, but that function never uses `host.getCurrentDirectory()`.

Changing `ModuleResolutionHost['getCurrentDirectory']` to be non-optional makes these call sites a bit of a nuisance.","This looks sketchy, but I manually verified that the assertion should hold in all cases we currently have; it’s just hard to encode it into the types. The only times `host.getCurrentDirectory` is `undefined` are

1. The command line parser and typings installer each call the module name resolver in an ad-hoc way under certain circumstances, but they pass a hard-coded `compilerOptions` that lack `paths`, so this code path is never taken.
2. `Project` calls `getAutomaticTypeDirectives` with a `DirectoryStructureHost`, but that function never uses `host.getCurrentDirectory()`.

Changing `ModuleResolutionHost['getCurrentDirectory']` to be non-optional makes these call sites a bit of a nuisance.",0,0,0,1,0,0,Approval,-,Manually verified -> Approval,,
Microsoft/TypeScript,pull_request,540864006,2020-12-11 10:57:57,weswigham,"Yeah, pretty much that exactly.","Yeah, pretty much that exactly.",0,0,0,1,0,0,Approval,,,,
Microsoft/TypeScript,pull_request,552161218,2021-01-05 19:57:58,sheetalkamat,You are right because it would resolve completely to actual path even if equivalent of npm link kind of thing is used .,You are right because it would resolve completely to actual path even if equivalent of npm link kind of thing is used .,0,0,0,1,0,0,Approval,-,Agreement,,
Microsoft/TypeScript,pull_request,567249541,2021-01-30 14:02:05,jonhue,"I agree with the more general point that it is rarely useful to look at the constraints of types when determining whether one is an instance of the other. I do think, however, that this is one of the rare cases where it actually is useful.
I completely agree with all the other points you're making 🙂
I also added your example to the test, although I don' think it will be immediately impacted by the change.","I agree with the more general point that it is rarely useful to look at the constraints of types when determining whether one is an instance of the other. I do think, however, that this is one of the rare cases where it actually is useful.
I completely agree with all the other points you're making 🙂
I also added your example to the test, although I don' think it will be immediately impacted by the change.",0,0,0,1,0,0,Approval,-,Agreement -> Approval,1,
angular/angular,pull_request,595303968,2021-03-16 15:52:02,alfaproject,"Code size/performance, yes I would have to agree","Code size/performance, yes I would have to agree",0,0,0,1,0,0,Approval,,,,
Microsoft/TypeScript,pull_request,600179413,2021-03-24 5:12:01,rbuckton,"> [...] Were you thinking an extension to that, which would validate the parameter count for `ExternalEmitHelpers.ClassPrivateFieldGet | ExternalEmitHelpers.ClassPrivateFieldSet`?

That's precisely what I was describing, yes.","[BLOCK QUOTE]. 

That's precisely what I was describing, yes.",0,0,0,1,0,0,Approval,-,Reaffirming sth -> Agreement -> Approval,,
Microsoft/TypeScript,pull_request,616117268,2021-04-19 19:22:29,DanielRosenwasser,Seems good!,Seems good!,0,0,0,1,0,0,Approval,,Approval,,
angular/angular,pull_request,629735298,2021-05-10 22:58:35,AndrewKushnir,"That looks good, but you could also just use a class field in the binding and update it [as described here](https://github.com/angular/angular/pull/41971/files#r629734711).","That looks good, but you could also just use a class field in the binding and update it [as described here]([URL]",0,0,0,1,0,0,Approval,,,,
angular/angular,pull_request,654364216,2021-06-18 11:44:27,codingnuclei,Absolutely right! :),Absolutely right! :),0,0,0,1,0,0,Approval,,Approval,,
flutter/flutter,pull_request,656585390,2021-06-22 21:15:07,chunhtai,"yes, this is the way i will go about fixing this issue. Please make sure the mechanism is only enabled during debug mode, i.e. wraps the logic in an assert","yes, this is the way i will go about fixing this issue. Please make sure the mechanism is only enabled during debug mode, i.e. wraps the logic in an assert",0,0,0,1,0,0,Approval,-,Approval,1,
flutter/flutter,pull_request,656631873,2021-06-22 22:46:43,HansMuller,"Good point. In that case overflowAlignment applies. This would be a good place to mention overflowAlignment, I'll add it.","Good point. In that case overflowAlignment applies. This would be a good place to mention overflowAlignment, I'll add it.",0,0,0,1,0,0,Approval,,,,
Microsoft/TypeScript,pull_request,657494742,2021-06-23 22:10:31,amcasey,"Yes, because usage indicates that it's unhelpful.","Yes, because usage indicates that it's unhelpful.",0,0,0,1,0,0,Approval,,,,
angular/angular,pull_request,658744651,2021-06-25 13:00:00,whatwouldmarvindo,Looks good! I was unsure how to implement it cleanly in my PR so I just force committed the changes. To my PR Branch 🤞,Looks good! I was unsure how to implement it cleanly in my PR so I just force committed the changes. To my PR Branch 🤞,0,0,0,1,0,0,Approval,-,Approval,1,
angular/angular,pull_request,658793281,2021-06-25 14:08:50,petebacondarwin,"Looks fine to me. You could do this with a second regex replace (!) but I don't think it would make much difference to the performance, and this is pretty easy to follow.","Looks fine to me. You could do this with a second regex replace (!) but I don't think it would make much difference to the performance, and this is pretty easy to follow.",0,0,0,1,0,0,Approval,,,,
angular/angular,pull_request,678725568,2021-07-28 23:50:01,atscott,can we use `getStart()` rather than `pos` to follow the convention in the rest of the file?,can we use `getStart()` rather than `pos` to follow the convention in the rest of the file?,0,0,0,1,0,0,Approval,,Agreement,,
flutter/flutter,pull_request,680251404,2021-07-30 22:31:40,chunhtai,"That is actually a good point, let me think about this more","That is actually a good point, let me think about this more",0,0,0,1,0,0,Approval,,Agreement,,
angular/angular,pull_request,687724118,2021-08-12 13:42:37,edodusi,@AndrewKushnir right! I just pushed the updated commit,[USER] right! I just pushed the updated commit,0,0,0,1,0,0,Approval,,,,
flutter/flutter,pull_request,688181503,2021-08-13 1:17:02,justinmc,"Ah ok interesting, best to keep both then 👍","Ah ok interesting, best to keep both then 👍",0,0,0,1,0,0,Approval,,Agreement,,
Microsoft/TypeScript,pull_request,690000276,2021-08-17 3:07:07,weswigham,"Yeah, that's sounds right. I image we probably shouldn't ignore casts.","Yeah, that's sounds right. I image we probably shouldn't ignore casts.",0,0,0,1,0,0,Approval,,Agreement -> Approval,,
angular/angular,pull_request,692149722,2021-08-19 14:12:14,LayZeeDK,"You're right. What's a better wording for this paragraph?
How about
> The stricter type checking is not enabled by default but the `strictTemplates` configuration option is set to `true` for projects generated by Angular CLI.","You're right. What's a better wording for this paragraph?
How about
[BLOCK QUOTE].",0,0,0,1,0,0,Approval,,Agreement -> Approval,,
flutter/flutter,pull_request,702198884,2021-09-03 23:31:20,christopherfujino,that makes sense. just FYI this may lead to a bigger overall image size (although maybe with caching image size isn't an issue for our cirrus builds?),that makes sense. just FYI this may lead to a bigger overall image size (although maybe with caching image size isn't an issue for our cirrus builds?),0,0,0,1,0,0,Approval,,,,
flutter/flutter,pull_request,705693089,2021-09-09 20:57:03,Piinks,"I agree, it's not bad to keep this test, even if it passes without this change and has coverage in a golden file test. I think it's never bad to have another test. :)","I agree, it's not bad to keep this test, even if it passes without this change and has coverage in a golden file test. I think it's never bad to have another test. :)",0,0,0,1,0,0,Approval,,,,
flutter/flutter,pull_request,721770912,2021-10-04 22:54:47,HansMuller,"Good point and that's pretty slick but it may not help with the ""pretty complicated"" issue :-). Factoring out the resolve function makes it a little more obvious that we're just return the first MaterialStateProperty that resolves to null. So:

```dart
Color _getIconColor(ThemeData themeData) {
 Color _resolveIconColor(Set<MaterialState> states) {
 if (states.contains(MaterialState.disabled) && !states.contains(MaterialState.focused))
 return themeData.disabledColor;

 if (states.contains(MaterialState.focused))
 return themeData.colorScheme.primary;

 switch (themeData.brightness) {
 case Brightness.dark:
 return Colors.white70;
 case Brightness.light:
 return Colors.black45;
 }
 }
 return MaterialStateProperty.resolveAs(themeData.inputDecorationTheme.iconColor, materialState)
 ?? MaterialStateProperty.resolveWith(_resolveIconColor).resolve(materialState);
}
```
That's pretty close to what you had, whichever way you find more readable is OK with me.","Good point and that's pretty slick but it may not help with the ""pretty complicated"" issue :-). Factoring out the resolve function makes it a little more obvious that we're just return the first MaterialStateProperty that resolves to null. So:

[TRIPLE QUOTE].
That's pretty close to what you had, whichever way you find more readable is OK with me.",0,0,0,1,0,0,Approval,,Agreement -> Approval,,
flutter/flutter,pull_request,724610147,2021-10-07 23:55:57,Piinks,"Aaah I see. That is so true. 

What about something a bit more explicit like...

1. Execute `flutter run` code below
2. <!-- describe steps to demonstrate bug -->
3. <!-- e.g. Tap on X, see crash -->

This way it also nudges folks to fill out your code template below :) WDYT?","Aaah I see. That is so true. 

What about something a bit more explicit like...

1. Execute `flutter run` code below
2. <!-- describe steps to demonstrate bug -->
3. <!-- e.g. Tap on X, see crash -->

This way it also nudges folks to fill out your code template below :) WDYT?",0,0,0,1,0,0,Approval,-,Agreement -> Approval,,
webpack/webpack,issue,788800390,2021-03-02 10:25:32,alexander-akait,"It is the same problem, duplicate, yes steps are different but the problem is the same","It is the same problem, duplicate, yes steps are different but the problem is the same",0,0,0,1,0,0,Approval,,,,
webpack/webpack,issue,874048172,2021-07-05 11:44:21,alexander-akait,"@dilyanpalauzov yep, it is bug, we will fix it, so we have it in `experiments` :+1:","[USER] yep, it is bug, we will fix it, so we have it in `experiments` :+1:",0,0,0,1,0,0,Approval,,,,
webpack/webpack,issue,880074565,2021-07-14 17:25:22,alexander-akait,"Yep, you are right, duplicate, let's close in favor https://github.com/webpack/webpack/issues/12960, thanks for hing","Yep, you are right, duplicate, let's close in favor [URL] thanks for hing",0,0,0,1,0,0,Approval,-,Agreement -> Approval,1,
angular/angular,issue,881669113,2021-07-16 19:28:25,JoostK,"Heya, sorry it took me a while to respond. I think I understand what you mean in your last comment about parameter normalization and I agree that it's a different issue, so no need to worry about that in this PR. I think I agree with your analysis that numeric parameters should not cause normalization failures due to a hidden conversion to strings.","Heya, sorry it took me a while to respond. I think I understand what you mean in your last comment about parameter normalization and I agree that it's a different issue, so no need to worry about that in this PR. I think I agree with your analysis that numeric parameters should not cause normalization failures due to a hidden conversion to strings.",0,0,0,1,0,0,Approval,-,Agreement -> Approval,1,
angular/angular,issue,881791172,2021-07-17 1:12:51,alxhub,"Agreed - if this is needed in a particular application, custom structural directives are a better solution. Attempting to solve this problem generally would be a major undertaking.","Agreed - if this is needed in a particular application, custom structural directives are a better solution. Attempting to solve this problem generally would be a major undertaking.",0,0,0,1,0,0,Approval,-,Agreement -> Approval,1,
Microsoft/TypeScript,issue,902790283,2021-08-20 15:53:11,sdegutis,Very good point.,Very good point.,0,0,0,1,0,0,Approval,,Approval,,
Microsoft/TypeScript,issue,902995065,2021-08-20 22:48:58,Zemnmez,"I agree that I rarely need this feature, however when I use any of the 'tsconfig' packages, e.g. https://www.npmjs.com/package/@tsconfig/node12, I often want to use both that and some base config that has my common rules in. Currently, the only way to use tsconfig packages is to maintain parity -- which is, to some extent just fine.","I agree that I rarely need this feature, however when I use any of the 'tsconfig' packages, e.g. [URL] I often want to use both that and some base config that has my common rules in. Currently, the only way to use tsconfig packages is to maintain parity -- which is, to some extent just fine.",0,0,0,1,0,0,Approval,,,,
angular/angular,issue,910832606,2021-09-01 22:21:34,josmar-crwdstffng,"Looks good to me.
Please move forward with the PRs to get your examples implemented.
Thank you","Looks good to me.
Please move forward with the PRs to get your examples implemented.
Thank you",0,0,0,1,0,0,Approval,-,Approval,1,
angular/angular,issue,926892894,2021-09-24 20:12:01,JoostK,"> I kind of feel that we should be less relaxed about the ordering and duplication of tokens in such an array. If not an error then a warning, since it is unlikely that the developer meant to put more than one token into the array.

I share your feeling that duplication of tokens should be reported as an error (see https://github.com/angular/angular/pull/42994#discussion_r684930290 😄), but strictly speaking that would be a breaking change and separate from this fix.","[BLOCK QUOTE]. 

I share your feeling that duplication of tokens should be reported as an error (see [URL] 😄), but strictly speaking that would be a breaking change and separate from this fix.",0,0,0,1,0,0,Approval,-,Agreement -> Approval,,
angular/angular,issue,932418639,2021-10-01 17:22:44,alan-agius4,@gkalpak & my approval should be enough for this.,[USER] & my approval should be enough for this.,0,0,0,1,0,0,Approval,,,,
Microsoft/TypeScript,issue,932482827,2021-10-01 19:05:51,DanielRosenwasser,"Good call, I assumed it would be an open-and-shut normative PR but it looks like it hasn't been updated for a while; let's hold off until https://github.com/tc39/ecma262/pull/2154 is actually merged.","Good call, I assumed it would be an open-and-shut normative PR but it looks like it hasn't been updated for a while; let's hold off until [URL] is actually merged.",0,0,0,1,0,0,Approval,-,Agreement (about the call) -> Approval,,
angular/angular,issue,938967285,2021-10-08 17:48:56,AndrewKushnir,"Merge assistance: it looks like NgBot is confused: the necessary approvals were provided, so it's safe to proceed with the merge.","Merge assistance: it looks like NgBot is confused: the necessary approvals were provided, so it's safe to proceed with the merge.",0,0,0,1,0,0,Approval,,,,
angular/angular,issue,940421867,2021-10-11 20:35:03,dario-piotrowicz,"Yeah what you're saying makes total sense, sorry I think I've just had tunnel vision on the lines section as that seemed the cleanest and more efficient place where to put this.
With the regexes done beforehand we will parse each file one extra time, which thinking of that, it's not even that bad as this is just done at build time so it's not like it needs to be ultra performant or anything (also regexes are should be quite optimized right?)
Anyways I would really not mind having a crack at this :slightly_smiling_face: , but you'd do a better and faster job with you mad regex skills :heart_eyes:, so I can do it or if you'd enjoy this task I am also totally fine with you handling it :slightly_smiling_face::+1:","Yeah what you're saying makes total sense, sorry I think I've just had tunnel vision on the lines section as that seemed the cleanest and more efficient place where to put this.
With the regexes done beforehand we will parse each file one extra time, which thinking of that, it's not even that bad as this is just done at build time so it's not like it needs to be ultra performant or anything (also regexes are should be quite optimized right?)
Anyways I would really not mind having a crack at this :slightly_smiling_face: , but you'd do a better and faster job with you mad regex skills :heart_eyes:, so I can do it or if you'd enjoy this task I am also totally fine with you handling it :slightly_smiling_face::+1:",0,0,0,1,0,0,Approval,,,,
flutter/flutter,issue,951499389,2021-10-26 2:31:40,dnfield,"Ahh yes ok, that makes sense.","Ahh yes ok, that makes sense.",0,0,0,1,0,0,Approval,-,Agreement -> Approval,,
angular/angular,issue,952016891,2021-10-26 14:47:57,MickL,"You are right its a duplicate, even tho the issue is not very well described","You are right its a duplicate, even tho the issue is not very well described",0,0,0,1,0,0,Approval,-,Agreement -> Approval,,1
flutter/flutter,issue,952413616,2021-10-26 23:40:57,Hixie,@goderbauer says verbally that he's ok with it too.,[USER] says verbally that he's ok with it too.,0,0,0,1,0,0,Approval,-,Agreement -> Approval,,
flutter/flutter,issue,953862319,2021-10-28 13:47:40,k10dev,@zhongwuzw Sounds good. The crash is very random but always happen on the closing of the app. I'll work on a minimal sample app to see if it can be reproduced easily.,[USER] Sounds good. The crash is very random but always happen on the closing of the app. I'll work on a minimal sample app to see if it can be reproduced easily.,0,0,0,1,0,0,Approval,,Approval,,
Microsoft/TypeScript,issue,954948987,2021-10-29 18:14:30,andrewbranch,"Yeah, that's a good suggestion.","Yeah, that's a good suggestion.",0,0,0,1,0,0,Approval,,,,
flutter/flutter,issue,956013136,2021-11-01 8:01:32,darshankawar,"@sailingbin
This is the correct place to report this issue. Can you provide `flutter doctor -v` and any evidence of plugin unable to release the memory.","[USER]
This is the correct place to report this issue. Can you provide `flutter doctor -v` and any evidence of plugin unable to release the memory.",0,0,0,1,0,0,Approval,,,,
flutter/flutter,pull_request,688053781,2021-08-12 20:15:21,justinmc,"I actually had already moved this to TextEditingActionTarget as a private instance method that uses TextMetrics.getWordPosition, but I had forgotten to delete this static method here. Thanks for catching this. Let me know if you like it on TextEditingActionTarget or if you think it would be better on TextMetrics.

Regarding RTL, you're right, I think we have a lot of missing support for this. I've created an issue (https://github.com/flutter/flutter/issues/88126) and I'll add TODOs for it here.","I actually had already moved this to TextEditingActionTarget as a private instance method that uses TextMetrics.getWordPosition, but I had forgotten to delete this static method here. Thanks for catching this. Let me know if you like it on TextEditingActionTarget or if you think it would be better on TextMetrics.

Regarding RTL, you're right, I think we have a lot of missing support for this. I've created an issue ([URL]) and I'll add TODOs for it here.",0,0,0,1,0,0,"Approval, Contentment",Pleasure,"Agreed -> Approval, Content",,
webpack/webpack,issue,796915785,2021-03-11 17:40:08,ef4,"Makes sense. I agree, we should all be pulling the ecosystem toward clear standards and not a mishmash like auto mode. Thanks.","Makes sense. I agree, we should all be pulling the ecosystem toward clear standards and not a mishmash like auto mode. Thanks.",0,0,0,1,0,0,"Approval, Contentment",Pleasure,"Agreement -> Approval, Contentment",1,
angular/angular,issue,955385844,2021-10-30 16:01:28,petebacondarwin,"I think this is a good change. It is true that these properties can be undefined - in fact they are even set to undefined explicitly. So the typings are not correct as they stand.

I agree that this would break compilations in many projects. That being said, it is actually a real problem and the errors will be easy to fix. We could probably write a migration that marked these properties with `!` or `?` but I worry this could then hide the problem.

I would like to see the results of a presubmit.","I think this is a good change. It is true that these properties can be undefined - in fact they are even set to undefined explicitly. So the typings are not correct as they stand.

I agree that this would break compilations in many projects. That being said, it is actually a real problem and the errors will be easy to fix. We could probably write a migration that marked these properties with `!` or `?` but I worry this could then hide the problem.

I would like to see the results of a presubmit.",0,0,0,1,0,0,"Approval, Contentment",Pleasure,"Agreement -> Approval, Contentment",,
flutter/flutter,pull_request,660012447,2021-06-28 18:13:05,jcollins-g,"Yes, we don't currently use our knowledge of what T is. We could add this feature later if we decide we really like it -- dartdoc does have enough data to figure this out. Though in this case, since T is defined as ""extending Object?"" it won't have an operator+.","Yes, we don't currently use our knowledge of what T is. We could add this feature later if we decide we really like it -- dartdoc does have enough data to figure this out. Though in this case, since T is defined as ""extending Object?"" it won't have an operator+.",0,0,0,1,0,0,"Approval, Optimism",Hope,"Agreement -> Approval, Hopeful",,
webpack/webpack,pull_request,90701231,2016-12-02 19:09:18,TheLarkInn,oops 😅 I haven't implemented the tests yet so I hadn't audited yet.,oops 😅 I haven't implemented the tests yet so I hadn't audited yet.,0,0,0,1,0,0,Cheerfulness,Amusement,Amused (based on emoji),,
webpack/webpack,pull_request,94291425,2017-01-02 1:49:07,chicoxyzzy,wrapping these lines into block will make linter happy :),wrapping these lines into block will make linter happy :),0,0,0,1,0,0,Cheerfulness,Joy,Joy,,
webpack/webpack,pull_request,94530840,2017-01-04 5:20:59,TheLarkInn,"Yeah that looks great, I think that is a good approach.","Yeah that looks great, I think that is a good approach.",0,0,0,1,0,0,Cheerfulness,Happiness,Happy,1,
webpack/webpack,pull_request,95046608,2017-01-07 1:04:32,TheLarkInn,Heh didn't even notice this in the src before that's awesome.,Heh didn't even notice this in the src before that's awesome.,0,0,0,1,0,0,Cheerfulness,happiness,,,
webpack/webpack,pull_request,150086821,2017-11-09 21:07:33,michael-ciniawsky,If this is just github displaying tabs `\t` weirdly forget what I said then 😛,If this is just github displaying tabs `\t` weirdly forget what I said then 😛,0,0,0,1,0,0,Cheerfulness,Jolliness,Jolliness (based on emoji),,
webpack/webpack,pull_request,163396586,2018-01-23 22:24:16,TheLarkInn,"Touche. Haha well we should just update them all in one PR, not this one though. 😂","Touche. Haha well we should just update them all in one PR, not this one though. 😂",0,0,0,1,0,0,Cheerfulness,Jolliness,Jolliness,,
webpack/webpack,pull_request,166578897,2018-02-07 10:41:30,michael-ciniawsky,"Guys I just hadn't the time to finalize the local stuff I'm working on for the `postcss-icss-*` side of affairs, this stuff (dependencies) will be moved soon from the PR :D 😛. Happy with every `postcss-value-parser` that is capable of parsing `@import/url()` for the initial `CSSParser` in it's default state. `css-modules` will still be an opt-in either via `postcss-loader` or something like

```js
{
 type: 'css/experimental',
 test: /\.css$/,
 parser: {
 plugins: [
 require('postcss-modules')(options)
 ]
 }
}
```","Guys I just hadn't the time to finalize the local stuff I'm working on for the `postcss-icss-*` side of affairs, this stuff (dependencies) will be moved soon from the PR :D 😛. Happy with every `postcss-value-parser` that is capable of parsing `@import/url()` for the initial `CSSParser` in it's default state. `css-modules` will still be an opt-in either via `postcss-loader` or something like

[TRIPLE QUOTE].",0,0,0,1,0,0,Cheerfulness,Happiness,Happy,,
webpack/webpack,pull_request,177721513,2018-03-28 11:45:26,dhruvdutt,It's merged. :tada:,It's merged. :tada:,0,0,0,1,0,0,Cheerfulness,Happiness,Happy,,
webpack/webpack,pull_request,185240719,2018-05-01 14:55:39,TheLarkInn,Lmaooooo nanifest seems cooler though 😂,Lmaooooo nanifest seems cooler though 😂,0,0,0,1,0,0,Cheerfulness,Jolliness,Jolliness,,
webpack/webpack,pull_request,186009736,2018-05-04 7:49:34,sokra,This is wrong for `index === 0`,This is wrong for `index === 0`,0,0,0,1,0,0,Cheerfulness,Joviality,Joviality,,
webpack/webpack,pull_request,220100243,2018-09-25 8:25:36,michael-ciniawsky,Is this the correct way? I don't think so... 😛,Is this the correct way? I don't think so... 😛,0,0,0,1,0,0,Cheerfulness,Jolliness,Jolliness,,
webpack/webpack,pull_request,379757627,2020-02-15 6:11:20,jamesgeorge007,Good catch :clap:,Good catch :clap:,0,0,0,1,0,0,Cheerfulness,,Cheerfulness,,
Microsoft/TypeScript,pull_request,523003305,2020-11-13 14:57:54,Andarist,"I'm not sure how to fix this, nor if this is acceptable in this test case. Namespaces in TS are magic to me 😅","I'm not sure how to fix this, nor if this is acceptable in this test case. Namespaces in TS are magic to me 😅",0,0,0,1,0,0,Cheerfulness,Amusement,Amused,,
Microsoft/TypeScript,pull_request,523003698,2020-11-13 14:58:33,Andarist,"Oh, so you are one of those... Added a new test to cover for this 😉","Oh, so you are one of those... Added a new test to cover for this 😉",0,0,0,1,0,0,Cheerfulness,Jolliness,Jolliness,,
Microsoft/TypeScript,pull_request,571242698,2021-02-05 20:50:32,a-tarasyuk,@sheetalkamat Thanks for the feedback. Renamed `generateReturn` to `generateReturnInDocTemplate`.,[USER] Thanks for the feedback. Renamed `generateReturn` to `generateReturnInDocTemplate`.,0,0,0,1,0,0,Cheerfulness,Joy,Joy,,
Microsoft/TypeScript,pull_request,571687515,2021-02-07 20:23:44,dragomirtitian,"Yeah, that was actually wrong, not sure how it worked 😅","Yeah, that was actually wrong, not sure how it worked 😅",0,0,0,1,0,0,Cheerfulness,Amusement,Amused (Emoji),,
Microsoft/TypeScript,pull_request,582164148,2021-02-24 17:39:05,andrewbranch,"I agree that line looks weird, and I was hoping we could remove it too 😆 I still don’t understand that filter, so I’ll have to take a closer look at what it means. Thanks for pointing out the failure in nodeServer.ts. That will be useful to look at.","I agree that line looks weird, and I was hoping we could remove it too 😆 I still don’t understand that filter, so I’ll have to take a closer look at what it means. Thanks for pointing out the failure in nodeServer.ts. That will be useful to look at.",0,0,0,1,0,0,Cheerfulness,Amusement,Amused [emoji],,
Microsoft/TypeScript,pull_request,606605808,2021-04-03 2:40:18,sangxxh,"Thanks, makes sense","Thanks, makes sense",0,0,0,1,0,0,Cheerfulness,Happiness,Happy,,
angular/angular,pull_request,614195174,2021-04-15 15:57:30,petebacondarwin,"Nothing is doing the upgrading. They are just left alone 😄 Perhaps one could say:
> Existing libraries, which are configured to generate the View Engine format, do not change when upgrading to Angular version 12.
>
> To convert such libraries to use generate the partial-Ivy format change the tsconfig.json file by removing the `enableIvy` option and adding the `compilationMode` option:","Nothing is doing the upgrading. They are just left alone 😄 Perhaps one could say: 

[BLOCK QUOTE].",0,0,0,1,0,0,Cheerfulness,Amusement,Amused (based on emoji),,
Microsoft/TypeScript,pull_request,638325040,2021-05-24 22:13:35,weswigham,"After some [benchmarking](https://jsbench.me/yukp35kv3j/1) the simplest thing to do was use our `isWhiteSpaceLike` function that we already export from the scanner - the simple branching is apparently faster than either the regex or a native Set. That's probably a good thing, given how much it's used inside the scanner. 🐱","After some benchmarking([URL]) the simplest thing to do was use our `isWhiteSpaceLike` function that we already export from the scanner - the simple branching is apparently faster than either the regex or a native Set. That's probably a good thing, given how much it's used inside the scanner. 🐱",0,0,0,1,0,0,Cheerfulness,Happiness,Happy,,
angular/angular,pull_request,638749612,2021-05-25 12:40:56,devversion,done. we should start linting this! 😄,done. we should start linting this! 😄,0,0,0,1,0,0,Cheerfulness,Glee,Glee,,
angular/angular,pull_request,643994320,2021-06-02 14:02:10,devversion,I see. good point. We should be okay keeping as is; but should rename the function to not suggest it's similar to the async `withDebugOutput` helper. We don't deal with any debug output here; rather it's a simple `spawnSync` wrapper with our Windows compatibility settings (e.g. `shell`).,I see. good point. We should be okay keeping as is; but should rename the function to not suggest it's similar to the async `withDebugOutput` helper. We don't deal with any debug output here; rather it's a simple `spawnSync` wrapper with our Windows compatibility settings (e.g. `shell`).,0,0,0,1,0,0,Cheerfulness,Happiness,Overall positive/contentment sentiment -> Happy,,
flutter/flutter,pull_request,645073135,2021-06-03 19:33:14,Piinks,Oh goodness! My brain must've still been on vacation. 😋 Thanks!,Oh goodness! My brain must've still been on vacation. 😋 Thanks!,0,0,0,1,0,0,Cheerfulness,Joviality,Joviality,,
angular/angular,pull_request,655635656,2021-06-21 19:06:36,devversion,"Optional nit: It's a bit tricky because this assumes that the properties (`users` or `teams`) are not defined if it would be empty. Seems like this is something YAML does, but that is not necessarily known here 😄 

For more clarity and a more obvious check here, we could always set `users` and `teams` to an empty array if it's not defined.","Optional nit: It's a bit tricky because this assumes that the properties (`users` or `teams`) are not defined if it would be empty. Seems like this is something YAML does, but that is not necessarily known here 😄 

For more clarity and a more obvious check here, we could always set `users` and `teams` to an empty array if it's not defined.",0,0,0,1,0,0,Cheerfulness,Happiness,Happy,,
Microsoft/TypeScript,pull_request,656711547,2021-06-23 2:23:11,Kingwl,"Friendly ping. needs some suggestions here😂. @rbuckton.(Sorry for push, I see you are recently online)","Friendly ping. needs some suggestions here😂. [USER] for push, I see you are recently online)",0,0,0,1,0,0,Cheerfulness,amusement,,,
Microsoft/TypeScript,pull_request,664947251,2021-07-06 23:54:58,weswigham,"Uhh... Yeah, it's probably fine - there's an `any` due to truncation in the removed type text, so all we did was truncate more, which is generally fine.","Uhh... Yeah, it's probably fine - there's an `any` due to truncation in the removed type text, so all we did was truncate more, which is generally fine.",0,0,0,1,0,0,Cheerfulness,Satisfaction,Satisfied -> Happy,,
angular/angular,pull_request,671736550,2021-07-17 19:49:39,dario-piotrowicz,"yeah all good points, I totally agree with the comment regarding the `;` about the multiline thing I am not sure but yeah I think you're probably right on those too, I'll need to check
thanks a lot!!! :slightly_smiling_face:","yeah all good points, I totally agree with the comment regarding the `;` about the multiline thing I am not sure but yeah I think you're probably right on those too, I'll need to check
thanks a lot!!! :slightly_smiling_face:",0,0,0,1,0,0,Cheerfulness,Happiness,Happy,,
angular/angular,pull_request,672894662,2021-07-20 7:57:30,gkalpak,Definitely! You can always safely mark things as resolved when using my regexes 😛,Definitely! You can always safely mark things as resolved when using my regexes 😛,0,0,0,1,0,0,Cheerfulness,Joviality,Joviality,,
Microsoft/TypeScript,pull_request,687172118,2021-08-11 20:34:45,uniqueiniquity,It may not be 😅,It may not be 😅,0,0,0,1,0,0,Cheerfulness,Jolliness,Jolliness,,
flutter/flutter,pull_request,695272975,2021-08-24 23:00:44,Piinks,Oh I see. 😝 Reference this above for when folks are in the api docs on individual pages.,Oh I see. 😝 Reference this above for when folks are in the api docs on individual pages.,0,0,0,1,0,0,Cheerfulness,amusement,,,
flutter/flutter,pull_request,695293645,2021-08-24 23:56:55,craiglabenz,"Oh nice, I didn't realize this showed up anywhere!","Oh nice, I didn't realize this showed up anywhere!",0,0,0,1,0,0,Cheerfulness,happiness,,,
flutter/flutter,pull_request,696826933,2021-08-26 17:13:44,justinmc,"Good call, I was able to get rid of it. The previousCharacter thing seems to have been used to work around these wordwrap problems mainly when getLineBoundary didn't respect TextAffinity.","Good call, I was able to get rid of it. The previousCharacter thing seems to have been used to work around these wordwrap problems mainly when getLineBoundary didn't respect TextAffinity.",0,0,0,1,0,0,Cheerfulness,Joy,Joy,,
angular/angular,pull_request,702098157,2021-09-03 18:40:30,gkalpak,"TBH, I don't think there is much benefit in moving shell commands to external files :grin: 🙊 😇
We do not lint, test or otherwise validate them (afaict) and it just makes it harder for authors to edit them (and ensure they remain relevant with the surrounding text).
As much as I prefer having code-snippets be derived from docregions, it might make sense to make an exception for some content types, such as shell commands.","TBH, I don't think there is much benefit in moving shell commands to external files :grin: 🙊 😇
We do not lint, test or otherwise validate them (afaict) and it just makes it harder for authors to edit them (and ensure they remain relevant with the surrounding text).
As much as I prefer having code-snippets be derived from docregions, it might make sense to make an exception for some content types, such as shell commands.",0,0,0,1,0,0,Cheerfulness,Amusement,Amused based on emoji,,
angular/angular,pull_request,704831786,2021-09-08 23:00:23,uraj,"Yes, aspect is so much better. I have updated the code.","Yes, aspect is so much better. I have updated the code.",0,0,0,1,0,0,Cheerfulness,Happiness,Happy,,
flutter/flutter,pull_request,711259165,2021-09-17 18:13:33,Piinks,"Ah thanks! Yes, the goldens are expected. I added an image that would otherwise be overflowing onto the following child. :)","Ah thanks! Yes, the goldens are expected. I added an image that would otherwise be overflowing onto the following child. :)",0,0,0,1,0,0,Cheerfulness,Happiness,Happy,1,
Microsoft/TypeScript,pull_request,714038314,2021-09-22 15:03:44,acutmore,"You are 100% on the money with this. Turns out the parsing was incorrect, and so is the parsing in v8 (about to raise a ticket).
I'm changing things to the way you said and it works much better.","You are 100% on the money with this. Turns out the parsing was incorrect, and so is the parsing in v8 (about to raise a ticket).
I'm changing things to the way you said and it works much better.",0,0,0,1,0,0,Cheerfulness,Satisfaction,Satisfied -> Happy,,
Microsoft/TypeScript,pull_request,719889205,2021-10-01 2:08:25,Jack-Works,I don't know where is this source comes from 😂,I don't know where is this source comes from 😂,0,0,0,1,0,0,Cheerfulness,amusement,,,
Microsoft/TypeScript,pull_request,727413212,2021-10-12 19:02:26,weswigham,"Yeah, I just chuckle because when this test was first added it had this error, then it got removed by another change, then it got added back, and now it's being removed again. This test is surprisingly good at capturing how strict we are about comparing infinite types, even if that's not what it was meant to test (it was meant to test a crash).","Yeah, I just chuckle because when this test was first added it had this error, then it got removed by another change, then it got added back, and now it's being removed again. This test is surprisingly good at capturing how strict we are about comparing infinite types, even if that's not what it was meant to test (it was meant to test a crash).",0,0,0,1,0,0,Cheerfulness,Amusement,Amused,,
Microsoft/TypeScript,pull_request,729442182,2021-10-15 0:41:44,amcasey,This seems like an acceptable protocol change. 😆,This seems like an acceptable protocol change. 😆,0,0,0,1,0,0,Cheerfulness,Amusement,Amused,,
angular/angular,pull_request,730137163,2021-10-15 21:36:43,dario-piotrowicz,"awesome thanks :slightly_smiling_face: just a couple of questions :slightly_smiling_face: do we need the groups to be non-capturing? :thinking: and, I can see a small slight issue with the regex, as you can see here for example:
![Screenshot at 2021-10-15 22-32-42](https://user-images.githubusercontent.com/61631103/137555990-623d76e4-399c-4175-b4b0-ecfb8df3bdd6.png)
we take the spaces after the eslint comment, but is that really correct? in this case, we will get `text` indented only 5 spaces and not 10
do you think this is ok?
(I know that in theory the eslint comment should have the same indentation as the next line but who knows, you can find someone else as bad as me at indenting stuff :laughing: :man_shrugging: )","awesome thanks :slightly_smiling_face: just a couple of questions :slightly_smiling_face: do we need the groups to be non-capturing? :thinking: and, I can see a small slight issue with the regex, as you can see here for example: [URL] we take the spaces after the eslint comment, but is that really correct? in this case, we will get `text` indented only 5 spaces and not 10 do you think this is ok? (I know that in theory the eslint comment should have the same indentation as the next line but who knows, you can find someone else as bad as me at indenting stuff :laughing: :man_shrugging: )",0,0,0,1,0,0,Cheerfulness,Joy,Joy,1,
flutter/flutter,pull_request,742384352,2021-11-03 22:15:44,HansMuller,This looks great!,This looks great!,0,0,0,1,0,0,Cheerfulness,Happiness,Happy,,
webpack/webpack,issue,783542251,2021-02-22 17:32:58,jasongrout,Thanks @AviVahl for pointing out these functions. I'm also +1 on using the builtin functions rather than rolling our own incomplete checks.,Thanks [USER] for pointing out these functions. I'm also +1 on using the builtin functions rather than rolling our own incomplete checks.,0,0,0,1,0,0,Cheerfulness,Happiness,Pleased -> Happy,,
webpack/webpack,issue,785050492,2021-02-24 12:45:42,snitin315,"> also missing: Externals, ExternalItemFunctionData, ExternalItemValue, ExternalItemObjectKnown, ExternalItemObjectUnknown, ExternalItemValue

No worries if you don't have bandwidth @AviVahl I can send a PR for exporting these types.","[BLOCK QUOTE].

No worries if you don't have bandwidth [USER] I can send a PR for exporting these types.",0,0,0,1,0,0,Cheerfulness,Happiness,Assuring -> Happy feeling,,
webpack/webpack,issue,796731497,2021-03-11 13:22:11,RReverser,"@alexander-akait I see you liked the comment - if you want to review, that's also welcome 😀 This is literally our only blocker left...","[USER] I see you liked the comment - if you want to review, that's also welcome 😀 This is literally our only blocker left...",0,0,0,1,0,0,Cheerfulness,happiness,,,
webpack/webpack,issue,797460963,2021-03-12 12:29:45,surma,"Also, I am thing I can officially call this issue resolved with Webpack 5 🎉 🎉 🎉 🎉 🎉 🎉","Also, I am thing I can officially call this issue resolved with Webpack 5 🎉 🎉 🎉 🎉 🎉 🎉",0,0,0,1,0,0,Cheerfulness,Happiness,Cheerfulness,,
webpack/webpack,issue,799351710,2021-03-15 11:40:49,xinggangling,"> @xinggangling It is impossible, sorry, and out of scope PR, we have other issue for this

topLevelAwait cause this problem,we had improved
our code.😃","[BLOCK QUOTE].

topLevelAwait cause this problem,we had improved
our code.😃",0,0,0,1,0,0,Cheerfulness,Happiness,Happy (based on emotions),,
angular/angular,issue,875608145,2021-07-07 13:33:23,gkalpak,"> but you stole my thunder!

Guilty as charged 😇
(To my defense, I thought I was doing you a favor 😛)

Thx for still taking a look :grin:","[BLOCK QUOTE]. 

Guilty as charged 😇
(To my defense, I thought I was doing you a favor 😛)

Thx for still taking a look :grin:",0,0,0,1,0,0,Cheerfulness,Amusement,Amusement,,
webpack/webpack,issue,881638125,2021-07-16 18:29:22,pdemro,You guys are on top of it. Cheers 🍻,You guys are on top of it. Cheers 🍻,0,0,0,1,0,0,Cheerfulness,,Cheerfulness,,
webpack/webpack,issue,882682739,2021-07-19 16:21:46,rockwalrus,You're welcome!,You're welcome!,0,0,0,1,0,0,Cheerfulness,Joy,,,
webpack/webpack,issue,884877653,2021-07-22 12:36:07,MatteoGabriele,"good to know, thanks!
I will update the configuration","good to know, thanks!
I will update the configuration",0,0,0,1,0,0,Cheerfulness,happiness,,,
angular/angular,issue,898017970,2021-08-12 22:42:50,bampakoa,@dario-piotrowicz thank you 🙏 I hope you will like it 😄,[USER] thank you 🙏 I hope you will like it 😄,0,0,0,1,0,0,Cheerfulness,Happiness,Happy,,
Microsoft/TypeScript,issue,912806448,2021-09-03 20:58:03,jespertheend,"Ah thanks!

Sorry, it thought that `""lib"": [""dom""]` would include all other `dom.*` libs as well.","Ah thanks!

Sorry, it thought that `""lib"": [""dom""]` would include all other `dom.*` libs as well.",0,0,0,1,0,0,Cheerfulness,Joy,Joy,1,
Microsoft/TypeScript,issue,913202933,2021-09-05 18:27:10,jamesgpearce,"As a complete surprise, this just started working.
```ts
type CellId = string;
type Row = {[cellId: CellId]: string}; // \o/
const row: Row = {'cell1': 'a'}
```
Digging deeper, the new index signature features are in the [4.4 release notes](https://www.typescriptlang.org/docs/handbook/release-notes/typescript-4-4.html).","As a complete surprise, this just started working.
[TRIPLE QUOTE].
Digging deeper, the new index signature features are in the [4.4 release notes]([URL]",0,0,0,1,0,0,Cheerfulness,Joy,,,
webpack/webpack,issue,913692354,2021-09-06 14:29:03,nazar-pc,It wasn't when I posted this issue :slightly_smiling_face:,It wasn't when I posted this issue :slightly_smiling_face:,0,0,0,1,0,0,Cheerfulness,amusement,,,
angular/angular,issue,914557671,2021-09-07 19:15:20,e-oz,"thanks, @IgorMinar for clarification.
I was just a little bit worried by this
> The mental model shift proposed by this change is to turn type-checking into a very sophisticated lint check.
and by the plans of using esbuild (because esbuild doesn't check types).
But if it will be totally configurable - it’s amazing.","thanks, [USER] for clarification. I was just a little bit worried by this 
[BLOCK QUOTE]. 
and by the plans of using esbuild (because esbuild doesn't check types). But if it will be totally configurable - it’s amazing.",0,0,0,1,0,0,Cheerfulness,Happiness,Happy,,
angular/angular,issue,917619220,2021-09-12 11:41:15,petebacondarwin,Glad you got to the bottom of this,Glad you got to the bottom of this,0,0,0,1,0,0,Cheerfulness,Happiness,Happy,,
webpack/webpack,issue,919009505,2021-09-14 10:09:03,noahehall,"thx @alexander-akait 

I switched to [uvu](https://github.com/lukeed/uvu)

and everything is working nice!","thx [USER] 

I switched to [uvu]([URL]) 

and everything is working nice!",0,0,0,1,0,0,Cheerfulness,Happiness,Happy,,
angular/angular,issue,921236280,2021-09-16 20:52:03,dario-piotrowicz,"> ```diff
> return !isQuoted ? str : str.replace(/((?:^|[^\\])(?:\\\\)*)\\(?=['""])/g, '$1');
> ```

yeah it works perfectly!!! :smile:

.... so the look-ahead is ok, but the look-behind is not? I had not idea :open_mouth:","[BLOCK QUOTE].

yeah it works perfectly!!! :smile:

.... so the look-ahead is ok, but the look-behind is not? I had not idea :open_mouth:",0,0,0,1,0,0,Cheerfulness,Happiness,Happy,,
Microsoft/TypeScript,issue,922332071,2021-09-18 15:57:52,ctjlewis,"Excellent work on this PR and mjs/cjs support, Wes. (We have been discussing full ES specifier support in #42151.)","Excellent work on this PR and mjs/cjs support, Wes. (We have been discussing full ES specifier support in #42151.)",0,0,0,1,0,0,Cheerfulness,Happiness,Happy,,
Microsoft/TypeScript,issue,922713721,2021-09-20 8:10:29,mprobst,Friendly ping.,Friendly ping.,0,0,0,1,0,0,Cheerfulness,Joy,,,
Microsoft/TypeScript,issue,925433950,2021-09-23 0:54:01,DanielRosenwasser,"Sorry @andrewbranch, that's what the notes were *meant* to reflect, but the convo was happening a bit too fast.
I think the analogy was fine. Usually the idiom ""it's not rocket science"" implies ""this is simple, so nobody should get overwhelmed by it"" whereas this is something we *don't* think is simple, and thus can make no guarantees about whether anyone will be overwhelmed by it 😅","Sorry [USER] that's what the notes were *meant* to reflect, but the convo was happening a bit too fast.
I think the analogy was fine. Usually the idiom ""it's not rocket science"" implies ""this is simple, so nobody should get overwhelmed by it"" whereas this is something we *don't* think is simple, and thus can make no guarantees about whether anyone will be overwhelmed by it 😅",0,0,0,1,0,0,Cheerfulness,Amusement,Amused (based on emoji),,
angular/angular,issue,934325654,2021-10-05 11:33:54,gkalpak,"> I feel like we need some kind of test to prove out this fix??
Sigh 😞 There used to be a time when my word was enough 😛
Added a test 😃","[BLOCK QUOTE]. 
Sigh 😞 There used to be a time when my word was enough 😛 Added a test 😃",0,0,0,1,0,0,Cheerfulness,Jolliness,Joking -> Jolliness,,
angular/angular,issue,939870826,2021-10-11 9:53:00,Justinapeldoorn,@JoostK @petebacondarwin Thnx for the quick response. The suggested workaround is similar to our own workaround so thnx for that! Wanted to share the change in behavior ;),[USER] [USER] Thnx for the quick response. The suggested workaround is similar to our own workaround so thnx for that! Wanted to share the change in behavior ;),0,0,0,1,0,0,Cheerfulness,Happiness,Happy,,
Microsoft/TypeScript,issue,940648238,2021-10-12 4:29:41,ypresto,"Hello! Please let me know which milestone will this land to, when you know. Thank you. 😀","Hello! Please let me know which milestone will this land to, when you know. Thank you. 😀",0,0,0,1,0,0,Cheerfulness,Happiness,Happy,,
webpack/webpack,issue,942246719,2021-10-13 12:21:04,vidal7,"@alexander-akait, with the help of @tmeasday, I found a workaround.

See https://github.com/storybookjs/storybook/issues/14894#issuecomment-941906840","[USER] with the help of [USER] I found a workaround.

See [URL]",0,0,0,1,0,0,Cheerfulness,Joy,,,
Microsoft/TypeScript,issue,942642232,2021-10-13 19:21:25,andrewbranch,"No, but I think there might be a previous issue for that too 😆","No, but I think there might be a previous issue for that too 😆",0,0,0,1,0,0,Cheerfulness,amusement,,,
flutter/flutter,issue,948916151,2021-10-21 19:02:40,godofredoc,"This is great, news. Added the new version to the allow list!","This is great, news. Added the new version to the allow list!",0,0,0,1,0,0,Cheerfulness,Happiness,Happy,,
angular/angular,issue,949803809,2021-10-22 16:52:58,michaelurban,"@petebacondarwin Thanks for the reply. This response will swerve into off topic for this thread, but, of course I'd be happy to submit PRs.. My most pressing issue would be: https://github.com/angular/angular/issues/30477. Happy to discuss elsewhere.","[USER] Thanks for the reply. This response will swerve into off topic for this thread, but, of course I'd be happy to submit PRs.. My most pressing issue would be: [URL] Happy to discuss elsewhere.",0,0,0,1,0,0,Cheerfulness,Happiness,Happy,,
Microsoft/TypeScript,issue,955085840,2021-10-29 22:39:31,gabritto,"I think we should get opinions from people that do use snippets, I feel totally unequipped to give an opinion on this because I pretty much just never use snippets and I *click* things heh 😅","I think we should get opinions from people that do use snippets, I feel totally unequipped to give an opinion on this because I pretty much just never use snippets and I *click* things heh 😅",0,0,0,1,0,0,Cheerfulness,Amusement,Amusement,,
flutter/flutter,issue,956099297,2021-11-01 10:06:03,mamuseferha,Hi @psimondk thank you for filing this issue. Please check out this document https://flutter.dev/docs/resources/compatibility which explains the breaking changes and how the flutter team handles migration.,Hi [USER] thank you for filing this issue. Please check out this document [URL] which explains the breaking changes and how the flutter team handles migration.,0,0,0,1,0,0,Cheerfulness,Happiness,Happy,,
Microsoft/TypeScript,issue,956562099,2021-11-01 20:22:55,justingrant,"I'm happy to see continued enthusiasm for solving this problem. Keep the upvotes and (especially) constructive suggestions and PRs coming! Like many hard things, eventually I'm sure we'll help to get a solution built for this annoying gap in the TS developer experience.

> @sabetAI I think the reasonable explanation is that go to implementation has nothing to do with typescript, and as a typescript team they definitely want everyone use typescript, so they has less willingness to improve the javascript user experience. Actually if you delete all the type declaration files go to implementation works.

As far as I can tell, this impression is not correct. Almost all* packages that are written in TS, transpiled to JS, and published to npm don't work with ""Go To Implementation"" any more than packages originally written in JS.

I said ""almost all"" above because there is a way to make it work: using the [declarationMap](https://www.typescriptlang.org/tsconfig) tsconfig compiler option. But:

1. This setting is not enabled by default. IMHO it should be enabled by default whenever `sourceMap` is enabled. (Maybe also when `inlineSourceMap` is enabled?)
2. There is AFAICT no evangelism from the TS team (or anyone else!) about how package authors should enable this setting and include declaration map files when publishing their packages to npm.
3. There's also no push to get declaration map files into existing DefinitelyTyped packages. Could this be automated instead of relying on 1000s of type-package maintainers to do it?

Anyone who wants to see this problem get better could:

1. **Send a PR to try to change the default of `declarationMap` to be `true` if the `sourceMap` or `inlineSourceMap` option is `true`**. This minor change would probably have the biggest impact on this problem over time.

2. **Send a PR to update the TS docs to be more vehement that `declarationMap` should be enabled for all library packages**, and explaining why (""_because ""Go To Implementation"" in VS Code relies on declaration map files_""). These documentation changes will be crucial if (1) is not approved.

3. **Send a PR that adds or extends the TS docs with specific guidance for package authors**, including ""publish your sourcemaps"" and ""publish declaration maps"".

4. **Write a tool that will automatically add declaration map files to all compatible DefinitelyTyped packages**, and convince the DefinitelyTyped maintainers to merge the output of that tool into every compatible DefinitelyTyped package. Part of the work would be figuring out what ""compatible"" means and what packages' declaration maps can't be automated. Note that @weswigham above was pessimistic that this automation would be possible. But I wonder if things have improved since then to make automation possible? Or if it'd be possible for a large subset of packages? Here's what he said:

> There's no easy way to navigate to the JS or TS implementation of a TS type if that type is declared in a DefinitelyTyped package. (or other cases where .d.ts isn't colocated with the implementation)
>
> Technically if you wanted to hand spin some sourcemaps to go with a DT package, it could kinda work out already. But there's definitely no automated solution here. Any solution we do have is based on improving scenarios involving TS compiler output, at those are the only times when we can otuput the additional metadata required to make the correct associations between files. Some packages support this today, I believe - I was using the azure js sdk the other day and debugging some stuff, and was pleasantly surprised when I went to some definitions and discovered they were in the original source. So yeah, it works with TS sources that have up-to-date --declarationMaps output bundled with them.


5. **Send a PR to change the build actions for DefinitelyTyped to warn users if they try to add a new package that lacks a declaration map**. Not sure if this is something that can be done outside the DT maintainer team, depending on how the existing DT toolchain works. Someone who knows DT better than me could answer this.

The community has agency! If we want things to get better, any of the items above can make things better.

There's also IMHO another confusion with ""Go to Definition"" vs. ""Go To Type Definition"" are implemented. My preference would be for ""Go to Type Definition"" to navigate to the types and ""Go to Definition"" to navigate to the implementation. Not sure this is worth changing community expectations, though, given how long the current behavior has been in place. For more details, see: https://github.com/microsoft/TypeScript/issues/6209#issuecomment-525911553","I'm happy to see continued enthusiasm for solving this problem. Keep the upvotes and (especially) constructive suggestions and PRs coming! Like many hard things, eventually I'm sure we'll help to get a solution built for this annoying gap in the TS developer experience.

[BLOCK QUOTE].

As far as I can tell, this impression is not correct. Almost all* packages that are written in TS, transpiled to JS, and published to npm don't work with ""Go To Implementation"" any more than packages originally written in JS.

I said ""almost all"" above because there is a way to make it work: using the [declarationMap]([URL] tsconfig compiler option. But:

1. This setting is not enabled by default. IMHO it should be enabled by default whenever `sourceMap` is enabled. (Maybe also when `inlineSourceMap` is enabled?)
2. There is AFAICT no evangelism from the TS team (or anyone else!) about how package authors should enable this setting and include declaration map files when publishing their packages to npm.
3. There's also no push to get declaration map files into existing DefinitelyTyped packages. Could this be automated instead of relying on 1000s of type-package maintainers to do it?

Anyone who wants to see this problem get better could:

1. **Send a PR to try to change the default of `declarationMap` to be `true` if the `sourceMap` or `inlineSourceMap` option is `true`**. This minor change would probably have the biggest impact on this problem over time.

2. **Send a PR to update the TS docs to be more vehement that `declarationMap` should be enabled for all library packages**, and explaining why (""_because ""Go To Implementation"" in VS Code relies on declaration map files_""). These documentation changes will be crucial if (1) is not approved.

3. **Send a PR that adds or extends the TS docs with specific guidance for package authors**, including ""publish your sourcemaps"" and ""publish declaration maps"".

4. **Write a tool that will automatically add declaration map files to all compatible DefinitelyTyped packages**, and convince the DefinitelyTyped maintainers to merge the output of that tool into every compatible DefinitelyTyped package. Part of the work would be figuring out what ""compatible"" means and what packages' declaration maps can't be automated. Note that [USER] above was pessimistic that this automation would be possible. But I wonder if things have improved since then to make automation possible? Or if it'd be possible for a large subset of packages? Here's what he said:

[BLOCK QUOTE].


5. **Send a PR to change the build actions for DefinitelyTyped to warn users if they try to add a new package that lacks a declaration map**. Not sure if this is something that can be done outside the DT maintainer team, depending on how the existing DT toolchain works. Someone who knows DT better than me could answer this.

The community has agency! If we want things to get better, any of the items above can make things better.

There's also IMHO another confusion with ""Go to Definition"" vs. ""Go To Type Definition"" are implemented. My preference would be for ""Go to Type Definition"" to navigate to the types and ""Go to Definition"" to navigate to the implementation. Not sure this is worth changing community expectations, though, given how long the current behavior has been in place. For more details, see: [URL]",0,0,0,1,0,0,Cheerfulness,Joy,,,
webpack/webpack,issue,957148739,2021-11-02 6:59:25,HADMARINE,"@quick007 Lucky one! I guess one of the problematic package was updated.
Have a nice day! 😊",[USER] Lucky one! I guess one of the problematic package was updated. Have a nice day! 😊,0,0,0,1,0,0,Cheerfulness,Delight,Delight,1,
Microsoft/TypeScript,issue,961241626,2021-11-04 17:05:34,uhyo,"> They could still provide value in cases like the following:
> 

Indeed 😃

> Actually destructuring properties that don't exist isn't a runtime error; they just get assigned `undefined`

Yeah that's exactly why this suggestion is possible. But your example is a nested one, meaning that it might try destructuring undefined into `{ a, b }`, which should be prevented.","[BLOCK QUOTE]. 

Indeed 😃 

[BLOCK QUOTE]. 

Yeah that's exactly why this suggestion is possible. But your example is a nested one, meaning that it might try destructuring undefined into `{ a, b }`, which should be prevented.",0,0,0,1,0,0,Cheerfulness,Happiness,Happy,,
webpack/webpack,pull_request,120718903,2017-06-07 19:12:08,gdborton,"Yea, my first attempt was to use a set for `r.chunks`, and then convert it back at the end of the function w/ `Array.from` this was only marginally faster than the original code though. IIRC the `Array.from` calls were taking ~12 seconds.

I can create another profile showing that if you want.","Yea, my first attempt was to use a set for `r.chunks`, and then convert it back at the end of the function w/ `Array.from` this was only marginally faster than the original code though. IIRC the `Array.from` calls were taking ~12 seconds.

I can create another profile showing that if you want.",0,0,0,1,0,0,Contentment,-,Contentment,,
webpack/webpack,pull_request,262272600,2019-03-04 22:31:45,joeldenning,Prettier changed the indentation here to be sort of weird imo. I'm happy to change the style of the code here that generates the System.register string -- open to suggestions.,Prettier changed the indentation here to be sort of weird imo. I'm happy to change the style of the code here that generates the System.register string -- open to suggestions.,0,0,0,1,0,0,Contentment,-,Contentment,,
Microsoft/TypeScript,pull_request,350895784,2019-11-26 17:56:09,arcanis,"If there's a way to do that, now or in the next months, I'm all for it 👍
My anxiety is mostly that as you mentioned, there have been similar requests for a long time. Plugin systems are notoriously hard to get right, and you understandably want to be sure it won't bite you in the future. That's fine - but meanwhile, we're still left in a state where we have to rely on very creative solutions (a virtual filesystem!) where a simple integration would appear to work fine - within the constraint of our runtime, admittedly.
Anyway, I understand what you're saying and your roof, your rules. I'll be eagerly waiting for progress on #16607 then 🙂","If there's a way to do that, now or in the next months, I'm all for it 👍
My anxiety is mostly that as you mentioned, there have been similar requests for a long time. Plugin systems are notoriously hard to get right, and you understandably want to be sure it won't bite you in the future. That's fine - but meanwhile, we're still left in a state where we have to rely on very creative solutions (a virtual filesystem!) where a simple integration would appear to work fine - within the constraint of our runtime, admittedly.
Anyway, I understand what you're saying and your roof, your rules. I'll be eagerly waiting for progress on #16607 then 🙂",0,0,0,1,0,0,Contentment,,Contentment,,
webpack/webpack,pull_request,367998001,2020-01-17 15:37:38,sokra,I think both behaviors make sense for different use cases.,I think both behaviors make sense for different use cases.,0,0,0,1,0,0,Contentment,,Contentment,,
webpack/webpack,pull_request,407979876,2020-04-14 9:04:13,fi3ework,"Yes, it's very trick to detect the stop timing under current solution. I will take the idea mentioned above and add tests. 😊","Yes, it's very trick to detect the stop timing under current solution. I will take the idea mentioned above and add tests. 😊",0,0,0,1,0,0,Contentment,,Contentment,,
Microsoft/TypeScript,pull_request,429102122,2020-05-22 8:04:04,cljazouli,"Oh yeah, that sounds much better than deleting it. I just updated my code to deprecate it instead.","Oh yeah, that sounds much better than deleting it. I just updated my code to deprecate it instead.",0,0,0,1,0,0,Contentment,,Contentment,,
webpack/webpack,pull_request,465686582,2020-08-05 12:22:39,mpeyper,"Could do. I considered it but thought the tests that are already quite loopy would get harder to follow what's going on.

Happy to update if you prefer.","Could do. I considered it but thought the tests that are already quite loopy would get harder to follow what's going on.

Happy to update if you prefer.",0,0,0,1,0,0,Contentment,-,Content,1,
Microsoft/TypeScript,pull_request,497734327,2020-09-30 19:00:48,sandersn,"After our discussion, I think it's OK to leave this; there aren't any equivalent helpers already, and it's used in quite a few places throughout the checker already.

It might be worth a cleanup pass later, to holistically find a replacement, but that would be a lot of work.","After our discussion, I think it's OK to leave this; there aren't any equivalent helpers already, and it's used in quite a few places throughout the checker already.

It might be worth a cleanup pass later, to holistically find a replacement, but that would be a lot of work.",0,0,0,1,0,0,Contentment,-,Content,,
Microsoft/TypeScript,pull_request,504865825,2020-10-14 17:54:25,elibarzilay,"Indeed I missed that, but not sure how it didn't affect the generated code... In any case -- fixed.","Indeed I missed that, but not sure how it didn't affect the generated code... In any case -- fixed.",0,0,0,1,0,0,Contentment,-,Contentment,,
Microsoft/TypeScript,pull_request,546152955,2020-12-18 23:52:57,mjbvz,"Sounds good to me. Dev containers definitely make things easy once you have VS Code and docker setup, and with Codespaces you can just connect and the container will automatically be setup for you","Sounds good to me. Dev containers definitely make things easy once you have VS Code and docker setup, and with Codespaces you can just connect and the container will automatically be setup for you",0,0,0,1,0,0,Contentment,-,Contentment,,
Microsoft/TypeScript,pull_request,560580809,2021-01-19 23:56:54,armanio123,I looked deeper into it and now should be fixed. All scenarios on the test are passing as expected.,I looked deeper into it and now should be fixed. All scenarios on the test are passing as expected.,0,0,0,1,0,0,Contentment,,,,
Microsoft/TypeScript,pull_request,612068880,2021-04-13 1:40:09,JoshuaKGoldberg,That makes it easier for me 🤠,That makes it easier for me 🤠,0,0,0,1,0,0,Contentment,pleasure,,,
angular/angular,pull_request,628253160,2021-05-07 14:26:34,petebacondarwin,"And indeed it did fail, so that is good: https://app.circleci.com/pipelines/github/angular/angular/32617/workflows/1923378c-7ebc-4f13-8b78-31e20ccef345/jobs/983981/parallel-runs/1/steps/1-106","And indeed it did fail, so that is good: [URL]",0,0,0,1,0,0,Contentment,,,,
angular/angular,pull_request,629542983,2021-05-10 17:29:34,devversion,"Yeah, that would also work for me 👍","Yeah, that would also work for me 👍",0,0,0,1,0,0,Contentment,,,,
angular/angular,pull_request,633892971,2021-05-17 21:54:24,josephperrott,"I agree, I personally don't love having it, but felt it would be easier to perform the angular-cli migration to using the release tool. I suppose I should probably just put in the effort to create the changelog for CLI ahead of time.","I agree, I personally don't love having it, but felt it would be easier to perform the angular-cli migration to using the release tool. I suppose I should probably just put in the effort to create the changelog for CLI ahead of time.",0,0,0,1,0,0,Contentment,-,Contentment,,
angular/angular,pull_request,635656005,2021-05-19 23:54:07,josephperrott,I think we can just leave it there because we will no longer create new tags with the `v` but we can support discovering the previous tags indefinitely.,I think we can just leave it there because we will no longer create new tags with the `v` but we can support discovering the previous tags indefinitely.,0,0,0,1,0,0,Contentment,,,,
flutter/flutter,pull_request,642112555,2021-05-30 18:36:45,Cali0707,Thank you for letting me know! I have fixed this now.,Thank you for letting me know! I have fixed this now.,0,0,0,1,0,0,Contentment,-,Contentment,,
flutter/flutter,pull_request,646725531,2021-06-07 15:53:23,prefanatic,"@goderbauer Thanks, I've rebased the PR and pushed, looks green.","[USER] Thanks, I've rebased the PR and pushed, looks green.",0,0,0,1,0,0,Contentment,-,Contentment,,
Microsoft/TypeScript,pull_request,653735100,2021-06-17 16:39:14,andrewbranch,"```ts
interface I1 {
cssVariable: `--${string}`;
}
const a: I1 = {};
```
I would probably just throw that into the `string` case and seed it with an empty string. No need to try to come up with a placeholder that actually fits the template 😄","[TRIPLE QUOTE].
I would probably just throw that into the `string` case and seed it with an empty string. No need to try to come up with a placeholder that actually fits the template 😄",0,0,0,1,0,0,Contentment,,Contentment,,
angular/angular,pull_request,693160039,2021-08-20 19:02:40,atscott,"I wasn't sure, but this does work. Added a test.","I wasn't sure, but this does work. Added a test.",0,0,0,1,0,0,Contentment,,,,
angular/angular,pull_request,694222620,2021-08-23 18:46:40,dgp1130,Glad we're able to remove this now!,Glad we're able to remove this now!,0,0,0,1,0,0,Contentment,,,,
angular/angular,pull_request,700594086,2021-09-01 21:42:18,dario-piotrowicz,"as I said I am not completely sure about it, but yes it doesn't sound terrible, and if you say it's better that way then I will just go for it then :slightly_smiling_face::+1:","as I said I am not completely sure about it, but yes it doesn't sound terrible, and if you say it's better that way then I will just go for it then :slightly_smiling_face::+1:",0,0,0,1,0,0,Contentment,,Contentment,,
angular/angular,pull_request,716013640,2021-09-25 8:51:51,gkalpak,"It shouldn't matter, because we pin to specific version via the lockfile anyway, so either way is fine.","It shouldn't matter, because we pin to specific version via the lockfile anyway, so either way is fine.",0,0,0,1,0,0,Contentment,,,,
Microsoft/TypeScript,pull_request,721316882,2021-10-04 12:30:41,stkevintan,Got it !,Got it !,0,0,0,1,0,0,Contentment,,Contentment,,
flutter/flutter,pull_request,743211174,2021-11-04 21:19:49,christopherfujino,"Pretty much anything other than ToolExit will show up in crash logging. You could throw a bare `Exception`, as we do elsewhere in this file, I'm not picky :)","Pretty much anything other than ToolExit will show up in crash logging. You could throw a bare `Exception`, as we do elsewhere in this file, I'm not picky :)",0,0,0,1,0,0,Contentment,,,,
webpack/webpack,issue,824998066,2021-04-22 16:34:20,alexander-akait,":star: Feel free to feedback, you can always ask questions here https://github.com/webpack/webpack/discussions",":star: Feel free to feedback, you can always ask questions here [URL]",0,0,0,1,0,0,Contentment,,Contentment,,
webpack/webpack,issue,870881627,2021-06-29 20:08:57,gpoitch,"I'm having some success simply applying both plugins. Not sure of any unintended side-effects yet:

```js
const { DeterministicChunkIdsPlugin, NamedChunkIdsPlugin } = require('webpack').ids

class NamedDeterministicChunkIdsPlugin {
 apply(compiler) {
 // Apply named chunks plugin (assigns name to chunk.id)
 new NamedChunkIdsPlugin().apply(compiler)

 compiler.hooks.compilation.tap('NamedDeterministicChunkIdsPlugin', (compilation) => {
 compilation.hooks.chunkIds.tap('NamedDeterministicChunkIdsPlugin', (chunks) => {
 chunks.forEach((chunk) => {
 chunk.name = chunk.id // Store the name on another field
 chunk.id = null // null out id so the next plugin will reassign it
 })
 })
 })

 // Apply deterministic chunks plugin (reassigns chunk.id to a short numeric id)
 new DeterministicChunkIdsPlugin().apply(compiler)
 }
}
```","I'm having some success simply applying both plugins. Not sure of any unintended side-effects yet:

[TRIPLE QUOTE].",0,0,0,1,0,0,Contentment,,Contentment,,
webpack/webpack,issue,893548823,2021-08-05 15:24:36,gretzkiy,"@alexander-akait Sounds reasonable, thanks. However could you please provide the link to the issue you mentioned?","[USER] Sounds reasonable, thanks. However could you please provide the link to the issue you mentioned?",0,0,0,1,0,0,Contentment,,Contentment,,
Microsoft/TypeScript,issue,899511728,2021-08-16 13:29:05,Kingwl,"Basically looks good.
@sandersn Would you mind tell us how could we use baseline to test the inlay hints？It's painful for now.","Basically looks good.
@sandersn Would you mind tell us how could we use baseline to test the inlay hints？It's painful for now.",0,0,0,1,0,0,Contentment,,Looks good -> content,,
Microsoft/TypeScript,issue,903220818,2021-08-22 6:24:51,ZYSzys,"> @ZYSzys Do you have time to find the root cause of this bug? If not I'd like to close the PR to keep the number of open PRs manageable.
@sandersn Maybe I don't have too much time to investigate it deeply, it's ok to close the PR.","[BLOCK QUOTE].
@sandersn Maybe I don't have too much time to investigate it deeply, it's ok to close the PR.",0,0,0,1,0,0,Contentment,-,Contentment,,
angular/angular,issue,919794646,2021-09-15 8:05:55,gkalpak,No worries! It looks great now 🚀,No worries! It looks great now 🚀,0,0,0,1,0,0,Contentment,,,,
angular/angular,issue,923715301,2021-09-21 7:29:56,alan-agius4,The above approvals should be enough since this is a lock file change.,The above approvals should be enough since this is a lock file change.,0,0,0,1,0,0,Contentment,,,,
Microsoft/TypeScript,issue,926852403,2021-09-24 18:55:29,delucis,"OK, cool, that‘s kind of what I meant by “squatting” on a standard lib name, but reframed like this, perhaps that’s actually an intended rather than hacky use — you’re overriding/augmenting an existing lib, so that does fall into the #45771 use case. The fact this requires two configuration points across separate files that need to be kept in sync does still introduce more friction than I’d like, and the fact that tsconfig doesn’t clearly show the actual lib in use _may_ be a source of confusion, but you can’t have everything in life 😃.

Thanks for taking the time to consider this anyway!","OK, cool, that‘s kind of what I meant by “squatting” on a standard lib name, but reframed like this, perhaps that’s actually an intended rather than hacky use — you’re overriding/augmenting an existing lib, so that does fall into the #45771 use case. The fact this requires two configuration points across separate files that need to be kept in sync does still introduce more friction than I’d like, and the fact that tsconfig doesn’t clearly show the actual lib in use _may_ be a source of confusion, but you can’t have everything in life 😃.

Thanks for taking the time to consider this anyway!",0,0,0,1,0,0,Contentment,-,Content,1,
Microsoft/TypeScript,issue,936532808,2021-10-06 15:45:00,sandersn,"This is an inconsistency in our iterator checking; with no contextual type, the hard-coded TNext default is `unknown`; with a defective, `next`-free contextual type, the hard-coded default is `any` instead.
We should maybe consider fixing this, but only if it doesn't break anybody, or if anybody thinks the current state is bad enough.
In any case, I think this change is fine to ship as-is.","This is an inconsistency in our iterator checking; with no contextual type, the hard-coded TNext default is `unknown`; with a defective, `next`-free contextual type, the hard-coded default is `any` instead.
We should maybe consider fixing this, but only if it doesn't break anybody, or if anybody thinks the current state is bad enough.
In any case, I think this change is fine to ship as-is.",0,0,0,1,0,0,Contentment,,,,
flutter/flutter,issue,944920839,2021-10-16 14:08:41,zetechmoy,"> > @camsim99 is working on the fix in [flutter/plugins#4423](https://github.com/flutter/plugins/pull/4423)
> 
> How can you pull this ? Could you help me? I try to declare on pubspec.yaml like this:
> 
> ```
> camera:
> git:
> url: https://github.com/camsim99/plugins.git
> path: packages/camera/camera
> ref: master
> ```
> 
> but i get the same error as before

This work for me, as a temporary solution of course : 
```
dependencies:
 ...
 # camera: ^0.9.4+2
 camera:
 git:
 url: https://github.com/camsim99/plugins.git
 path: packages/camera/camera
 ref: issue_89578_dev
 ...
```","[BLOCK QUOTE]. 

This work for me, as a temporary solution of course : 

[TRIPLE QUOTE].",0,0,0,1,0,0,Contentment,-,Contentment,,
flutter/flutter,issue,946413492,2021-10-19 6:45:39,danagbemava-nc,"> It works! I will use master channel at present.

Based on this comment, I feel it is safe to close this issue as fixed. 

As such I will be closing it. 

If you still experience this issue, kindly leave a comment and I will reopen.

Thank you","[BLOCK QUOTE]. 

Based on this comment, I feel it is safe to close this issue as fixed. 

As such I will be closing it. 

If you still experience this issue, kindly leave a comment and I will reopen. 

Thank you",0,0,0,1,0,0,Contentment,-,Contentment,1,
flutter/flutter,issue,947807081,2021-10-20 15:56:08,lukepighetti,"That's a tough one to get behind. But if that's where we draw the line, I can respect that.","That's a tough one to get behind. But if that's where we draw the line, I can respect that.",0,0,0,1,0,0,Contentment,,,,
Microsoft/TypeScript,issue,949056793,2021-10-21 22:45:49,amcasey,"Done for now. Generally seems pretty solid. Nice work, @gabritto!","Done for now. Generally seems pretty solid. Nice work, [USER]",0,0,0,1,0,0,Contentment,,,,
Microsoft/TypeScript,issue,949082529,2021-10-21 23:47:02,andrewbranch,"Yeah, if the real world code is fast then I’m happy. Just wanted to make sure it was checked against the latest changes.","Yeah, if the real world code is fast then I’m happy. Just wanted to make sure it was checked against the latest changes.",0,0,0,1,0,0,Contentment,,,,
Microsoft/TypeScript,issue,949958480,2021-10-22 21:04:59,sandersn,"From the design discussion today, we think this is a fine change to make, but will result in such a small improvement that it's not worth the churn.
In particular, it fixes the precise repro from #45798, but I doubt that it fixes the original code since nobody is likely to write literal numbers in a template literal slot.","From the design discussion today, we think this is a fine change to make, but will result in such a small improvement that it's not worth the churn.
In particular, it fixes the precise repro from #45798, but I doubt that it fixes the original code since nobody is likely to write literal numbers in a template literal slot.",0,0,0,1,0,0,Contentment,-,Contentment,,
angular/angular,issue,952616746,2021-10-27 7:26:27,SomeGuyWhoOpenSources,I'd be happy to take a look at this as well. I have a sample Angular project that I could try to replicate the issue in. What type of files are you uploading or does it occur on all files?,I'd be happy to take a look at this as well. I have a sample Angular project that I could try to replicate the issue in. What type of files are you uploading or does it occur on all files?,0,0,0,1,0,0,Contentment,-,Content,1,
angular/angular,issue,954811289,2021-10-29 14:56:40,DimitriTsikaridze,@gkalpak The issue is fixed. Looks good.👏,[USER] The issue is fixed. Looks good.👏,0,0,0,1,0,0,Contentment,,,,
angular/angular,issue,960145697,2021-11-03 21:44:20,dario-piotrowicz,"@zygimantas you are too kind
As I said I cannot guarantee this to be the right answer, but it's what I came up by checking the behaviour and the code, and it does seem to make enough sense to me
I'm very happy that you've found it useful :slightly_smiling_face:","[USER] you are too kind
As I said I cannot guarantee this to be the right answer, but it's what I came up by checking the behaviour and the code, and it does seem to make enough sense to me
I'm very happy that you've found it useful :slightly_smiling_face:",0,0,0,1,0,0,Contentment,,Contentment,,
angular/angular,issue,960321886,2021-11-04 0:25:29,josephperrott,This issue on angular.io has been resolved.,This issue on angular.io has been resolved.,0,0,0,1,0,0,Contentment,,,,
angular/angular,issue,912949518,2021-09-04 10:25:35,petebacondarwin,"I think it is definitely possible to write a migration for these cases, but I don't think it is trivial. So we would need to plan the work alongside prioritising other work.","I think it is definitely possible to write a migration for these cases, but I don't think it is trivial. So we would need to plan the work alongside prioritising other work.",0,0,0,1,0,0,Opitmism,hope,,,
webpack/webpack,pull_request,86189573,2016-11-02 16:53:19,amsdamsgram,"Arf :/
@sokra Should I make a PR to fix it?","Arf :/
@sokra Should I make a PR to fix it?",0,0,0,1,0,0,Optimism,eagerness,,,
webpack/webpack,pull_request,183173801,2018-04-20 21:28:47,mohsen1,I'll work on it tomorrow,I'll work on it tomorrow,0,0,0,1,0,0,Optimism,Eagerness,Eagerness,,
webpack/webpack,pull_request,483122434,2020-09-03 16:53:42,alexander-akait,Can you put here test case? I will help,Can you put here test case? I will help,0,0,0,1,0,0,Optimism,Eagerness,Eagerness (to help),1,
webpack/webpack,pull_request,616418092,2021-04-20 7:29:01,sokra,"Hopefully these changes will lead to `export { LoaderDefintion }` being generated...

But maybe there is also a bug in the type generation. We didn't export generic types yet...","Hopefully these changes will lead to `export { LoaderDefintion }` being generated...

But maybe there is also a bug in the type generation. We didn't export generic types yet...",0,0,0,1,0,0,Optimism,Hope,Hope,,
angular/angular,pull_request,639680771,2021-05-26 12:33:59,swseverance,@petebacondarwin I made the suggested changes. thanks!,[USER] I made the suggested changes. thanks!,0,0,0,1,0,0,Optimism,,Optimism,,
Microsoft/TypeScript,pull_request,644306715,2021-06-02 20:43:08,sandersn,"I can think of a couple ways to fix this
- Always return all errors, then have `tsc` have a filter when displaying errors for JS files. This would add errors to all other API consumers, though.
- Give the language service a separate way to request unchecked JS errors. The checker will have to store these errors separately and the language service will have to add them late.
- Possibly: Not report these errors in the ""errors in closed files"" list. But I don't know if that would be what users of that feature expect.

Opinions? Ideas?

I'm pretty sure that this feature is going to stick around and grow, so I'd like for it to be easier to use than to not use. Specifically, it's annoying if the future status quo for the language service is to request diagnostics twice, once for unchecked JS and again for everything else.","I can think of a couple ways to fix this
- Always return all errors, then have `tsc` have a filter when displaying errors for JS files. This would add errors to all other API consumers, though.
- Give the language service a separate way to request unchecked JS errors. The checker will have to store these errors separately and the language service will have to add them late.
- Possibly: Not report these errors in the ""errors in closed files"" list. But I don't know if that would be what users of that feature expect.

Opinions? Ideas?

I'm pretty sure that this feature is going to stick around and grow, so I'd like for it to be easier to use than to not use. Specifically, it's annoying if the future status quo for the language service is to request diagnostics twice, once for unchecked JS and again for everything else.",0,0,0,1,0,0,Optimism,Hope,Optimism,,
angular/angular,pull_request,654733052,2021-06-19 1:58:02,AndrewKushnir,Thanks for additional info 👍 Let's keep it.,Thanks for additional info 👍 Let's keep it.,0,0,0,1,0,0,Optimism,Hope,"Optimism, Hope",,
flutter/flutter,pull_request,666441728,2021-07-08 18:51:38,chunhtai,"I am not so certain about why we need to remove this code. If this is indeed a bug fixes, we should have a test for this.","I am not so certain about why we need to remove this code. If this is indeed a bug fixes, we should have a test for this.",0,0,0,1,0,0,Optimism,"hope, eagerness",,,
flutter/flutter,pull_request,672677368,2021-07-19 22:35:59,gspencergoog,"I agree, they're not very comprehensive. They are supposed to be smoke tests to make sure that we're generating at least a minimum of the output for each of the platforms without the test being too fragile.

I added them because some symbols I was depending on have disappeared/changed names in the past, and because we didn't have any tests at all for the keygen script. Just having a test file makes it more likely that tests will get written, even if it were just ""exit(0)"".","I agree, they're not very comprehensive. They are supposed to be smoke tests to make sure that we're generating at least a minimum of the output for each of the platforms without the test being too fragile.

I added them because some symbols I was depending on have disappeared/changed names in the past, and because we didn't have any tests at all for the keygen script. Just having a test file makes it more likely that tests will get written, even if it were just ""exit(0)"".",0,0,0,1,0,0,Optimism,-,Optimistic,1,
Microsoft/TypeScript,pull_request,674339040,2021-07-21 20:55:06,andrewbranch,"In fact, I’m confident that this comment is the reason I had it in my head that I should not check the cancellation token tens of thousands of times in a row in a loop.","In fact, I’m confident that this comment is the reason I had it in my head that I should not check the cancellation token tens of thousands of times in a row in a loop.",0,0,0,1,0,0,Optimism,Hope,Confident -> Hopeful,,
angular/angular,pull_request,676946399,2021-07-26 21:09:34,dario-piotrowicz,"Please have a look, I hope it's fine now :slightly_smiling_face:","Please have a look, I hope it's fine now :slightly_smiling_face:",0,0,0,1,0,0,Optimism,hope,,,
angular/angular,pull_request,678610731,2021-07-28 19:57:27,atscott,Adding a negative test case would be a good idea too. i.e. `should not produce banana in a box warning if written correctly`,Adding a negative test case would be a good idea too. i.e. `should not produce banana in a box warning if written correctly`,0,0,0,1,0,0,Optimism,,Optimism,,
flutter/flutter,pull_request,679543716,2021-07-29 23:16:30,CaseyHillers,"Thanks, re-added! One day my LSC script will support not overriding these :)","Thanks, re-added! One day my LSC script will support not overriding these :)",0,0,0,1,0,0,Optimism,,Optimism,,
flutter/flutter,pull_request,686244585,2021-08-10 19:01:34,Piinks,"Yes, thank you! I just updated with all of the constants from Android together. Hopefully more readable. :)","Yes, thank you! I just updated with all of the constants from Android together. Hopefully more readable. :)",0,0,0,1,0,0,Optimism,Hope,Hopeful,1,
angular/angular,pull_request,699604800,2021-08-31 19:14:20,AndrewKushnir,"It's be great to add a comment here to explain why we strip `index.html`. We do remove the `index.html` once there is nothing else at the end of the URL string, it'd be great to include that into the doc (why we do that).
Also we can probably add tests for cases like `http://domain-a.com?goto=http://domain-b.com/index.html` to verify that we do not remove `index.html` if it's in the GET params part of the URL.","It's be great to add a comment here to explain why we strip `index.html`. We do remove the `index.html` once there is nothing else at the end of the URL string, it'd be great to include that into the doc (why we do that).
Also we can probably add tests for cases like `[URL] to verify that we do not remove `index.html` if it's in the GET params part of the URL.",0,0,0,1,0,0,Optimism,Hope,Hope,,
angular/angular,pull_request,716553951,2021-09-27 10:16:05,petebacondarwin,"I think it might be worth, given that this is a public API, explaining what it means to create an NgModule without providing a parent injector. AFAICT it uses `getNullInjector()` instead.","I think it might be worth, given that this is a public API, explaining what it means to create an NgModule without providing a parent injector. AFAICT it uses `getNullInjector()` instead.",0,0,0,1,0,0,Optimism,Hope,Hoping,,
flutter/flutter,pull_request,720548093,2021-10-01 21:23:44,christopherfujino,I don't know that we ever run this command with asserts. Perhaps this should be an explicit integration test?,I don't know that we ever run this command with asserts. Perhaps this should be an explicit integration test?,0,0,0,1,0,0,Optimism,Hope,Hoping,,
webpack/webpack,issue,801994480,2021-03-18 14:54:37,KENNYSOFT,"Cool, let me study awhile for write js test code.","Cool, let me study awhile for write js test code.",0,0,0,1,0,0,Optimism,Eagerness,Eagerness,,
webpack/webpack,issue,802483839,2021-03-19 2:24:41,olee,"Sorry for the wait.
What exactly would you need from me?","Sorry for the wait.
What exactly would you need from me?",0,0,0,1,0,0,Optimism,Eagerness,Eagerness (to help),,
webpack/webpack,issue,814679266,2021-04-07 7:35:17,doberkofler,"I'm happy to help, if you could share what kind of error in our code you suspect is causing this problem.
All I noticed, is the difference in how the generated code references the imported modules:
The problem identifies the modules by using a (local) variable `types` and the variable seems to be undefined:
```js
(0,types/* checkIsNonemptyString */.hy)(buttonName, 'buttonName');
```
But in locations that do not cause an exception functions from the same `types.ts` module are referenced by using `Source_ODS_types__WEBPACK_IMPORTED_MODULE_1__`:
```js
(0,Source_ODS_types__WEBPACK_IMPORTED_MODULE_1__/* .checkIsString */ .Nk)(stringToConvert, 'stringToConvert');
```","I'm happy to help, if you could share what kind of error in our code you suspect is causing this problem. 
All I noticed, is the difference in how the generated code references the imported modules: 
The problem identifies the modules by using a (local) variable `types` and the variable seems to be undefined: 
[TRIPLE QUOTE]. 
But in locations that do not cause an exception functions from the same `types.ts` module are referenced by using `Source_ODS_types__WEBPACK_IMPORTED_MODULE_1__`: 
[TRIPLE QUOTE].",0,0,0,1,0,0,Optimism,Eagerness,Eagerness,1,
webpack/webpack,issue,838829883,2021-05-11 16:58:49,alexander-akait,You can format this issue as bug report or create a new and ping me,You can format this issue as bug report or create a new and ping me,0,0,0,1,0,0,Optimism,Eagerness,Eagerness (to help),,
webpack/webpack,issue,871346978,2021-06-30 12:08:08,alexander-akait,Interesting solutions :smile: but should work without problems :smile:,Interesting solutions :smile: but should work without problems :smile:,0,0,0,1,0,0,Optimism,Hope,Hopeful,,
angular/angular,issue,873413245,2021-07-03 14:09:17,gkalpak,"Thx for the insights, everyone. It is not clear what the specific issues are that would prevent an Angular Component from being exported as a Custom Element and whether they are generic or related to the specific project setup. As such, this issue is not really actionable for us.

I believe the main underlying problem is being able to easily consume Angular Elements in non-Angular apps, for which we don't have a great solution yet. This is tracked in other GitHub issues though (such as #25421 and #33942), so let's close this one and track the problem there.","Thx for the insights, everyone. It is not clear what the specific issues are that would prevent an Angular Component from being exported as a Custom Element and whether they are generic or related to the specific project setup. As such, this issue is not really actionable for us.

I believe the main underlying problem is being able to easily consume Angular Elements in non-Angular apps, for which we don't have a great solution yet. This is tracked in other GitHub issues though (such as #25421 and #33942), so let's close this one and track the problem there.",0,0,0,1,0,0,Optimism,,Optimism,,
webpack/webpack,issue,875412183,2021-07-07 8:42:08,xtuc,"@sokra hey, I'm planning to fix the test, just it will take some time. thanks","[USER] hey, I'm planning to fix the test, just it will take some time. thanks",0,0,0,1,0,0,Optimism,Eagerness,Eagerness,1,
angular/angular,issue,881783556,2021-07-17 0:26:50,alxhub,"I don't think we will address this feature request specifically, but we do plan to simplify our bootstrapping API, and will consider this redundancy when we do.","I don't think we will address this feature request specifically, but we do plan to simplify our bootstrapping API, and will consider this redundancy when we do.",0,0,0,1,0,0,Optimism,hope,,,
angular/angular,issue,888568205,2021-07-28 19:35:47,1-0-1,"> To help us to diagnose this bug, please could you provide a reproduction in Stackblitz that we can run?

I'm still trying to determine which module it is coming from, but I pointed right at the place where the error is being thrown which should be easy enough to fix.","[BLOCK QUOTE].

I'm still trying to determine which module it is coming from, but I pointed right at the place where the error is being thrown which should be easy enough to fix.",0,0,0,1,0,0,Optimism,hope,,,
Microsoft/TypeScript,issue,912886132,2021-09-04 1:40:15,Kingwl,I guess it's might helpful to @stkevintan.,I guess it's might helpful to [USER],0,0,0,1,0,0,Optimism,,Optimism,,
webpack/webpack,issue,912959563,2021-09-04 11:40:04,alexander-akait,"Let's keep, we should improve this","Let's keep, we should improve this",0,0,0,1,0,0,Optimism,Eagerness,Eagerness,,
webpack/webpack,issue,919265559,2021-09-14 15:33:01,alexander-akait,"If you need help, please provide full steps to reproduce","If you need help, please provide full steps to reproduce",0,0,0,1,0,0,Optimism,Eagerness,Eagerness,,
Microsoft/TypeScript,issue,920476873,2021-09-16 0:13:22,andrewbranch,"> Do we need to check that all elements of the `assert` property of the second argument have type `string`?
Let’s try to get this in this PR if possible. Preventing runtime errors seems high priority to me. I personally like the idea of an open-ended interface, but I think that warrants some design discussion to make sure we’re all on the same page. Let’s discuss at Friday’s meeting.","[BLOCK QUOTE].
Let’s try to get this in this PR if possible. Preventing runtime errors seems high priority to me. I personally like the idea of an open-ended interface, but I think that warrants some design discussion to make sure we’re all on the same page. Let’s discuss at Friday’s meeting.",0,0,0,1,0,0,Optimism,Eagerness,Eagerness,,
Microsoft/TypeScript,issue,920671743,2021-09-16 7:50:25,heyAyushh,"Hey @orta, I am a typescript beginner and want to contribute here, could you guide me where to start?","Hey [USER] I am a typescript beginner and want to contribute here, could you guide me where to start?",0,0,0,1,0,0,Optimism,Eagerness,Eagerness,,
Microsoft/TypeScript,issue,922004437,2021-09-17 18:41:16,markjm,"Anyway, don't want to join the back and forth of that other thread. We may very likely utilize my linked patch for our migration - if so, I will report back on whether we found it to be as useful as I suspect it will be. Hopefully that might provide the conversation with a real-world case study of these changes","Anyway, don't want to join the back and forth of that other thread. We may very likely utilize my linked patch for our migration - if so, I will report back on whether we found it to be as useful as I suspect it will be. Hopefully that might provide the conversation with a real-world case study of these changes",0,0,0,1,0,0,Optimism,Hope,Optimism,,
angular/angular,issue,924308969,2021-09-21 19:16:35,dylhunn,"I'll have a look at this later this afternoon, sorry I didn't see the mention yesterday!","I'll have a look at this later this afternoon, sorry I didn't see the mention yesterday!",0,0,0,1,0,0,Optimism,"Hope, Eagerness","Hope, Eagerness",,
Microsoft/TypeScript,issue,924656052,2021-09-22 7:20:10,Juraj-Masiar,"If I understand the problem correctly, the issue with the ""else"" branch.
Sure, if the number is finite then it's obviously not undefined, but if it's not finite, what is the type? What type should TypeScript use in the else branch?
```ts
function isFinite(x: number): x is number {
return Number.isFinite(x);
}
// let's say you have a number that can be finite, or not
const x: number = Math.random() < 0.5 ? Infinity : 42;
if (isFinite(x)) {
const finiteNumber: number = x;
}
else {
const neverNumber: never = x; // WHAT??? Exactly! The ""x"" has now ""never"" type :(
}
```
[See in the playground.](https://www.typescriptlang.org/play?#code/GYVwdgxgLglg9mABDAzgMRmGUCmAKADwC5EwQBbAIxwCcBKEg5FUi6mxAbwFgAoRRDRxQQNJADk2tAHSoMWXIToBuPgF8+Aek2IANsIDkLFAEMAnojNwQiABYmAbjkQnWVWoij2oiCCaTUiMCY2DgANIhwHGBwUHwQCCg+xG7siAC8iACyJl7SNP4AJnDkeHSIADyIAAzSAKyIAPyIAJJgwQoWJAAsAEyqvDDAiHhyIYoEdOU8-AK+iT4doZLuNCRkqxmIBAMavDi6KM4zc-NgSaQ4TjQr7OtXHpk7c9qIAOoAEgCCACqN-4gAKIEEzQXRmACEiB+tmcACICHC7CYWDEAO6IOFgB40JFQMwAB2cRDw6j4fCAA)
But I agree it's stupid :(, hopefully will be fixed soon by #15048","If I understand the problem correctly, the issue with the ""else"" branch.
Sure, if the number is finite then it's obviously not undefined, but if it's not finite, what is the type? What type should TypeScript use in the else branch?
[TRIPLE QUOTE].
[See in the playground.]([URL]
But I agree it's stupid :(, hopefully will be fixed soon by #15048",0,0,0,1,0,0,Optimism,Hope,,,
Microsoft/TypeScript,issue,934961472,2021-10-05 22:41:12,andrewbranch,"The error itself is working as intended, with the caveat that we’re still working on the proper way to work around it.","The error itself is working as intended, with the caveat that we’re still working on the proper way to work around it.",0,0,0,1,0,0,Optimism,Hope,Optimism,,
angular/angular,issue,935287859,2021-10-06 2:31:40,DmitryEfimenko,This didn't make it into v12. Maybe v13? 🤞,This didn't make it into v12. Maybe v13? 🤞,0,0,0,1,0,0,Optimism,,Optimism,,
Microsoft/TypeScript,issue,939143685,2021-10-08 22:13:09,andrewbranch,Come back with some data to back it up if you want us to consider it 🙂,Come back with some data to back it up if you want us to consider it 🙂,0,0,0,1,0,0,Optimism,Eagerness,Eagerness (to help),,
angular/angular,issue,944255137,2021-10-15 12:24:08,petebacondarwin,No! Not a mistake! Just an extra bonus feature that you can implement.,No! Not a mistake! Just an extra bonus feature that you can implement.,0,0,0,1,0,0,Optimism,Eagerness,Eagerness (to implement a feature),,
flutter/flutter,issue,945670969,2021-10-18 11:27:42,Rainmaker44,"I hope these will help you

<details>
<summary>Camera screen (ArPoisPage)</summary>

```
import 'dart:async';
import 'package:camera/camera.dart';
import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';

const ANGLE = 15;

class ArPoisPage extends StatefulWidget {
 const ArPoisPage({
 Key? key,
 }) : super(key: key);
 @override
 _ArPoisPageState createState() => _ArPoisPageState();
}

class _ArPoisPageState extends State<ArPoisPage> with WidgetsBindingObserver {
 CameraController? _controller;
 late Future<void> _initializeControllerFuture;
 bool isCameraInitializing = false;

 List<CameraDescription> _cameras = [];

 @override
 void initState() {
 super.initState();
 WidgetsBinding.instance!.addObserver(this);
 init();
 }

 init() async {
 setState(() {
 isCameraInitializing = true;
 });
 final cameras = await availableCameras();
 setState(() {
 _cameras = cameras;
 });
 if (cameras.isNotEmpty) {
 final firstCamera = cameras.first;
 _controller = CameraController(
 firstCamera,
 ResolutionPreset.medium,
 );
 }

 setState(() {
 isCameraInitializing = false;
 });
 }

 @override
 void dispose() {
 WidgetsBinding.instance!.removeObserver(this);

 super.dispose();
 }

 @override
 Widget build(BuildContext context) {
 return Scaffold(
 body: Stack(
 fit: StackFit.expand,
 children: <Widget>[
 _controller == null || !_controller!.value.isInitialized
 ? Center(child: const CircularProgressIndicator())
 : CameraWidget(
 controller: _controller!,
 initializeControllerFuture: _initializeControllerFuture,
 ),
 Positioned(
 top: MediaQuery.of(context).padding.top,
 child: Container(
 decoration: BoxDecoration(
 shape: BoxShape.circle,
 color: Theme.of(context).primaryColor),
 child: BackButton(
 color: Colors.white,
 onPressed: () {
 Navigator.of(context).pop();
 },
 ),
 ),
 ),
 Builder(builder: (context) {
 return AnimatedOpacity(
 duration: Duration(milliseconds: 200),
 opacity: 1,
 child: GestureDetector(
 child: Stack(
 children: [FlutterLogo()],
 ),
 onTap: () async {
 await _showARPoiModalBottomSheet(
 context,
 );
 }));
 }),
 ],
 ),
 );
 }

 Future _showARPoiModalBottomSheet(
 BuildContext context,
 ) {
 return showModalBottomSheet(
 context: context,
 isScrollControlled: true,
 shape: RoundedRectangleBorder(
 borderRadius: BorderRadius.only(
 topLeft: Radius.circular(30), topRight: Radius.circular(30))),
 builder: (context) => Container(
 child: SingleChildScrollView(
 child: ClipRRect(
 borderRadius: BorderRadius.only(
 topLeft: Radius.circular(30), topRight: Radius.circular(30)),
 child: Container(
 padding: const EdgeInsets.all(16),
 width: double.infinity,
 child: Column(
 mainAxisSize: MainAxisSize.min,
 crossAxisAlignment: CrossAxisAlignment.center,
 children: [
 Container(
 width: 200,
 child: ElevatedButton(
 onPressed: () async {
 Navigator.of(context).pop();

 Future.delayed(
 Duration(milliseconds: 100),
 () => Navigator.of(context)
 .push(
 CupertinoPageRoute(
 builder: (context) => UnityPage(),
 ),
 )
 .then((value) async {
 if (_controller != null) {
 setState(() {
 _initializeControllerFuture =
 _controller!.initialize();
 });
 try {
 await _controller!.initialize();
 } catch (e) {
 print(""ERROR $e"");
 }
 }
 }),
 );
 },
 child: Text(""AR""),
 ),
 ),
 ],
 ),
 ),
 ),
 ),
 ),
 );
 }
}

class CameraWidget extends StatelessWidget {
 const CameraWidget({
 Key? key,
 required this.controller,
 required this.initializeControllerFuture,
 }) : super(key: key);

 final Future<void> initializeControllerFuture;
 final CameraController controller;

 @override
 Widget build(BuildContext context) {
 return FutureBuilder<void>(
 future: initializeControllerFuture,
 builder: (context, snapshot) {
 if (snapshot.connectionState == ConnectionState.done) {
 return CameraPreview(controller);
 } else {
 return const Center(child: CircularProgressIndicator());
 }
 },
 );
 }
}

```
</details>

<details>
<summary>Unity page </summary>

```

import 'dart:async';
import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';
import 'package:flutter_unity_widget/flutter_unity_widget.dart';

class UnityPage extends StatefulWidget {
 const UnityPage({
 Key? key,
 }) : super(key: key);
 @override
 _UnityPageState createState() => _UnityPageState();
}

class _UnityPageState extends State<UnityPage> with WidgetsBindingObserver {
 late UnityWidgetController _unityWidgetController;

 bool showButtons = true;
 bool? isReady;
 bool isSceneLoaded = false;
 bool? isPaused;

 bool isLoading = false;

 @override
 void didChangeAppLifecycleState(AppLifecycleState state) async {
 switch (state) {
 case AppLifecycleState.resumed:
 print(""app in resumed: isPaused:$isPaused"");

 Future.delayed(
 Duration(milliseconds: 50),
 () async {
 await this._unityWidgetController.resume();
 },
 );
 break;
 case AppLifecycleState.inactive:
 print(""app in inactive"");
 break;
 case AppLifecycleState.paused:
 print(""app in paused: isPaused:$isPaused"");

 break;
 case AppLifecycleState.detached:
 print(""app in detached"");
 break;
 }
 }

 @override
 void initState() {
 super.initState();
 WidgetsBinding.instance!.addObserver(this);
 }

 @override
 void dispose() {
 WidgetsBinding.instance!.removeObserver(this);
 _unityWidgetController.dispose();

 super.dispose();
 }

 @override
 Widget build(BuildContext context) {
 return Scaffold(
 body: Stack(
 children: [
 UnityWidget(
 borderRadius: BorderRadius.zero,
 onUnityCreated: onUnityCreated,
 onUnitySceneLoaded: onUnitySceneLoaded,
 onUnityUnloaded: () {},
 onUnityMessage: onUnityMessage,
 fullscreen: false,
 ),
 if (!isSceneLoaded)
 Center(
 child: Container(
 height: 50,
 width: 50,
 decoration: BoxDecoration(
 shape: BoxShape.circle,
 color: Colors.white,
 ),
 padding: const EdgeInsets.all(16),
 child: CircularProgressIndicator(),
 ),
 ),
 Positioned(
 top: MediaQuery.of(context).padding.top,
 left: 0,
 child: Container(
 decoration:
 BoxDecoration(shape: BoxShape.circle, color: Colors.blueGrey),
 child: BackButton(
 color: Colors.white,
 onPressed: () async {
 await _unityWidgetController.pause();

 Navigator.of(context).pop();
 },
 ),
 ),
 ),
 ],
 ),
 );
 }

 void onUnityCreated(UnityWidgetController controller) async {
 this._unityWidgetController = controller;

 Future.delayed(Duration(seconds: 1), () async {
 await this._unityWidgetController.resume();
 });
 }

 void onUnityMessage(message) {
 print(
 'On Unity Message: Received message from unity: ${message.toString()}');

 if (!isSceneLoaded) {
 List<String> list = message.toString().split("":"");
 setState(() {
 isSceneLoaded = list.last == ""true"" ? true : false;
 });
 Future.delayed(Duration(seconds: 1), () async {
 await this._unityWidgetController.resume();
 });
 }
 }
}

void onUnitySceneLoaded(SceneLoaded? sceneInfo) {
 print(
 'On Unity SceneLoaded:Received scene loaded from unity: ${sceneInfo!.name}');
}

```
</details>","I hope these will help you

<details>
<summary>Camera screen (ArPoisPage)</summary>

[TRIPLE QUOTE].
</details>

<details>
<summary>Unity page </summary>

[TRIPLE QUOTE].
</details>",0,0,0,1,0,0,Optimism,,Optimism,,
flutter/flutter,issue,946414559,2021-10-19 6:47:41,Guo-Zhang,Thanks! I want to know the reason for that so I can improve my app. Please open that until the reason was found.,Thanks! I want to know the reason for that so I can improve my app. Please open that until the reason was found.,0,0,0,1,0,0,Optimism,Hope,Hope,,
flutter/flutter,issue,946424559,2021-10-19 7:05:39,Guo-Zhang,Thansks for the same! Hope this feedback be helpful to.p improve the engine!,Thansks for the same! Hope this feedback be helpful to.p improve the engine!,0,0,0,1,0,0,Optimism,Hope,Hope/Optimism,1,
flutter/flutter,issue,946585055,2021-10-19 10:21:58,Mayank-9018,"Hi @whesse
I can't see flickering in the video you posted. Could you please elaborate a bit more on the issue?","Hi [USER]
I can't see flickering in the video you posted. Could you please elaborate a bit more on the issue?",0,0,0,1,0,0,Optimism,Eagerness,Eagerness (to help),,
flutter/flutter,issue,946878317,2021-10-19 16:10:00,DanTup,@christopherfujino I don't have access to whatever google-testing is - are you able to check the results and let me know what failed (if it's something I need to fix). Thanks!,[USER] I don't have access to whatever google-testing is - are you able to check the results and let me know what failed (if it's something I need to fix). Thanks!,0,0,0,1,0,0,Optimism,Eagerness,Eagerness (to help),1,
webpack/webpack,issue,947752174,2021-10-20 14:58:12,alexander-akait,"I think you can ask angular team team, I think it is possible","I think you can ask angular team team, I think it is possible",0,0,0,1,0,0,Optimism,hope,,,
flutter/flutter,issue,950823798,2021-10-25 11:26:33,jagmit,"> Have you looked at the DraggableScrollableSheet? It sounds like it might be helpful in this case. :)

Unfortunately `DraggableScrollableSheet` is not helpful for my use case since I want single items of a list to be draggable and not the whole list as such.

> I think adding this sounds ok, since we added filtering for PointerDeviceKinds on GestureDetectors in #81858

Happy to hear that! Would you say this issue is ""up for grabs"" @Piinks ? I would really like to contribute.","[BLOCK QUOTE].

Unfortunately `DraggableScrollableSheet` is not helpful for my use case since I want single items of a list to be draggable and not the whole list as such.

[BLOCK QUOTE].

Happy to hear that! Would you say this issue is ""up for grabs"" [USER] ? I would really like to contribute.",0,0,0,1,0,0,Optimism,Eagerness,Eagerness (to contribute),,
Microsoft/TypeScript,issue,950848300,2021-10-25 11:57:06,ThongNLM,"I'm just wondering if anyone's running into this problem and how to solve this.
If possible we can create a plugin for handling this kind of problem instead.",I'm just wondering if anyone's running into this problem and how to solve this. If possible we can create a plugin for handling this kind of problem instead.,0,0,0,1,0,0,Optimism,Hope,Hopeful -> Joy,,
webpack/webpack,issue,950987553,2021-10-25 14:28:41,The-x-Theorist,"I want to work on this issue, but I need little help in this before starting.","I want to work on this issue, but I need little help in this before starting.",0,0,0,1,0,0,Optimism,Eagerness,Eagerness,1,
flutter/flutter,issue,952019009,2021-10-26 14:50:06,ahousand,I'd also like to extend any help I can provide as well!,I'd also like to extend any help I can provide as well!,0,0,0,1,0,0,Optimism,Eagerness,Eagerness,,
flutter/flutter,issue,952975603,2021-10-27 14:15:41,milodude,"Hello, I'm sorry to be persistent but was wondering if there is any updates on this issue. Let me know if I can help you somehow.","Hello, I'm sorry to be persistent but was wondering if there is any updates on this issue. Let me know if I can help you somehow.",0,0,0,1,0,0,Optimism,Eagerness,Eagerness (to help),,
flutter/flutter,issue,953424569,2021-10-28 1:18:34,munsterlander,"Yes, we are working on that but also need android. I only have access to one Mac and it will be next week before I get to test on it. I do have android though and method channels are not working.","Yes, we are working on that but also need android. I only have access to one Mac and it will be next week before I get to test on it. I do have android though and method channels are not working.",0,0,0,1,0,0,Optimism,Hope,Optimism,,
flutter/flutter,issue,954396291,2021-10-29 3:13:45,zaralockheart,"To add, this is not something that we can easily reproduce, out of 10 devices in prod, only one device get this issue. However, when I see this crash logs, the app is not killed / restarted like how typically app behave when crashes. 
Ofc this issue is solved by restart the app. But the app is expected to be used for 24h.

Question: are there any ways we can detect this kind of issue runtime? To notify user to restart the app manually themselves. Our users most of the time not brave enough to restart the app themselves without negotiating with their manager or us.","To add, this is not something that we can easily reproduce, out of 10 devices in prod, only one device get this issue. However, when I see this crash logs, the app is not killed / restarted like how typically app behave when crashes. Ofc this issue is solved by restart the app. But the app is expected to be used for 24h. Question: are there any ways we can detect this kind of issue runtime? To notify user to restart the app manually themselves. Our users most of the time not brave enough to restart the app themselves without negotiating with their manager or us.",0,0,0,1,0,0,Optimism,Eagerness,Eagerness (to help),1,
flutter/flutter,issue,955972112,2021-11-01 6:36:33,darshankawar,"@goodmanworld
In order to properly address this issue, we would need a complete minimal reproducible code sample without any 3rd party plugin and clear steps to replicate the issue that throws the `null` error, along with `flutter doctor -v`.","[USER]
In order to properly address this issue, we would need a complete minimal reproducible code sample without any 3rd party plugin and clear steps to replicate the issue that throws the `null` error, along with `flutter doctor -v`.",0,0,0,1,0,0,Optimism,Eagerness,Eagerness (to help),,
angular/angular,issue,958346666,2021-11-02 22:58:57,jessicajaniuk,"@ngwattcos @petebacondarwin This would be a great optimization to land. If we can get it rebased and updated, that would be great.","[USER] [USER] This would be a great optimization to land. If we can get it rebased and updated, that would be great.",0,0,0,1,0,0,Optimism,hope,,,
flutter/flutter,issue,958748054,2021-11-03 8:43:54,darshankawar,"@realize-me
Can you upgrade to latest stable and see if you get same behavior ?
If so, provide us a complete minimal code sample without using any 3rd party plugins.","[USER]
Can you upgrade to latest stable and see if you get same behavior ?
If so, provide us a complete minimal code sample without using any 3rd party plugins.",0,0,0,1,0,0,Optimism,Eagerness,Eagerness (to help),,
flutter/flutter,issue,960501506,2021-11-04 6:55:15,maheshmnj,"Hi @aoatmon, Thanks for filing the issue.

> I'd be happy to produce a code sample, but the logs don't seem to point at my code

please share the minimal and complete reproducible code along with the steps to reproduce the issue. This will help to replicate the issue and eventually find the cause of the bug.

Thanks","Hi [USER], Thanks for filing the issue. 

[BLOCK QUOTE]. 

please share the minimal and complete reproducible code along with the steps to reproduce the issue. This will help to replicate the issue and eventually find the cause of the bug. 

Thanks",0,0,0,1,0,0,Optimism,Eagerness,Eagerness (to help),1,
angular/angular,issue,937914188,2021-10-07 15:40:08,Smrtnyk,"I do understand your advice and I agree with them.
However I am not in control of this software I am working on.

Users have angular apps compiled and hosted.
Then they buy our service and include our script on the page as the first script. We work as an apm tool.
Angular app and our script are completely separated, and we have 0 prod dependencies.
Also we have our own rollout mechanism and users can disable injection of our script via UI on demand.
We are working in sprints and users can only use latest version of our software month in the past.

I do get the router instance passed in as a parameter but from a compiled app which is already live in the page.
I am able to subscribe to the router events via `router[""events""][""subscribe""](createRouterEventHandler());`
Is there maybe something on the compiled router instance that I could use more in this regards?

If not at least having stringified event as a name is a second option, which is better than only one option.
Event type property would be great if there would be a plan to add that to angular. Would simplify things a lot for us.","I do understand your advice and I agree with them.
However I am not in control of this software I am working on.

Users have angular apps compiled and hosted.
Then they buy our service and include our script on the page as the first script. We work as an apm tool.
Angular app and our script are completely separated, and we have 0 prod dependencies.
Also we have our own rollout mechanism and users can disable injection of our script via UI on demand.
We are working in sprints and users can only use latest version of our software month in the past.

I do get the router instance passed in as a parameter but from a compiled app which is already live in the page.
I am able to subscribe to the router events via `router[""events""][""subscribe""](createRouterEventHandler());`
Is there maybe something on the compiled router instance that I could use more in this regards?

If not at least having stringified event as a name is a second option, which is better than only one option.
Event type property would be great if there would be a plan to add that to angular. Would simplify things a lot for us.",0,0,0,1,0,0,"Optimism, Approval",Hope,"Overall positive sentiment (Agreement, Hopeful)",,
flutter/flutter,issue,947059736,2021-10-19 19:58:21,chinmaygarde,@rmacnak-google @a-siva: Let me know if I missed something from our conversation yesterday. cc @jason-simmons @zanderso who are looking into [similar issues with engine managed snapshots](https://github.com/flutter/flutter/issues/91382).,[USER] [USER] Let me know if I missed something from our conversation yesterday. cc [USER] [USER] who are looking into [similar issues with engine managed snapshots]([URL],0,0,0,1,0,0,"Optimism, Zest","Eagerness, Excitement","Eagerness, Excitement",,
flutter/flutter,issue,947447978,2021-10-20 8:34:00,noamraph,"Ok, I'm pretty sure that the problem is with serializing and deserializing the result, which is done on the main thread.
When I changed the kotlin code to only return the first 5 entries (after fetching all of them), there were no lost frames.","Ok, I'm pretty sure that the problem is with serializing and deserializing the result, which is done on the main thread.
When I changed the kotlin code to only return the first 5 entries (after fetching all of them), there were no lost frames.",0,0,0,1,0,0,Pride,Triumph,Triumph,,
webpack/webpack,pull_request,391758119,2020-03-12 16:54:42,sokra,"It's local, so no problem","It's local, so no problem",0,0,0,1,0,0,Relief,,,,
Microsoft/TypeScript,pull_request,439591404,2020-06-12 18:55:22,weswigham,"leftover from an earlier iteration, fixed","leftover from an earlier iteration, fixed",0,0,0,1,0,0,Relief,,,,
Microsoft/TypeScript,pull_request,578248955,2021-02-18 9:12:32,DanielRosenwasser,"I was about to suggest a MultiMap, thinking this was going to get a lot slower. Glad I actually started reading the code. 😅","I was about to suggest a MultiMap, thinking this was going to get a lot slower. Glad I actually started reading the code. 😅",0,0,0,1,0,0,Relief,relief,,,
Microsoft/TypeScript,pull_request,587059740,2021-03-04 3:50:07,JoshuaKGoldberg,"Thanks for the notice & discussion! TIL 😄 , and it makes a lot of sense.
This actually ended up not changing much in the output: 107e10d908 only showed a few _very_ edge case tests get a small amount of extra messages. Not so terrible. Phew.","Thanks for the notice & discussion! TIL 😄 , and it makes a lot of sense.
This actually ended up not changing much in the output: 107e10d908 only showed a few _very_ edge case tests get a small amount of extra messages. Not so terrible. Phew.",0,0,0,1,0,0,Relief,relief,,1,
Microsoft/TypeScript,pull_request,602607176,2021-03-26 22:02:55,RyanCavanaugh,"👍

In my defense, `reportError` wasn't there when I wrote this code 😅","👍 In my defense, `reportError` wasn't there when I wrote this code 😅",0,0,0,1,0,0,Relief,Relief,"Grinning emoji -> Humor -> Joy, Relief",,
angular/angular,pull_request,633828940,2021-05-17 20:04:46,JoostK,"Oh never mind, these are deps, not peer deps!!","Oh never mind, these are deps, not peer deps!!",0,0,0,1,0,0,Relief,Relief,Relief,,
angular/angular,pull_request,639302215,2021-05-25 23:50:23,kyliau,"any reduction is good! As long as the number of calls didn't increase I am not too concerned. It's also worth nothing that this test is for View Engine language service, which is no longer the default in v12.","any reduction is good! As long as the number of calls didn't increase I am not too concerned. It's also worth nothing that this test is for View Engine language service, which is no longer the default in v12.",0,0,0,1,0,0,Relief,relief,,,
angular/angular,pull_request,640820577,2021-05-27 17:18:52,dgp1130,"Ah yes, I knew I would miss one of those!","Ah yes, I knew I would miss one of those!",0,0,0,1,0,0,Relief,relief,,,
flutter/flutter,pull_request,645281984,2021-06-04 4:33:01,dnfield,Ahh I had it this way and then mistakenly worried we'd somehow miss some other type of exception.,Ahh I had it this way and then mistakenly worried we'd somehow miss some other type of exception.,0,0,0,1,0,0,Relief,Relief,Relief,,
flutter/flutter,pull_request,646943360,2021-06-07 21:11:29,jonahwilliams,"Ahh, got it","Ahh, got it",0,0,0,1,0,0,Relief,Relief,Relief,,
angular/angular,pull_request,661483824,2021-06-30 13:39:54,petebacondarwin,"> Okay, next try: How about only showing the app.component.ts example + add a stackblitz link to the complete solution? 🙂 Every other code snippet in the documentation got one
This works for me!","[BLOCK QUOTE].
This works for me!",0,0,0,1,0,0,Relief,Relief,Relief,,
flutter/flutter,pull_request,705879399,2021-09-10 4:04:02,LongCatIsLooong,"Oh nvm the documentation was right, it works fine with inverted selections. Many test cases have the selection range inverted.","Oh nvm the documentation was right, it works fine with inverted selections. Many test cases have the selection range inverted.",0,0,0,1,0,0,Relief,Relief,Relief,,
Microsoft/TypeScript,pull_request,713826681,2021-09-22 10:58:44,acutmore,"Thanks, I've retained this header so it's in both places the original comment has been split up into, and fixed the spelling error.","Thanks, I've retained this header so it's in both places the original comment has been split up into, and fixed the spelling error.",0,0,0,1,0,0,Relief,Relief,Relief,,
flutter/flutter,pull_request,725465717,2021-10-09 9:58:31,Hixie,"wow that was a hell of a typo

fixed!","wow that was a hell of a typo

fixed!",0,0,0,1,0,0,Relief,,,,
webpack/webpack,issue,798606383,2021-03-13 16:39:41,alexander-akait,"~~I am afraid it is not easy to fix, even more I think it is not fixable~~ I was wrong, not hard to fix","~~I am afraid it is not easy to fix, even more I think it is not fixable~~ I was wrong, not hard to fix",0,0,0,1,0,0,Relief,Relief,Relief,,
webpack/webpack,issue,799352104,2021-03-15 11:41:26,alexander-akait,"@rigor789 Yep, it is just workaround","[USER] Yep, it is just workaround",0,0,0,1,0,0,Relief,,,,
webpack/webpack,issue,843115609,2021-05-18 12:11:15,azangru,"@squiaios Thanks for your response. I realised that there was something more to that problem that I didn't understand. The incorrect mapping that I was seeing happened when I was exploring a failed React client-side rehydration by following the stack trace in the console. When I tried to reproduce it in a simpler scenario, the dev tools redirected me to the correct source file.

So I deleted my comment, but not fast enough for nobody to notice 😄 Sorry for that. The deleted comment read as follows:

> Hi,
>
> I found this github issue, because I was also using the `eval-cheap-module-source-map` devtool option in my config and got confused by the output. What @sokra said in https://github.com/webpack/webpack/issues/12043#issuecomment-734199644 is true; but my Chrome devtools seem to map the code in the bundle to the `webpack-internal://` folder; so that if there's an error in the console and I click on a link to the source file, the dev tools take me to the `webpack-internal://` folder with the transformed files. The transformed files are useless to me, and looking for an identical file in the `webpack://` folder is cumbersome. Is there a way to convince dev tools to use the `webpack://` folder as a primary source? If not, what setting would you recommend to use in development, which would produce only the folder with the original source files?","[USER] Thanks for your response. I realised that there was something more to that problem that I didn't understand. The incorrect mapping that I was seeing happened when I was exploring a failed React client-side rehydration by following the stack trace in the console. When I tried to reproduce it in a simpler scenario, the dev tools redirected me to the correct source file.

So I deleted my comment, but not fast enough for nobody to notice 😄 Sorry for that. The deleted comment read as follows:

[BLOCK QUOTE].",0,0,0,1,0,0,Relief,Relief,Relief,,
webpack/webpack,issue,873370671,2021-07-03 8:39:11,winixt,I try to revert webpack version to 5.41.1. project works fine!,I try to revert webpack version to 5.41.1. project works fine!,0,0,0,1,0,0,Relief,,,,
angular/angular,issue,877811803,2021-07-11 14:46:58,JamesIves,"Sorry for the delayed response on this. I think you're right, it seemed like it was swallowing the error instead of showing it. I've adjusted my code and everything works as intended.
I believe this issue can be closed!","Sorry for the delayed response on this. I think you're right, it seemed like it was swallowing the error instead of showing it. I've adjusted my code and everything works as intended.
I believe this issue can be closed!",0,0,0,1,0,0,Relief,,,,
angular/angular,issue,891882719,2021-08-03 14:13:59,indraraj26,#resolved I dont know but it is working fine today on that same branch.,#resolved I dont know but it is working fine today on that same branch.,0,0,0,1,0,0,Relief,,,,
Microsoft/TypeScript,issue,896368442,2021-08-10 23:04:09,frank-weindel,"@RyanCavanaugh I have to say, I'm also disheartened by this. A team could spend a long time building a library and assuming that ""if it compiles, it'll work!"" only to find out after turning `declarations` on that they have a ton of very difficult to solve errors. It's not intuitive and not very much documented that there are such limitations. I'm happy I'm finding this out now by chance.","[USER] I have to say, I'm also disheartened by this. A team could spend a long time building a library and assuming that ""if it compiles, it'll work!"" only to find out after turning `declarations` on that they have a ton of very difficult to solve errors. It's not intuitive and not very much documented that there are such limitations. I'm happy I'm finding this out now by chance.",0,0,0,1,0,0,Relief,,,,
Microsoft/TypeScript,issue,904153362,2021-08-23 21:41:43,zenhob,I just fixed an annoying bug that would have been caught by this. I was doing string interpolation to construct an URL in CSS. I can't imagine anyone ever intends to load `url(undefined)`. Thanks @Peeja for the eslint rule links.,I just fixed an annoying bug that would have been caught by this. I was doing string interpolation to construct an URL in CSS. I can't imagine anyone ever intends to load `url(undefined)`. Thanks [USER] for the eslint rule links.,0,0,0,1,0,0,Relief,Relief,Relief -> Happy,,
Microsoft/TypeScript,issue,906573092,2021-08-26 16:45:14,andrewbranch,"@IllusionMH ah, thank you! I bet that’s what @KeithHenry is talking about. The examples I tested all had initializers. It’s a little hard to repro something without a code snippet 😅","[USER] ah, thank you! I bet that’s what [USER] is talking about. The examples I tested all had initializers. It’s a little hard to repro something without a code snippet 😅",0,0,0,1,0,0,Relief,-,Relief,1,
Microsoft/TypeScript,issue,916909700,2021-09-10 13:35:50,leanne1,Just to flag i had this same error on version 4.4.2 on Mac OS 11.5.2. Downgraded to 4.3.5 and error not present.,Just to flag i had this same error on version 4.4.2 on Mac OS 11.5.2. Downgraded to 4.3.5 and error not present.,0,0,0,1,0,0,Relief,Relief,Relief -> Joy,,
Microsoft/TypeScript,issue,917040100,2021-09-10 16:30:13,mprobst,"Yes, that's right! I have to admit I didn't even search, I always assume we're the only odd people who care about the comment emit that much...","Yes, that's right! I have to admit I didn't even search, I always assume we're the only odd people who care about the comment emit that much...",0,0,0,1,0,0,Relief,Relief,Relief,,
Microsoft/TypeScript,issue,917608676,2021-09-12 10:32:08,ties-s,"@ahejlsberg this work around works! Finally found it after wasting hours searching for the solution. This is especially annoying when trying to wrap a type as a promise, since that also doesn't work correctly with specifying a separate promise-wrapped type.
Any new on if this is going to be fixed?","[USER] this work around works! Finally found it after wasting hours searching for the solution. This is especially annoying when trying to wrap a type as a promise, since that also doesn't work correctly with specifying a separate promise-wrapped type.
Any new on if this is going to be fixed?",0,0,0,1,0,0,Relief,Relief,Relief,,
flutter/flutter,issue,947630112,2021-10-20 12:45:41,bazinac,"Actually it turns out that behavior does not reproduce in master, my bad. So it was fixed, thanks for the support!","Actually it turns out that behavior does not reproduce in master, my bad. So it was fixed, thanks for the support!",0,0,0,1,0,0,Relief,Relief,Relief,,
flutter/flutter,issue,948203695,2021-10-21 2:42:24,stevenBang,"@Teio07
I switched the Flutter version to master and it succeeded
Thank you!","[USER]
I switched the Flutter version to master and it succeeded
Thank you!",0,0,0,1,0,0,Relief,Relief,Relief,,
flutter/flutter,issue,948322120,2021-10-21 7:10:57,danagbemava-nc,"Then I feel it is safe to close this issue.

Closing as solved.","Then I feel it is safe to close this issue.

Closing as solved.",0,0,0,1,0,0,Relief,Relief,Relief,,
angular/angular,issue,948562007,2021-10-21 12:24:07,petebacondarwin,Hi @TheSlimvReal - sorry not to respond so far on this issue. It is a bit tricky to implement on our side. I need to talk with @gkalpak about how this could work - I am not sure if it is something we would do. I am glad that for the time being you appear to have a workaround.,Hi [USER] - sorry not to respond so far on this issue. It is a bit tricky to implement on our side. I need to talk with [USER] about how this could work - I am not sure if it is something we would do. I am glad that for the time being you appear to have a workaround.,0,0,0,1,0,0,Relief,Relief,Relief,,
flutter/flutter,issue,950707181,2021-10-25 9:17:01,isuru18113,@darshankawar Alright I thought its an error :),[USER] Alright I thought its an error :),0,0,0,1,0,0,Relief,,,,
Microsoft/TypeScript,issue,953595449,2021-10-28 7:59:28,MartinJohns,"I stand corrected, thank you. Although it's quite difficult to figure out what feature came out with what version. The document you linked with ""verified"" only mentions an **expected** year.","I stand corrected, thank you. Although it's quite difficult to figure out what feature came out with what version. The document you linked with ""verified"" only mentions an **expected** year.",0,0,0,1,0,0,Relief,Relief,Relief,,
flutter/flutter,issue,955683969,2021-10-31 11:41:11,jeonghoonkim,"@jasonhtpham God only this work for me. Thanks

> Hey guys, we solved this problem by setting the this in `gradle.properties`
>
> ```
> android.enableR8=true
> ```
>
> And set the flag `--no-shrink` when building the app bundle (as we don't what code shrinker). It works for us. I guess this is because if we set enableR8 to false Flutter will use Proguard by default.
>
> I hope this will help someone in their stress of solving this like us.","[USER] God only this work for me. Thanks

[BLOCK QUOTE].",0,0,0,1,0,0,Relief,Relief,Relief,,
flutter/flutter,issue,958923728,2021-11-03 11:02:23,benyaminbeyzaie,I found a way to resolve this issue not quite efficient but it is working fine! using bloc and creating just one CameraController and also making the bloc acts like a synchronized block and not initialize the camera if there is an active event on it is solving the problem but I guess I can found a better navigation system to not create and listen to the life cycle change in app many times. Thanks for your advices.,I found a way to resolve this issue not quite efficient but it is working fine! using bloc and creating just one CameraController and also making the bloc acts like a synchronized block and not initialize the camera if there is an active event on it is solving the problem but I guess I can found a better navigation system to not create and listen to the life cycle change in app many times. Thanks for your advices.,0,0,0,1,0,0,Relief,Relief,Relief,,
Microsoft/TypeScript,pull_request,703366846,2021-09-07 10:00:04,orta,"Great ideas, implemented 👍🏻 and pushed","Great ideas, implemented 👍🏻 and pushed",0,0,0,1,0,0,Triumph,,,,
angular/angular,pull_request,716035218,2021-09-25 12:22:50,dario-piotrowicz,Might have found a solution here: https://github.com/angular/angular/pull/43586 :slightly_smiling_face:,Might have found a solution here: [URL] :slightly_smiling_face:,0,0,0,1,0,0,Triumph,pride,,,
flutter/flutter,pull_request,718870954,2021-09-29 20:44:31,kenzieschmoll,ah nice! Was able to cleanup all the tests with this change.,ah nice! Was able to cleanup all the tests with this change.,0,0,0,1,0,0,Triumph,,,,
Microsoft/TypeScript,issue,926829428,2021-09-24 18:13:49,orta,This got OK'd at a design meeting 👍🏻,This got OK'd at a design meeting 👍🏻,0,0,0,1,0,0,Triumph,,,,
webpack/webpack,pull_request,94140211,2016-12-29 14:21:40,SpaceK33z,"Ah nice idea, that may be the cleanest solution.","Ah nice idea, that may be the cleanest solution.",0,0,0,1,0,0,Zest,Excitement,Excitement,,
webpack/webpack,pull_request,94406257,2017-01-03 13:42:46,Jessidhia,Interesting workaround 😄,Interesting workaround 😄,0,0,0,1,0,0,Zest,excitement,,,
webpack/webpack,pull_request,155162450,2017-12-06 7:29:46,TheLarkInn,On it! 😅,On it! 😅,0,0,0,1,0,0,Zest,enthusiasm,,,
Microsoft/TypeScript,pull_request,247250572,2019-01-11 20:53:48,JoshuaKGoldberg,Every time you comment I realize something new about JS or TS. This is very exciting. 😊,Every time you comment I realize something new about JS or TS. This is very exciting. 😊,0,0,0,1,0,0,Zest,excitement,,,
Microsoft/TypeScript,pull_request,571246442,2021-02-05 20:58:27,andrewbranch,"Nonetheless, I reworked to make it start at the nearest possible ancestor instead of the source file, and skipped it altogether in cases where neither list element went through a transformation (which is the only way they could be reordered or reparented, I think).","Nonetheless, I reworked to make it start at the nearest possible ancestor instead of the source file, and skipped it altogether in cases where neither list element went through a transformation (which is the only way they could be reordered or reparented, I think).",0,0,0,1,0,0,Zest,enthusiasm,,,
angular/angular,pull_request,624072499,2021-04-30 18:13:47,aikidave,"I like your suggested wording, @kapunahelewong . Let's go with that!","I like your suggested wording, [USER] . Let's go with that!",0,0,0,1,0,0,Zest,excitement,,,
angular/angular,pull_request,640820626,2021-05-27 17:18:57,dgp1130,"Ah cool, I didn't know that!","Ah cool, I didn't know that!",0,0,0,1,0,0,Zest,Excitement,Excitement,,
Microsoft/TypeScript,pull_request,641000887,2021-05-27 22:04:31,andrewbranch,"I’m open to suggestions for a better name or for doing this differently, and there’s no reason right now that it needs to be a function instead of a readonly value. The deal is that the emit host _must_ get a non-empty answer when it asks for a module specifier between two files, whereas the language service host can get an empty answer, since it only uses module specifier resolution for auto-import-related things. This allows the two hosts to distinguish those requirements. The name would be much easier to understand if it were inverted, like `requireResolutionResults` or something (still not great), but that would mean it either needs to default to true or be a breaking API change for ModuleSpecifierResolutionHost implementations (which is internal, so maybe not so bad). I initially planned to add this value as a parameter to `getModuleSpecifiers()` et al, but that has weird implications for caching (technically it should be part of the cache key, but in practice, each host should always pass the same value).","I’m open to suggestions for a better name or for doing this differently, and there’s no reason right now that it needs to be a function instead of a readonly value. The deal is that the emit host _must_ get a non-empty answer when it asks for a module specifier between two files, whereas the language service host can get an empty answer, since it only uses module specifier resolution for auto-import-related things. This allows the two hosts to distinguish those requirements. The name would be much easier to understand if it were inverted, like `requireResolutionResults` or something (still not great), but that would mean it either needs to default to true or be a breaking API change for ModuleSpecifierResolutionHost implementations (which is internal, so maybe not so bad). I initially planned to add this value as a parameter to `getModuleSpecifiers()` et al, but that has weird implications for caching (technically it should be part of the cache key, but in practice, each host should always pass the same value).",0,0,0,1,0,0,Zest,enthusiasm,,,
flutter/flutter,pull_request,666619504,2021-07-09 1:53:15,Hixie,the more documentation the better!,the more documentation the better!,0,0,0,1,0,0,Zest,Excitement,Excitement,,
flutter/flutter,pull_request,685488755,2021-08-09 20:11:48,Piinks,Ooo this is a very exciting change. There are so many work arounds for this that we could clean up. :),Ooo this is a very exciting change. There are so many work arounds for this that we could clean up. :),0,0,0,1,0,0,Zest,Excitement,Excitement,,
flutter/flutter,pull_request,694491680,2021-08-24 4:55:21,LongCatIsLooong,Also worth mentioning how this interacts with text composition.,Also worth mentioning how this interacts with text composition.,0,0,0,1,0,0,Zest,Enthusiasm,Enthusiasm,,
angular/angular,pull_request,699357686,2021-08-31 14:04:34,petebacondarwin,I think these comments are great!,I think these comments are great!,0,0,0,1,0,0,Zest,Excitement,Excitement,,
flutter/flutter,pull_request,706468634,2021-09-10 21:01:54,dnfield,"Fair, I'll fix this. Previously we couldn't use that because 255 was also special cased :)","Fair, I'll fix this. Previously we couldn't use that because 255 was also special cased :)",0,0,0,1,0,0,Zest,enthusiasm,,,
flutter/flutter,pull_request,707986098,2021-09-14 7:24:10,GaryQian,May want to also mention that using this results in more granular explicit set of changes rather than batched together general updates to the editing value. We want to help developers find/decide if this feature is right for them.,May want to also mention that using this results in more granular explicit set of changes rather than batched together general updates to the editing value. We want to help developers find/decide if this feature is right for them.,0,0,0,1,0,0,Zest,enthusiasm,,,
flutter/flutter,pull_request,715807530,2021-09-24 17:59:55,LongCatIsLooong,I'll try to find a workaround to remove these 2 imports.,I'll try to find a workaround to remove these 2 imports.,0,0,0,1,0,0,Zest,enthusiasm,,,
webpack/webpack,issue,816711243,2021-04-09 14:11:09,jantimon,"wow - that sounds amazing.. I will take a look asap 👍

will the result be cached?",wow - that sounds amazing.. I will take a look asap 👍 will the result be cached?,0,0,0,1,0,0,Zest,Excitement,Excited,1,
webpack/webpack,issue,873607864,2021-07-04 15:03:35,myNameIsDu,"@alexander-akait
Can I try to fix this problem？","[USER]
Can I try to fix this problem？",0,0,0,1,0,0,Zest,enthusiasm,,,
angular/angular,issue,889890044,2021-07-30 13:22:03,AaronDovTurkel,"Hi, this is a great thread read!
I have a tokenizer in the deploy stage of my pipeline that replaces and env variable.
It seems that this should cause an issue for the SW. Is that correct? Is there a workaround?
(the project is already built at this point)","Hi, this is a great thread read!
I have a tokenizer in the deploy stage of my pipeline that replaces and env variable.
It seems that this should cause an issue for the SW. Is that correct? Is there a workaround?
(the project is already built at this point)",0,0,0,1,0,0,Zest,Zeal,Zeal,,
angular/angular,issue,908748646,2021-08-30 22:29:33,inorganik,Giving this a bump because I think it's still an important issue to fix.,Giving this a bump because I think it's still an important issue to fix.,0,0,0,1,0,0,Zest,Enthusiasm,Enthusiasm,,
Microsoft/TypeScript,issue,910456535,2021-09-01 16:36:08,andrewbranch,Feels like a best effort is likely better than nothing here. Though I would lean toward showing nothing if there’s an ambiguity as in @MartinJohns’s example.,Feels like a best effort is likely better than nothing here. Though I would lean toward showing nothing if there’s an ambiguity as in [USER] example.,0,0,0,1,0,0,Zest,Enthusiasm,Enthusiasm,,
Microsoft/TypeScript,issue,916232072,2021-09-09 16:02:27,legistek,"This is a fantastic feature but what about taking it a step farther and requiring use of the `virtual` keyword on the base class so you can actually control when you want to allow sub-classes to override or not? That could also be an opt-in switch, `noImplicitVirtual`.
There are often situations where overriding a function without calling `super` could break the application.","This is a fantastic feature but what about taking it a step farther and requiring use of the `virtual` keyword on the base class so you can actually control when you want to allow sub-classes to override or not? That could also be an opt-in switch, `noImplicitVirtual`.
There are often situations where overriding a function without calling `super` could break the application.",0,0,0,1,0,0,Zest,enthusiasm,,,
Microsoft/TypeScript,issue,918421589,2021-09-13 17:38:59,sandersn,"I don't think I follow; #33200 is about `Object.values` of enums, but this PR changes `Array.includes`.
The problem in #33200 also seems to be about string literals not being assignable to string enum members with the same value. But your object sounds more general. Is it? Discussing that and proposing a solution would be good to do in a separate issue from #33200, especially since that one's already closed.","I don't think I follow; #33200 is about `Object.values` of enums, but this PR changes `Array.includes`.
The problem in #33200 also seems to be about string literals not being assignable to string enum members with the same value. But your object sounds more general. Is it? Discussing that and proposing a solution would be good to do in a separate issue from #33200, especially since that one's already closed.",0,0,0,1,0,0,Zest,enthusiasm,,,
Microsoft/TypeScript,issue,925049118,2021-09-22 15:40:09,ondrejvelisek,"Hi, great progress here. How is it going with merge? I want to encourage you to finish it. It would be unfortunate to stop here. A lot of devs having problems with this. Thanks.","Hi, great progress here. How is it going with merge? I want to encourage you to finish it. It would be unfortunate to stop here. A lot of devs having problems with this. Thanks.",0,0,0,1,0,0,Zest,enthusiasm,,1,
angular/angular,issue,927860156,2021-09-27 13:11:03,iRealNirmal,"@petebacondarwin I can help in this, can you assign it to me.","[USER] I can help in this, can you assign it to me.",0,0,0,1,0,0,Zest,enthusiasm,,,
Microsoft/TypeScript,issue,934576358,2021-10-05 16:40:05,prabhatmishra33,Hello ! @heyAyushh Please let me know if you are not working on this anymore so that I can take this forward 😊,Hello ! [USER] Please let me know if you are not working on this anymore so that I can take this forward 😊,0,0,0,1,0,0,Zest,Enthusiasm,Enthusiasm,,
Microsoft/TypeScript,issue,940400304,2021-10-11 19:58:37,tomdev10,"Okay fair comment, that makes sense. I will do my best to get one up and running - thanks! Will try and get it done this week. Inidentally, trying to figure this out myself I came across `extendedDiagnostics` and this showing that all the `node_modules` are being type chcked, wondering if this might be why? Or if there is any useful output avaliable from this aid where to look?","Okay fair comment, that makes sense. I will do my best to get one up and running - thanks! Will try and get it done this week. Inidentally, trying to figure this out myself I came across `extendedDiagnostics` and this showing that all the `node_modules` are being type chcked, wondering if this might be why? Or if there is any useful output avaliable from this aid where to look?",0,0,0,1,0,0,Zest,Enthusiasm,Enthusiasm,,
flutter/flutter,issue,946966708,2021-10-19 17:58:55,justinmc,"Assigning myself while I investigate this.

Related: https://github.com/flutter/flutter/issues/92060
Maybe related: https://github.com/flutter/flutter/issues/85328","Assigning myself while I investigate this.

Related: [URL]
Maybe related: [URL]",0,0,0,1,0,0,Zest,enthusiasm,,,
flutter/flutter,issue,947350117,2021-10-20 5:52:21,darshankawar,"You can use [this](https://github.com/flutter/flutter/issues/90382#issuecomment-929711305) workaround mentioned in same issue to get it working. Or also, try to switch to latest master and run again to see if it still persists or not.","You can use [this]([URL] workaround mentioned in same issue to get it working. Or also, try to switch to latest master and run again to see if it still persists or not.",0,0,0,1,0,0,Zest,enthusiasm,,,
Microsoft/TypeScript,issue,948236795,2021-10-21 4:00:12,xiaoxiangmoe,Okay. I'll do it.,Okay. I'll do it.,0,0,0,1,0,0,Zest,enthusiasm,,,
Microsoft/TypeScript,issue,949076777,2021-10-21 23:29:47,amcasey,"I'll reiterate that I'm with ignoring my repro since I probably made nonsense out of the logic while tinkering with it. Obviously, never being slow is the ideal, but it's more important to focus on code people might actually write. Alternatively, we could call this good and file a separate bug to go investigate that repro.","I'll reiterate that I'm with ignoring my repro since I probably made nonsense out of the logic while tinkering with it. Obviously, never being slow is the ideal, but it's more important to focus on code people might actually write. Alternatively, we could call this good and file a separate bug to go investigate that repro.",0,0,0,1,0,0,Zest,Excitement,Excitement,,
angular/angular,issue,949356494,2021-10-22 7:18:47,iRealNirmal,"@petebacondarwin I can help on this, you can assign it to me","[USER] I can help on this, you can assign it to me",0,0,0,1,0,0,Zest,enthusiasm,,,
flutter/flutter,issue,949692147,2021-10-22 14:37:46,weiminghuaa,"@danagbemava-nc Thank you for replay. I've done a rudimentary implementation with a SliverToBoxAdapter and a Stack, it's not ok. I'll try some other way to fix it and let you know if has result.","[USER] Thank you for replay. I've done a rudimentary implementation with a SliverToBoxAdapter and a Stack, it's not ok. I'll try some other way to fix it and let you know if has result.",0,0,0,1,0,0,Zest,enthusiasm,,,
angular/angular,issue,949781457,2021-10-22 16:26:08,petebacondarwin,"I would be very happy to review and help merge updates to the docs that highlight these known issues, if you would like to send in some PRs.","I would be very happy to review and help merge updates to the docs that highlight these known issues, if you would like to send in some PRs.",0,0,0,1,0,0,Zest,enthusiasm,,,
flutter/flutter,issue,949956387,2021-10-22 21:00:40,Tinomuchenje,Would like to work on this. How do I get started?,Would like to work on this. How do I get started?,0,0,0,1,0,0,Zest,Enthusiasm,Zest,,
Microsoft/TypeScript,issue,950196065,2021-10-23 18:47:15,fatcerberus,"Clarification on above comment: I was responding to someone who mistakenly thought `code` and `code2` in the repro code were the same variable. That comment has since been deleted, but I left my response in case someone else makes the same mistake.","Clarification on above comment: I was responding to someone who mistakenly thought `code` and `code2` in the repro code were the same variable. That comment has since been deleted, but I left my response in case someone else makes the same mistake.",0,0,0,1,0,0,Zest,enthusiasm,,,
angular/angular,issue,952939031,2021-10-27 13:37:38,gkalpak,"Feel free to give it a go, @SomeGuyWhoOpenSources 🚀 (It is still on my TODO list, but I won't get to it for another week or so. I would be happy for someone to beat me to it :grin:)","Feel free to give it a go, [USER] 🚀 (It is still on my TODO list, but I won't get to it for another week or so. I would be happy for someone to beat me to it :grin:)",0,0,0,1,0,0,Zest,enthusiasm,,,
Microsoft/TypeScript,issue,954592493,2021-10-29 9:28:00,xlfsummer,"I think it would be better to document a feature after it been released. 🙂
And by the way I'm really exciting about this feature. ❤️","I think it would be better to document a feature after it been released. 🙂
And by the way I'm really exciting about this feature. ❤️",0,0,0,1,0,0,Zest,Excitement,Excitement,,
angular/angular,issue,955208564,2021-10-30 13:22:38,IgorMinar,"we decided to fix forward, so this PR is not needed. closing.","we decided to fix forward, so this PR is not needed. closing.",0,0,0,1,0,0,Zest,Enthusiasm,Enthusiasm,,
flutter/flutter,issue,956023992,2021-11-01 8:14:25,mamuseferha,"Thank you for the screenshot @Jesse-Bakker, I'll be labelling it for further investigation as I cannot reproduce on my end.",Thank you for the screenshot [USER] I'll be labelling it for further investigation as I cannot reproduce on my end.,0,0,0,1,0,0,Zest,enthusiasm,,,
Microsoft/TypeScript,issue,956472417,2021-11-01 18:19:03,amcasey,"> I don't know enough about the system to understand why that matters.

I'm not sure I understand your question, so I'll just answer broadly. Basically, there's an include mechanism for these GDPR comments, but you can't include something from another repo. Since both repos refer to the same fragment, both repos have to declare it.

Why have a reusable fragment for a single property? I'm pretty sure there used to be multiple and, I assume, there might be multiple in the future.","[BLOCK QUOTE].

I'm not sure I understand your question, so I'll just answer broadly. Basically, there's an include mechanism for these GDPR comments, but you can't include something from another repo. Since both repos refer to the same fragment, both repos have to declare it.

Why have a reusable fragment for a single property? I'm pretty sure there used to be multiple and, I assume, there might be multiple in the future.",0,0,0,1,0,0,Zest,enthusiasm,,,
flutter/flutter,issue,957549827,2021-11-02 13:16:49,maheshmnj,"> Since this problem only happened on me. Therefore, I close this issue until someone encountered same issue or what I confirmed.
This does not necessarily mean that the bug does not exist.
Feel free to write back if you encounter the issue again, with some more details and reproducible steps I would be happy to take a look.
Thanks","[BLOCK QUOTE].

This does not necessarily mean that the bug does not exist.

Feel free to write back if you encounter the issue again, with some more details and reproducible steps I would be happy to take a look.
Thanks",0,0,0,1,0,0,Zest,enthusiasm,,,
flutter/flutter,issue,957564557,2021-11-02 13:24:02,arkanmgerges,@danagbemava-nc Thank you for your reply. I will prepare a new project and I will try to make it have the same issue and provide it for the investigation.,[USER] Thank you for your reply. I will prepare a new project and I will try to make it have the same issue and provide it for the investigation.,0,0,0,1,0,0,Zest,enthusiasm,,1,
flutter/flutter,issue,959790258,2021-11-03 18:06:00,werainkhatri,I have raised a pull request on your fork with the working solution I wrote. See if that help 😬.,I have raised a pull request on your fork with the working solution I wrote. See if that help 😬.,0,0,0,1,0,0,Zest,enthusiasm,,,
flutter/flutter,issue,961394578,2021-11-04 20:31:15,fredgrott,Thanks for the info @HansMuller glad to know that the drop for it appearing is soon.,Thanks for the info [USER] glad to know that the drop for it appearing is soon.,0,0,0,1,0,0,Cheerfulness,Happiness,,1,
Microsoft/TypeScript,issue,921046688,2021-09-16 16:21:40,andrewbranch,We’re now tracking this at #44953—a full repro would still be helpful 🙏,We’re now tracking this at #44953—a full repro would still be helpful 🙏,0,0,0,1,0,0,Optimism,Hope,,,
angular/angular,pull_request,666530178,2021-07-08 21:28:50,alxhub,"It's always good to explicitly type arrays like this. Also, this can be `const` since we don't need to change its value.","It's always good to explicitly type arrays like this. Also, this can be `const` since we don't need to change its value.",0,0,0,1,0,0,Contentment,,always good to .. like this -> Positive about something -> Contentment,,
angular/angular,pull_request,736898221,2021-10-26 20:35:12,dario-piotrowicz,ahhhh yeah :thinking: :slightly_smiling_face::+1:,ahhhh yeah :thinking: :slightly_smiling_face::+1:,0,0,0,1,0,0,Cheerfulness,Happiness,"ahhh, yeah -> happy expression",,
angular/angular,pull_request,619287712,2021-04-23 14:57:35,aikidave,That's how @jelbourn formatted it. :),That's how [USER] formatted it. :),0,0,0,1,0,0,Cheerfulness,Joy,:) -> Happy,,
flutter/flutter,issue,952388360,2021-10-26 22:53:31,pajama,"Is there an easy way to pass time as a uniform from flutter? I see that I can pass in some uniforms to the fragmentshader constructor. what is the glsl layout syntax for accessing them? 

Do I need to pass by reference or pointer somehow so they get updated each frame? 

Sorry if I'm not making sense. This is a little outside my comfort zone, but fragment shader is a feature I'm really excited about!","Is there an easy way to pass time as a uniform from flutter? I see that I can pass in some uniforms to the fragmentshader constructor. what is the glsl layout syntax for accessing them? Do I need to pass by reference or pointer somehow so they get updated each frame? Sorry if I'm not making sense. This is a little outside my comfort zone, but fragment shader is a feature I'm really excited about!",0,0,0,1,0,1,"Confusion, Zest",Excitement,"Confused, Excited",,
Microsoft/TypeScript,pull_request,622382190,2021-04-28 17:14:03,sandersn,"Ummm, me too. Neither one of these functions are specific to jsdoc, so jsdoc-specific code is surprise in both.
Probably means that this is good enough.","Ummm, me too. Neither one of these functions are specific to jsdoc, so jsdoc-specific code is surprise in both. Probably means that this is good enough.",0,0,0,1,0,1,"Surprise, Contentment",Pleasure,"Surprise, Pleased",,
Microsoft/TypeScript,issue,928896400,2021-09-28 6:32:44,ShuiRuTian,"Oops, sorry, my bad!
However, I have overworked for several weeks(including weekends), and have almost no time left for this PR :(
But goods new is that a 7-day holiday is coming, start at 10/1, hope I could finish the reaming work during these days!","Oops, sorry, my bad! However, I have overworked for several weeks(including weekends), and have almost no time left for this PR :( But goods new is that a 7-day holiday is coming, start at 10/1, hope I could finish the reaming work during these days!",0,0,0,1,1,0,"Optimism, Sadness",Eagerness,Eagerness + Sad,,
angular/angular,pull_request,645957280,2021-06-05 7:41:45,PowerKiKi,"> it might hide real errors in templates
Excellent point ! 👍
Let's go ahead without support of `undefined`, and I'll deal with it in my own code with one of the workarounds mentioned earlier.","[BLOCK QUOTE].
Excellent point ! 👍
Let's go ahead without support of `undefined`, and I'll deal with it in my own code with one of the workarounds mentioned earlier.",0,0,1,0,0,0,Approval,,,,
angular/angular,pull_request,669937414,2021-07-14 20:39:15,dario-piotrowicz,yeah agreed! I'm on it :slightly_smiling_face:,yeah agreed! I'm on it :slightly_smiling_face:,0,0,1,0,0,0,Approval,,,,
Microsoft/TypeScript,pull_request,526495093,2020-11-18 23:39:55,sheetalkamat,You are right.. this must be friday evening brain fog.. external projects can create configured projects not inferred projects so this doesnt make sense. i am updating the test case..,You are right.. this must be friday evening brain fog.. external projects can create configured projects not inferred projects so this doesnt make sense. i am updating the test case..,0,0,1,0,0,0,Nervousness,"uneasiness, distress",,,
Microsoft/TypeScript,pull_request,623086599,2021-04-29 14:06:29,sandersn,"As the change currently stands I'm not a huge fan of extracting this function. It makes the diff pretty hard to read.
On the other hand, if adding `set` tests shows that the code needs to be more complex, it might tip the balance more strongly toward having a separate function.","As the change currently stands I'm not a huge fan of extracting this function. It makes the diff pretty hard to read.
On the other hand, if adding `set` tests shows that the code needs to be more complex, it might tip the balance more strongly toward having a separate function.",0,0,1,0,0,0,Horror,fear,,,
flutter/flutter,pull_request,655517945,2021-06-21 16:05:41,HansMuller,"Please be wary of https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo#avoid-useless-documentation

This would be a good place exactly what the borderRadius property applies to. Just the button, the menu items, the menu? etc.","Please be wary of [URL] 

This would be a good place exactly what the borderRadius property applies to. Just the button, the menu items, the menu? etc.",0,0,1,0,0,0,Horror,Fear,Wary -> Fear,1,
angular/angular,pull_request,657684839,2021-06-24 7:12:17,petebacondarwin,😱 - good spot.,😱 - good spot.,0,0,1,0,0,0,Horror,Shock,Shocked -> Fear,,
angular/angular,pull_request,686060174,2021-08-10 14:13:02,petebacondarwin,It turned out that this was a bit more complicated since we need to update `super` containers with proxies even if they are not async but only if they contain `super` accesses within an async function inside the `super` container. 😱,It turned out that this was a bit more complicated since we need to update `super` containers with proxies even if they are not async but only if they contain `super` accesses within an async function inside the `super` container. 😱,0,0,1,0,0,0,Horror,Shock,Shocked (based on emoji),,
flutter/flutter,pull_request,694843924,2021-08-24 13:21:37,rami-a,"This comment is outdated now, It defaults to 80 all the time regardless of labelBehavior","This comment is outdated now, It defaults to 80 all the time regardless of labelBehavior",0,0,1,0,0,0,Horror,Alarm,Alarm,,
flutter/flutter,pull_request,715116533,2021-09-23 20:08:20,jmagman,"I don't see it, where is logger nullable? Doesn't it need to be present in `handleError`?","I don't see it, where is logger nullable? Doesn't it need to be present in `handleError`?",0,0,1,0,0,0,Horror,Alarm,Alarm,,
flutter/flutter,pull_request,716975979,2021-09-27 19:19:51,chunhtai,"This looks scary, why we need to put this in a microtask? also do we need to debounce?","This looks scary, why we need to put this in a microtask? also do we need to debounce?",0,0,1,0,0,0,Horror,Fear,Scary -> Fear,,
angular/angular,issue,872327838,2021-07-01 15:10:41,petebacondarwin,I'm afraid that this got no community support.,I'm afraid that this got no community support.,0,0,1,0,0,0,Horror,Fear,Fear,,
angular/angular,issue,932410737,2021-10-01 17:13:11,dylhunn,"> @dylhunn Yeah, just had to push a last time, but this should be ready from my side (assuming CI passes now)

Great. I'll wait for everything to go green, then merge and sync. I'm a bit scared of missing stuff in the Slack, so pls remove the merge label if that changes!","[BLOCK QUOTE]. 

Great. I'll wait for everything to go green, then merge and sync. I'm a bit scared of missing stuff in the Slack, so pls remove the merge label if that changes!",0,0,1,0,0,0,Horror,Fear,Scared -> Fear,1,
flutter/flutter,issue,950728707,2021-10-25 9:40:42,zeshuaro,"I have the exact same issue. For me, it happens for all kinds of widget tests, not just for text input. I'm also on MacOS and can confirm that running `flutter clean` then running the tests again would solve the issue.

Another thing to note is that I'm pretty sure I didn't have this issue before Flutter 2.5. Maybe something introduced in 2.5 caused this issue.","I have the exact same issue. For me, it happens for all kinds of widget tests, not just for text input. I'm also on MacOS and can confirm that running `flutter clean` then running the tests again would solve the issue.

Another thing to note is that I'm pretty sure I didn't have this issue before Flutter 2.5. Maybe something introduced in 2.5 caused this issue.",0,0,1,0,0,0,Horror,Alarm,Alarm,,
webpack/webpack,issue,955954934,2021-11-01 5:59:19,csvan,"@sajeell and others this has been fixed in latest webpack for almost a week now, please check the last comments and do not copy the first workaround you find - it's both unnecessary and might break other Node tools.","[USER] and others this has been fixed in latest webpack for almost a week now, please check the last comments and do not copy the first workaround you find - it's both unnecessary and might break other Node tools.",0,0,1,0,0,0,Horror,Alarm,Warning -> Alarm -> Fear,,
flutter/flutter,issue,957125817,2021-11-02 6:04:44,ClevercodeTech,"Yeah, exactly the same issue. Thanks for the link. But i need to recode to accomodate the updated pluging. I know i am asking for too much, but i just hope pluging developer don't just remove the feature just like that.","Yeah, exactly the same issue. Thanks for the link. But i need to recode to accomodate the updated pluging. I know i am asking for too much, but i just hope pluging developer don't just remove the feature just like that.",0,0,1,0,0,0,Horror,Fear,Fearful (about the feature removal) -> Fear,1,
angular/angular,pull_request,740060843,2021-11-01 9:18:01,petebacondarwin,"I am not convinced that multiformat runs of ngcc are more typical even on the command line.
Obviously the CLI will target only one property per entry-point.

But command line users who are not doing something similar (by providing a list of acceptable properties and asking to only build the first one) are probably wasting a lot of time processing formats that are not used.

But I think it is reasonable to keep one of the two (property or format) in the info message. But I found that keeping both just added a lot of noise to the message, making it less helpful.","I am not convinced that multiformat runs of ngcc are more typical even on the command line.
Obviously the CLI will target only one property per entry-point.

But command line users who are not doing something similar (by providing a list of acceptable properties and asking to only build the first one) are probably wasting a lot of time processing formats that are not used.

But I think it is reasonable to keep one of the two (property or format) in the info message. But I found that keeping both just added a lot of noise to the message, making it less helpful.",0,0,1,0,0,0,Nervousness,Worry,Worry/Concenred (about the use case),,
webpack/webpack,pull_request,101927254,2017-02-19 20:04:41,sokra,That's not the same as before. Would be a breaking change if you change this.,That's not the same as before. Would be a breaking change if you change this.,0,0,1,0,0,0,Nervousness,Worry,Concern/Worry -> Fear,,
webpack/webpack,pull_request,139083319,2017-09-15 7:44:48,sokra,"I guess this could be more efficiently processed, but I guess it would break the code generation because of the assumption that the prefix can be replaced with a string literal.

But as nobody writes such code by hand and babel won't generate this code (first argument to concat is always an expression), we can keep it simple.","I guess this could be more efficiently processed, but I guess it would break the code generation because of the assumption that the prefix can be replaced with a string literal.

But as nobody writes such code by hand and babel won't generate this code (first argument to concat is always an expression), we can keep it simple.",0,0,1,0,0,0,Nervousness,Worry,Break code generation -> Concern,,
webpack/webpack,pull_request,159079807,2017-12-29 16:29:57,ooflorent,I had to remove them because of the mocking system. Many tests were failing because of additional hooks.,I had to remove them because of the mocking system. Many tests were failing because of additional hooks.,0,0,1,0,0,0,Nervousness,worry,,,
webpack/webpack,pull_request,159144172,2017-12-31 17:10:10,ooflorent,This one was really hard to debug...,This one was really hard to debug...,0,0,1,0,0,0,Nervousness,"distress, uneasiness",,,
webpack/webpack,pull_request,161679884,2018-01-16 7:53:54,sokra,"It's kind of weird to support wrong booleans `""false""`. Remove this.","It's kind of weird to support wrong booleans `""false""`. Remove this.",0,0,1,0,0,0,Nervousness,Worry,Concern (regarding wrong types),,
webpack/webpack,pull_request,173051390,2018-03-08 3:01:28,nveenjain,You should probably delete this..,You should probably delete this..,0,0,1,0,0,0,Nervousness,Worry,Concern (regarding sth),,
webpack/webpack,pull_request,182763900,2018-04-19 14:22:59,montogeek,Why is this happening? A side effect of generating tests dynamically?,Why is this happening? A side effect of generating tests dynamically?,0,0,1,0,0,0,Nervousness,Worry,Concern/Worry -> Fear,,
webpack/webpack,pull_request,184582031,2018-04-27 3:02:09,TheLarkInn,"Hmm this was causing some strange assertions, I'll double check here.","Hmm this was causing some strange assertions, I'll double check here.",0,0,1,0,0,0,Nervousness,worry,,,
webpack/webpack,pull_request,189431101,2018-05-19 10:32:03,sokra,"hmm.. I'll remove it, but the problem was there before this change...","hmm.. I'll remove it, but the problem was there before this change...",0,0,1,0,0,0,Nervousness,worry,,,
webpack/webpack,pull_request,191852312,2018-05-30 17:21:29,sokra,"Yep, something is wrong","Yep, something is wrong",0,0,1,0,0,0,Nervousness,Worry,Concern,,
webpack/webpack,pull_request,221837163,2018-10-02 6:35:38,michael-ciniawsky,Still not sure if this handels all possible cases... :),Still not sure if this handels all possible cases... :),0,0,1,0,0,0,Nervousness,Worry,Concern/Worry -> Fear,,
Microsoft/TypeScript,pull_request,247323467,2019-01-12 19:37:59,ajafff,this will falsely abort recursing into parameters of arrow functions,this will falsely abort recursing into parameters of arrow functions,0,0,1,0,0,0,Nervousness,Worry,Concern/Worry -> Fear,,
webpack/webpack,pull_request,247501571,2019-01-14 14:01:58,ooflorent,Yep. Same concern for me.,Yep. Same concern for me.,0,0,1,0,0,0,Nervousness,Worry,Concern/Worry -> Fear,,
Microsoft/TypeScript,pull_request,282613868,2019-05-09 18:39:09,rbuckton,"My primary concern is performance. I'd rather avoid lookups against the `resolver` for every generated identifier, if possible. The only case where this check seems like it is needed is [here](https://github.com/microsoft/TypeScript/pull/28708/files/64a3d964d812ef3e41d8329488764048e52f8e4f#diff-c0d0e8b1528663b6cff3bb893150cec3R929), so incurring the cost of the lookup for *every* hoisted variable is unnecessary overhead.
I would still recommend that we add `addBlockVariableDeclaration` for this case, but we can mark it as `/* @internal */` for now and revisit the API for custom transformer consumption later.","My primary concern is performance. I'd rather avoid lookups against the `resolver` for every generated identifier, if possible. The only case where this check seems like it is needed is [here]([URL] so incurring the cost of the lookup for *every* hoisted variable is unnecessary overhead.
I would still recommend that we add `addBlockVariableDeclaration` for this case, but we can mark it as `/* [USER] */` for now and revisit the API for custom transformer consumption later.",0,0,1,0,0,0,Nervousness,Worry,Concern/Worry -> Fear,,
webpack/webpack,pull_request,322592231,2019-09-10 7:35:36,sokra,"That looks suspicious. Should it be more like this:
``` js
const watchRunFinished = new Promise(resolve => {
compiler.hooks.watchRun.tap(""RemovedFilesTest"", compiler => {
const removals = Array.from(compiler.removedFiles);
expect(removals).toHaveLength(0);
resolve();
});
});
```","That looks suspicious. Should it be more like this:

[TRIPLE QUOTE].",0,0,1,0,0,0,Nervousness,worry,,,
webpack/webpack,pull_request,343607217,2019-11-07 11:42:20,vankop,"I think all files is unnecessary, plugins and webpack.js (as Node.js API) maybe.. don't know exactly","I think all files is unnecessary, plugins and webpack.js (as Node.js API) maybe.. don't know exactly",0,0,1,0,0,0,Nervousness,Worry,Concern,,
webpack/webpack,pull_request,343838539,2019-11-07 19:43:04,sokra,This change doesn't work correctly.,This change doesn't work correctly.,0,0,1,0,0,0,Nervousness,worry,,,
webpack/webpack,pull_request,343840578,2019-11-07 19:47:19,sokra,"Many attached types are missing here.

This seem to be a typescript bug.

Source file:

https://github.com/webpack/webpack/blob/df53aeaa0e10c7c342709344712150985699b1a8/lib/index.js#L19-L27","Many attached types are missing here.

This seem to be a typescript bug.

Source file:

[URL]",0,0,1,0,0,0,Nervousness,Worry,Concern/Worry -> Fear,,
webpack/webpack,pull_request,391751718,2020-03-12 16:44:59,alexander-akait,"Bug, i think it is breaking change","Bug, i think it is breaking change",0,0,1,0,0,0,Nervousness,Worry,Concern/Worry -> Fear,,
Microsoft/TypeScript,pull_request,498581436,2020-10-02 1:13:26,DanielRosenwasser,"Slightly afraid of all the places that are going to need to be patched up in the future to check like this, but I guess that's programming","Slightly afraid of all the places that are going to need to be patched up in the future to check like this, but I guess that's programming",0,0,1,0,0,0,Nervousness,worry,,,
Microsoft/TypeScript,pull_request,516378355,2020-11-03 1:08:54,amcasey,This might be a premature optimization. Happy to roll it back if people have concerns.,This might be a premature optimization. Happy to roll it back if people have concerns.,0,0,1,0,0,0,Nervousness,Worry,Concern/Worry -> Fear,,
Microsoft/TypeScript,pull_request,527286267,2020-11-20 0:08:48,amcasey,"I was worried that, if I declared it as something other than an expanded union, we might change the representation in the future, silently invalidating the test. For example, one can imagine specializing type comparison for string template types so that the union didn't have to be expanded. TBH, string template types hadn't occurred to me, but I did specifically avoid using conditional spreads.","I was worried that, if I declared it as something other than an expanded union, we might change the representation in the future, silently invalidating the test. For example, one can imagine specializing type comparison for string template types so that the union didn't have to be expanded. TBH, string template types hadn't occurred to me, but I did specifically avoid using conditional spreads.",0,0,1,0,0,0,Nervousness,Worry,Concern/Worry -> Fear,,
webpack/webpack,pull_request,537022104,2020-12-06 11:49:51,sokra,"Sorry that was a bit unclear. I'm not against the prefix. I was only complaining about the `Compilation finished` message, which is redundant to the `webpack compiled successfully` message in the stats output.

A prefix is good in general for all other messages...","Sorry that was a bit unclear. I'm not against the prefix. I was only complaining about the `Compilation finished` message, which is redundant to the `webpack compiled successfully` message in the stats output. A prefix is good in general for all other messages...",0,0,1,0,0,0,Nervousness,Worry,Concern (regarding the msg),,
Microsoft/TypeScript,pull_request,540428972,2020-12-10 19:13:49,weswigham,"You can still get duplicate reports with it in place if a comparison happens to show up multiple times in a program, and we do do some comparisons with `reportErrors` off only.","You can still get duplicate reports with it in place if a comparison happens to show up multiple times in a program, and we do do some comparisons with `reportErrors` off only.",0,0,1,0,0,0,Nervousness,Worry,Concern/Worry -> Fear,,
Microsoft/TypeScript,pull_request,551036875,2021-01-03 18:07:52,ajafff,I wondered why this change is necessary as there cannot be syntactic modifiers in JS files. In case you also wondered: it turns out this might be a bug: #42189,I wondered why this change is necessary as there cannot be syntactic modifiers in JS files. In case you also wondered: it turns out this might be a bug: #42189,0,0,1,0,0,0,Nervousness,Worry,Concern/Worry -> Fear,,
Microsoft/TypeScript,pull_request,553662723,2021-01-08 0:00:02,andrewbranch,"Also, whatever function this ends up using, it’s likely to be more expensive than the next couple conditions in this function, so this calculation should be moved to be the last.","Also, whatever function this ends up using, it’s likely to be more expensive than the next couple conditions in this function, so this calculation should be moved to be the last.",0,0,1,0,0,0,Nervousness,Worry,Concern -> Fear,,
Microsoft/TypeScript,pull_request,566674300,2021-01-29 9:05:42,jonhue,I'm sure there is a nicer (and safer!) way of determining whether the properties of a mapped type are optional. Right now I'm looking at the syntax node. But this approach does not work with `+?` for example.,I'm sure there is a nicer (and safer!) way of determining whether the properties of a mapped type are optional. Right now I'm looking at the syntax node. But this approach does not work with `+?` for example.,0,0,1,0,0,0,Nervousness,Worry,Concern (regarding the approach),1,
Microsoft/TypeScript,pull_request,568290121,2021-02-02 3:01:50,rbuckton,"You cannot rely on parents in transformers, prior transformations do not set them so they are likely to be `undefined`.","You cannot rely on parents in transformers, prior transformations do not set them so they are likely to be `undefined`.",0,0,1,0,0,0,Nervousness,Worry,Concern,,
Microsoft/TypeScript,pull_request,583047802,2021-02-25 17:59:30,andrewbranch,"I’m going to take a closer look at this implementation today, but first thing to note is that this test doesn’t actually generate the crash at #41925. I haven’t checked yet to see whether your changes do in fact fix that crash, but it seems like the test doesn’t actually prove that the linked bug is fixed.","I’m going to take a closer look at this implementation today, but first thing to note is that this test doesn’t actually generate the crash at #41925. I haven’t checked yet to see whether your changes do in fact fix that crash, but it seems like the test doesn’t actually prove that the linked bug is fixed.",0,0,1,0,0,0,Nervousness,Worry,Concern/Worry -> Fear,,
webpack/webpack,pull_request,597535481,2021-03-19 9:44:43,vladar,"I am maybe missing something but it seems to be a dead code anyways, because `this.watcher` is always `null` at this point so this `if` branch with `this.watcher.pause()` is actually never executed (see line 252)?

https://github.com/webpack/webpack/blob/f4ae05ecd62b30e8e7b44cd3e6dd5916bcdb9bc0/lib/Watching.js#L252-L266","I am maybe missing something but it seems to be a dead code anyways, because `this.watcher` is always `null` at this point so this `if` branch with `this.watcher.pause()` is actually never executed (see line 252)?

[URL]",0,0,1,0,0,0,Nervousness,Worry,Concern/Worry -> Fear,,
Microsoft/TypeScript,pull_request,608001823,2021-04-06 16:26:42,andrewbranch,"There are a couple failing tests now; I’m guessing some of this was still important. If I had to guess, I would say that this `else` block needs to be preserved for insertions where the next element is on a different line.","There are a couple failing tests now; I’m guessing some of this was still important. If I had to guess, I would say that this `else` block needs to be preserved for insertions where the next element is on a different line.",0,0,1,0,0,0,Nervousness,Worry,Concern/Worry -> Fear,,
Microsoft/TypeScript,pull_request,629544142,2021-05-10 17:31:24,snowystinger,"moved, though I'm not 100% on how I set up the tests for it
also, worried that while it fixes a bug, it's a bit breaking because it was added into es5 half a year ago","moved, though I'm not 100% on how I set up the tests for it also, worried that while it fixes a bug, it's a bit breaking because it was added into es5 half a year ago",0,0,1,0,0,0,Nervousness,Worry,Worried,,
angular/angular,pull_request,638232605,2021-05-24 19:50:52,AndrewKushnir,"I was thinking about this check more and I think this might actually become a source of flakes on CI. Also since this check would be invoked for each change and some URLs might become unreachable over time, we may end up with failing CI for main branches that would not be directly related to the changed code.

I think the check is still useful, but I'd propose making it a warning instead and log the findings to the output (avoid throwing an error). In this case we would have all the necessary info and tooling to do these cleanup once in a while, but avoid flakes and CI failures due to 3rd party websites availability.","I was thinking about this check more and I think this might actually become a source of flakes on CI. Also since this check would be invoked for each change and some URLs might become unreachable over time, we may end up with failing CI for main branches that would not be directly related to the changed code.

I think the check is still useful, but I'd propose making it a warning instead and log the findings to the output (avoid throwing an error). In this case we would have all the necessary info and tooling to do these cleanup once in a while, but avoid flakes and CI failures due to 3rd party websites availability.",0,0,1,0,0,0,Nervousness,Worry,Concern/Worry,,
flutter/flutter,pull_request,646820683,2021-06-07 17:55:36,goderbauer,Isn't it a bug if attributes or resources below is null here?,Isn't it a bug if attributes or resources below is null here?,0,0,1,0,0,0,Nervousness,Worry,Concern/Worry -> Fear,,
Microsoft/TypeScript,pull_request,646867180,2021-06-07 19:07:11,orta,"I don't think we can't do this, because it will be different depending on what the width of someone's terminal would be when running the tests (aka it'd be inconsistent)","I don't think we can't do this, because it will be different depending on what the width of someone's terminal would be when running the tests (aka it'd be inconsistent)",0,0,1,0,0,0,Nervousness,Worry,Concerned (about inconsistency),1,
Microsoft/TypeScript,pull_request,652170292,2021-06-15 21:37:00,sandersn,"I thought the problem was with `AssignmentDeclarationKind.ThisProperty`. Why is the new code in `None` instead? Is it because there's an existing PropertyDeclaration? The new code in `getSymbolForExpression` kind of looks like it's a fallback mode for when syntactic detection fails in the checker, which it shouldn't if it has succeeded in the binder. So maybe the fix needs to be to iron out some mismatch between the binder and checker.","I thought the problem was with `AssignmentDeclarationKind.ThisProperty`. Why is the new code in `None` instead? Is it because there's an existing PropertyDeclaration? The new code in `getSymbolForExpression` kind of looks like it's a fallback mode for when syntactic detection fails in the checker, which it shouldn't if it has succeeded in the binder. So maybe the fix needs to be to iron out some mismatch between the binder and checker.",0,0,1,0,0,0,Nervousness,Worry,Concern/Worry -> Fear,,
flutter/flutter,pull_request,652291343,2021-06-16 2:02:29,xu-baolin,Is this change still break the G-test or internal test?,Is this change still break the G-test or internal test?,0,0,1,0,0,0,Nervousness,worry,,,
angular/angular,pull_request,654710933,2021-06-18 23:24:09,alxhub,"This is getting a bit too clever... it seems we're relying on the fact that this returns `undefined` for all _other_ kinds of type nodes, correct? At the very least, we should have a comment here explaining:
1) what kinds of nodes we want to return `INELIGIBLE` for, and why.
2) the mechanism by which eligible nodes end up getting selected.","This is getting a bit too clever... it seems we're relying on the fact that this returns `undefined` for all _other_ kinds of type nodes, correct? At the very least, we should have a comment here explaining:
1) what kinds of nodes we want to return `INELIGIBLE` for, and why.
2) the mechanism by which eligible nodes end up getting selected.",0,0,1,0,0,0,Nervousness,Worry,Concern/Worry -> Fear,,
Microsoft/TypeScript,pull_request,655711946,2021-06-21 21:19:58,andrewbranch,You could certainly be seeing an artifact of the fourslash client 😬. Have you checked the behavior against a Real Editor?,You could certainly be seeing an artifact of the fourslash client 😬. Have you checked the behavior against a Real Editor?,0,0,1,0,0,0,Nervousness,,Nervousness,,
webpack/webpack,pull_request,655792163,2021-06-22 0:28:46,rockwalrus,"Depending on the synchronously-executed part of an API that's documented to return a `Promise` seems dangerous, and even before this patch error handling is broken if you try to do so. But I can still implement the synchronous `then()` if you'd like.","Depending on the synchronously-executed part of an API that's documented to return a `Promise` seems dangerous, and even before this patch error handling is broken if you try to do so. But I can still implement the synchronous `then()` if you'd like.",0,0,1,0,0,0,Nervousness,Worry,Concern/Worry -> Fear,,
webpack/webpack,pull_request,656114362,2021-06-22 11:07:40,alexander-akait,I'm afraid that it is breaking change,I'm afraid that it is breaking change,0,0,1,0,0,0,Nervousness,Worry,Concern/Worry -> Fear,,
flutter/flutter,pull_request,657419914,2021-06-23 19:57:48,yjbanov,Can we print a warning to nudge people to fix the lifecycles of their objects?,Can we print a warning to nudge people to fix the lifecycles of their objects?,0,0,1,0,0,0,Nervousness,Worry,Concern/Worry -> Fear,,
angular/angular,pull_request,659305436,2021-06-27 11:18:53,crisbeto,I think that this might not work if the array only has one element. Not sure if that can actually happen at runtime.,I think that this might not work if the array only has one element. Not sure if that can actually happen at runtime.,0,0,1,0,0,0,Nervousness,Worry,Worried (that it might not work),,
Microsoft/TypeScript,pull_request,662652274,2021-07-01 23:47:59,amcasey,This looks worse? It has `number[]` twice.,This looks worse? It has `number[]` twice.,0,0,1,0,0,0,Nervousness,Worry,Concern/Worry -> Fear,,
angular/angular,pull_request,665713857,2021-07-07 21:20:35,josephperrott,I am a bit torn on instructing people to read the comment for context. Would it be better to express the reasoning here instead?,I am a bit torn on instructing people to read the comment for context. Would it be better to express the reasoning here instead?,0,0,1,0,0,0,Nervousness,distress,,,
flutter/flutter,pull_request,666500391,2021-07-08 20:34:21,Piinks,"```suggestion
 /// normal speed of scrolling is not enough (or too fast) and needs to be
```

This sounds like it is a bug we should fix directly rather than through a parameter like this.","[TRIPLE QUOTE]. 

This sounds like it is a bug we should fix directly rather than through a parameter like this.",0,0,1,0,0,0,Nervousness,Worry,Concern (about the bug),1,
flutter/flutter,pull_request,669245883,2021-07-14 3:03:58,jiahaog,"I see, this makes sense if the intent is to make this explicit to the user. Will this affect other `testWidget` blocks though? If so we should probably use `addTearDown` within the implementation to reset this after the current test block runs to avoid things like order-dependent tests.","I see, this makes sense if the intent is to make this explicit to the user. Will this affect other `testWidget` blocks though? If so we should probably use `addTearDown` within the implementation to reset this after the current test block runs to avoid things like order-dependent tests.",0,0,1,0,0,0,Nervousness,Worry,Concern,,
angular/angular,pull_request,670851195,2021-07-15 22:43:32,dylhunn,"@dev054 Since that affects all methods in the package, rather than just the proposed new ones, it would need to be changed consistently everywhere. Please feel free to open an issue about this!","[USER] Since that affects all methods in the package, rather than just the proposed new ones, it would need to be changed consistently everywhere. Please feel free to open an issue about this!",0,0,1,0,0,0,Nervousness,worry,,,
angular/angular,pull_request,671744800,2021-07-17 21:18:07,dario-piotrowicz,"mh.... yeah I find that unlikely but I can see your point... I will think of something then to make this more robust... :slightly_smiling_face: unfortunately I am afraid I will have to also take into consideration vendor prefixes, so this can become quite more verbose and ugly :disappointed:","mh.... yeah I find that unlikely but I can see your point... I will think of something then to make this more robust... :slightly_smiling_face: unfortunately I am afraid I will have to also take into consideration vendor prefixes, so this can become quite more verbose and ugly :disappointed:",0,0,1,0,0,0,Nervousness,Worry,Afraid -> Fear/Worry,,
flutter/flutter,pull_request,678671514,2021-07-28 21:40:46,goderbauer,This sentence is hard to understand. Maybe rephrase?,This sentence is hard to understand. Maybe rephrase?,0,0,1,0,0,0,Nervousness,uneasiness,,,
flutter/flutter,pull_request,685384838,2021-08-09 17:26:34,jonahwilliams,aren't these Fuchsia specific too? Are they passing because they are working correctly or just passing by mistake?,aren't these Fuchsia specific too? Are they passing because they are working correctly or just passing by mistake?,0,0,1,0,0,0,Nervousness,Worry,Concern/Worry -> Fear,,
angular/angular,pull_request,691553976,2021-08-18 19:45:40,alxhub,I think we're introducing extra whitespace here?,I think we're introducing extra whitespace here?,0,0,1,0,0,0,Nervousness,Worry,Concern/Worry -> Fear,,
flutter/flutter,pull_request,691682727,2021-08-19 0:02:27,keyonghan,"It doesn't seem to be an easy change, cocoon is still using existing `updateRequest`, which is different from the properties defined in TaskResult. I prefer to have that change in a separate PR to avoid breaking anything before validating the effectiveness of the intended logic.
Created https://github.com/flutter/flutter/issues/88483 to track.","It doesn't seem to be an easy change, cocoon is still using existing `updateRequest`, which is different from the properties defined in TaskResult. I prefer to have that change in a separate PR to avoid breaking anything before validating the effectiveness of the intended logic. 
Created [URL] to track.",0,0,1,0,0,0,Nervousness,Worry,Concern/Worry,,
flutter/flutter,pull_request,692481694,2021-08-19 20:57:05,jpnurmi,"Not sure if it's intentional, but there's a test that specifies an output file without "".dart"" suffix:

https://github.com/flutter/flutter/blob/master/packages/flutter_tools/test/general.shard/generate_localizations_test.dart#L754","Not sure if it's intentional, but there's a test that specifies an output file without "".dart"" suffix:

[URL]",0,0,1,0,0,0,Nervousness,Worry,Concern/Worry -> Fear,,
angular/angular,pull_request,695142359,2021-08-24 19:30:49,Colinatorr,"Ouch my eyes hurt as I read what I wrote !
Anyway, the more I look into it, the harder it is for me to find a better wording...I think that the use of the future tense and the ""and"" made me wrongly believe that somehow the second part of the sentence was a consequence of the first one.
Maybe because it just happen that the browser doesn't wait for these operations, the use of the present tense would be more appropriate : _The HeroService must wait for the server to respond, getHeroes() cannot return immediately with hero data, and the browser does not block while the service waits._
If this proposition is not convincing, I think I will consider closing this PR: I would not want to overcomplicate the sentence because I alone mis-interpreted it.
Thank you for having taken the time to answer me 😃","Ouch my eyes hurt as I read what I wrote !
Anyway, the more I look into it, the harder it is for me to find a better wording...I think that the use of the future tense and the ""and"" made me wrongly believe that somehow the second part of the sentence was a consequence of the first one.
Maybe because it just happen that the browser doesn't wait for these operations, the use of the present tense would be more appropriate : _The HeroService must wait for the server to respond, getHeroes() cannot return immediately with hero data, and the browser does not block while the service waits._
If this proposition is not convincing, I think I will consider closing this PR: I would not want to overcomplicate the sentence because I alone mis-interpreted it.
Thank you for having taken the time to answer me 😃",0,0,1,0,0,0,Nervousness,Uneasiness,Uneasiness,,
flutter/flutter,pull_request,698729183,2021-08-30 18:56:44,justinmc,"I'm interested in what other reviewers think of this. In some cases multiple deltas are sent in one updateEditingValueWithDeltas, and in others just one is sent. Is this the cleanest way to do that?","I'm interested in what other reviewers think of this. In some cases multiple deltas are sent in one updateEditingValueWithDeltas, and in others just one is sent. Is this the cleanest way to do that?",0,0,1,0,0,0,Nervousness,Worry,Concern/Worry,1,
Microsoft/TypeScript,pull_request,698757630,2021-08-30 19:42:24,DanielRosenwasser,"It's already pretty hard to understand what these are for. I'd encourage us to start documenting what the use-cases for each of these are. For example.
```suggestion
/**
* An `unknown` type that is used purely for narrowing.
* Used to record that a `x !== null` check has occurred to specially handle `typeof x === ""object""`.
*/
const nonNullUnknownType = createIntrinsicType(TypeFlags.Unknown, ""unknown"");
```","It's already pretty hard to understand what these are for. I'd encourage us to start documenting what the use-cases for each of these are. For example.
[TRIPLE QUOTE].",0,0,1,0,0,0,Nervousness,worry,,,
flutter/flutter,pull_request,701433441,2021-09-02 21:25:55,gaaclarke,Wow 2 minutes? Doesn't that sound excessive?,Wow 2 minutes? Doesn't that sound excessive?,0,0,1,0,0,0,Nervousness,worry,,,
flutter/flutter,pull_request,705653059,2021-09-09 19:57:49,dnfield,Feel free to file a bug for that - that code has a history of breaking :\,Feel free to file a bug for that - that code has a history of breaking :\,0,0,1,0,0,0,Nervousness,worry,,,
flutter/flutter,pull_request,719854095,2021-10-01 0:10:05,christopherfujino,"I don't fully understand the value of this, especially if it means adding unused getters to the code. The documentation is: https://dart-lang.github.io/linter/lints/avoid_setters_without_getters.html

> Defining a setter without defining a corresponding getter can lead to logical inconsistencies. Doing this could allow you to set a property to some value, but then upon observing the property's value, it could easily be different.

With the example:

```
class Bad {
 int l, r;

 set length(int newLength) {
 r = l + newLength;
 }
}
```

In this example, the only way of ""observing the property's value"" is by accessing the value of `r`. It seems like a setter that really just assigns a value to a public property is the anti-pattern here.","I don't fully understand the value of this, especially if it means adding unused getters to the code. The documentation is: [URL]

[BLOCK QUOTE].

With the example:

[TRIPLE QUOTE].

In this example, the only way of ""observing the property's value"" is by accessing the value of `r`. It seems like a setter that really just assigns a value to a public property is the anti-pattern here.",0,0,1,0,0,0,Nervousness,Worry,Worry (about code structure),,
Microsoft/TypeScript,pull_request,720426290,2021-10-01 17:31:23,andrewbranch,"I think these are probably the same, but experience would advise not touching it if it’s not broken 😅","I think these are probably the same, but experience would advise not touching it if it’s not broken 😅",0,0,1,0,0,0,Nervousness,worry,,,
angular/angular,pull_request,723625280,2021-10-06 19:48:06,petebacondarwin,"We must not forget to add this at some point, although the text works without it.","We must not forget to add this at some point, although the text works without it.",0,0,1,0,0,0,Nervousness,Worry,Concern/Worry -> Fear,,
Microsoft/TypeScript,pull_request,724075575,2021-10-07 11:03:19,MartinJohns,"There's really no need to get so defensive, this wasn't meant as an attack or anything like that. I saw a discrepancy and voiced concern. Just ignoring the question and just closing it wasn't the nice way.
There are many different ways to solve this issue. Which way is a good one highly depends on the existing code base and the stance of the team regarding this, and my knowledge about the code base is very little.
- Make the `name` property of the existing interface optional.
- Add a new interface with the `name` property optional for this case.
- Use a null-object if an empty name is valid (might cause issues at different locations when a non-empty string is expected).
- Do the workaround just as you did.","There's really no need to get so defensive, this wasn't meant as an attack or anything like that. I saw a discrepancy and voiced concern. Just ignoring the question and just closing it wasn't the nice way.
There are many different ways to solve this issue. Which way is a good one highly depends on the existing code base and the stance of the team regarding this, and my knowledge about the code base is very little.
- Make the `name` property of the existing interface optional.
- Add a new interface with the `name` property optional for this case.
- Use a null-object if an empty name is valid (might cause issues at different locations when a non-empty string is expected).
- Do the workaround just as you did.",0,0,1,0,0,0,Nervousness,Worry,Concern/Worry -> Fear,,
angular/angular,pull_request,728460314,2021-10-13 21:28:05,dario-piotrowicz,@gkalpak am I overengineering the ts part? :sweat:,[USER] am I overengineering the ts part? :sweat:,0,0,1,0,0,0,Nervousness,worry,,,
angular/angular,pull_request,732863681,2021-10-20 14:52:36,gkalpak,"> but I would still need to get the string literal to stick to the left if you know what I mean
I don't, really 😅","[BLOCK QUOTE].
I don't, really 😅",0,0,1,0,0,0,Nervousness,,emoji → nervousness,,
Microsoft/TypeScript,pull_request,734095070,2021-10-21 22:46:35,andrewbranch,"Yeah. In order to trigger the bug, the symbol has to not exist by the meaning of the original lookup, but exist in the value meaning, _and_ it has to be part of a qualified name on the right-hand of an import equals, at least in the stack trace we're exclusively seeing in reports. I think the implicit assumption in this code was that if the symbol wasn't found in the lookup but exists by value, we must have been looking for a type, which of course is not true when we’re looking for namespaces exclusively.
There is definitely some logical cleanup that should ideally happen around that, but I’m a little concerned because it would fix this particular repro, but is pretty far removed from the root cause, so I’m not confident it would fix all instances of this crash. There could be some other entrypoint to it that doesn’t come from resolving an `import =` entity name.","Yeah. In order to trigger the bug, the symbol has to not exist by the meaning of the original lookup, but exist in the value meaning, _and_ it has to be part of a qualified name on the right-hand of an import equals, at least in the stack trace we're exclusively seeing in reports. I think the implicit assumption in this code was that if the symbol wasn't found in the lookup but exists by value, we must have been looking for a type, which of course is not true when we’re looking for namespaces exclusively.
There is definitely some logical cleanup that should ideally happen around that, but I’m a little concerned because it would fix this particular repro, but is pretty far removed from the root cause, so I’m not confident it would fix all instances of this crash. There could be some other entrypoint to it that doesn’t come from resolving an `import =` entity name.",0,0,1,0,0,0,Nervousness,Worry,Concern/Worry -> Fear,,
Microsoft/TypeScript,pull_request,734893712,2021-10-22 23:52:14,amcasey,"There's some danger that people will see this thousands of times when they first change the setting, but I'm a little reluctant to ""optimize"" it without some way to establish that the change helped. Probably better to keep it simple until we measure a problem.","There's some danger that people will see this thousands of times when they first change the setting, but I'm a little reluctant to ""optimize"" it without some way to establish that the change helped. Probably better to keep it simple until we measure a problem.",0,0,1,0,0,0,Nervousness,Worry,Concern/Worry -> Fear,,
Microsoft/TypeScript,pull_request,739482895,2021-10-29 19:26:10,andrewbranch,"I guess VS Code is ignoring this, but this doesn’t look right 🤔","I guess VS Code is ignoring this, but this doesn’t look right 🤔",0,0,1,0,0,0,Nervousness,worry,,,
angular/angular,pull_request,740377665,2021-11-01 17:04:01,jessicajaniuk,"Is this intentional? There's two docregions here with the same name, and the closing of them results in broken html.","Is this intentional? There's two docregions here with the same name, and the closing of them results in broken html.",0,0,1,0,0,0,Nervousness,worry,,,
webpack/webpack,issue,779330906,2021-02-15 16:29:22,sokra,Yes that's a problem.,Yes that's a problem.,0,0,1,0,0,0,Nervousness,Worry,Concern/Worry -> Fear,,
webpack/webpack,issue,781305449,2021-02-18 12:21:19,alexander-akait,"> What is the reason why it is not the solution to simply have the fallback option to be false by default?
> What is the reason why the error could not be turned into a warning - that the bundling would still just succeed?

Because it is unsafe","[BLOCK QUOTE].

Because it is unsafe",0,0,1,0,0,0,Nervousness,worry,,,
webpack/webpack,issue,796843409,2021-03-11 16:01:09,RReverser,"It's just that I'll be making a talk in the end of March that will be relying on a library that I can OSS only after this issue is resolved, and I'm getting a bit worried about this dependency chain and don't know what else to do on my side 😀 (meanwhile, I can point npm to my own fork for testing, but it won't be that helpful for other consumers of the said lib)","It's just that I'll be making a talk in the end of March that will be relying on a library that I can OSS only after this issue is resolved, and I'm getting a bit worried about this dependency chain and don't know what else to do on my side 😀 (meanwhile, I can point npm to my own fork for testing, but it won't be that helpful for other consumers of the said lib)",0,0,1,0,0,0,Nervousness,Worry,Worried,1,
webpack/webpack,issue,799565336,2021-03-15 16:37:54,alexander-akait,"> const tty = (process.stderr.isTTY && process.env.TERM !== ""dumb"") || process.env.TERM === ""tty"";

it is breaking change and potential break terminal for other developers, we can't do it","[BLOCK QUOTE].

it is breaking change and potential break terminal for other developers, we can't do it",0,0,1,0,0,0,Nervousness,Worry,Concern/Worry -> Fear,,
webpack/webpack,issue,804007892,2021-03-22 11:59:36,sokra,"Best avoid using contenthashes during development. This does have similar problems in other places, e. g. it writes a lot files into the filesystem (on disk or in memory).","Best avoid using contenthashes during development. This does have similar problems in other places, e. g. it writes a lot files into the filesystem (on disk or in memory).",0,0,1,0,0,0,Nervousness,worry,,,
webpack/webpack,issue,805014039,2021-03-23 15:48:41,Hinaser,"@alexander-akait I've just added a test. By the way, I took really hard time understanding how test works :tired_face:","[USER] I've just added a test. By the way, I took really hard time understanding how test works :tired_face:",0,0,1,0,0,0,Nervousness,Uneasiness,Uneasiness,,
webpack/webpack,issue,812886854,2021-04-03 16:12:52,jameswilddev,I am unsure why the lint test is failing - I have executed the command it suggests and it makes no further changes.,I am unsure why the lint test is failing - I have executed the command it suggests and it makes no further changes.,0,0,1,0,0,0,Nervousness,Distress,Distress (about the failure),,
webpack/webpack,issue,813032830,2021-04-04 13:26:24,vijaybritto,"I still see this issue, even with v5.30.0
```
<--- Last few GCs --->

[11748:0000014F070C2D20] 609288 ms: Scavenge 2026.2 (2051.8) -> 2025.4 (2051.8) MB, 8.6 / 0.0 ms (average mu = 0.297, current mu = 0.314) allocation failure
[11748:0000014F070C2D20] 609311 ms: Scavenge 2026.2 (2051.8) -> 2025.8 (2051.8) MB, 6.5 / 0.0 ms (average mu = 0.297, current mu = 0.314) allocation failure
[11748:0000014F070C2D20] 609328 ms: Scavenge 2026.3 (2051.8) -> 2026.2 (2052.3) MB, 11.1 / 0.0 ms (average mu = 0.297, current mu = 0.314) allocation failure


<--- JS stacktrace --->

FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory
 1: 00007FF76DF3CEDF v8::internal::wasm::DisjointAllocationPool::~DisjointAllocationPool+74383
 2: 00007FF76DEE5A16 v8::base::CPU::has_sse+62326
 3: 00007FF76DEE68B6 v8::base::CPU::has_sse+66070
 4: 00007FF76E74BBDE v8::Isolate::ReportExternalAllocationLimitReached+94
 5: 00007FF76E730DA4 v8::SharedArrayBuffer::Externalize+772
 6: 00007FF76E5EFF7C v8::internal::Heap::EphemeronKeyWriteBarrierFromCode+1452
 7: 00007FF76E5FB53A v8::internal::Heap::ProtectUnprotectedMemoryChunks+1258
 8: 00007FF76E5F8461 v8::internal::Heap::PageFlagsAreConsistent+3233
 9: 00007FF76E5ED665 v8::internal::Heap::CollectGarbage+1413
10: 00007FF76E5EBD15 v8::internal::Heap::AllocateExternalBackingStore+1397
11: 00007FF76E60CD4F v8::internal::Factory::NewFillerObject+191
12: 00007FF76E350E01 v8::internal::interpreter::JumpTableTargetOffsets::iterator::operator=+1409
13: 00007FF76E7D348D v8::internal::SetupIsolateDelegate::SetupHeap+465869
14: 00007FF76E76CD8A v8::internal::SetupIsolateDelegate::SetupHeap+46282
15: 000002C46B0CA664
error Command failed with exit code 134.
```","I still see this issue, even with v5.30.0
[TRIPLE QUOTE].",0,0,1,0,0,0,Nervousness,worry,,,
webpack/webpack,issue,826830753,2021-04-26 13:21:36,alexander-akait,"@NathanaelA Can you provide example? Yep, it may be bug","[USER] Can you provide example? Yep, it may be bug",0,0,1,0,0,0,Nervousness,Worry,Concern/Worry -> Fear,,
webpack/webpack,issue,834520801,2021-05-07 15:25:36,sokra,"Could you please create new issue if this is still a problem?

This issue is about webpack 3...","Could you please create new issue if this is still a problem?

This issue is about webpack 3...",0,0,1,0,0,0,Nervousness,worry,,,
webpack/webpack,issue,852588001,2021-06-02 0:19:53,ScriptedAlchemy,Bump - we still should address this it not already,Bump - we still should address this it not already,0,0,1,0,0,0,Nervousness,worry,,,
webpack/webpack,issue,868474298,2021-06-25 12:45:53,alexander-akait,"@tmeasday yep, I think we have critical perf bug here","[USER] yep, I think we have critical perf bug here",0,0,1,0,0,0,Nervousness,"Worry, Tenseness","Worry, Tenseness",,
webpack/webpack,issue,872187676,2021-07-01 12:03:35,alexander-akait,"I think we should print warning in this case, still valid","I think we should print warning in this case, still valid",0,0,1,0,0,0,Nervousness,Worry,Concern/Worry -> Fear,,
angular/angular,issue,872294314,2021-07-01 14:27:46,gabrielnvian,Still no solution to this?,Still no solution to this?,0,0,1,0,0,0,Nervousness,worry,,,
webpack/webpack,issue,872918157,2021-07-02 11:10:39,alexander-akait,"If you need fix ASAP, please provide, bug I think bug somewhere else","If you need fix ASAP, please provide, bug I think bug somewhere else",0,0,1,0,0,0,Nervousness,worry,,,
angular/angular,issue,879952810,2021-07-14 14:42:03,JoostK,"This seems like a bug, but it's unclear why this happens. Could you please provide a reproduction of the issue?","This seems like a bug, but it's unclear why this happens. Could you please provide a reproduction of the issue?",0,0,1,0,0,0,Nervousness,Worry,Worry regarding the bug,,
angular/angular,issue,882454990,2021-07-19 11:03:07,Samoji,Any updates? We really need this in our project 😢,Any updates? We really need this in our project 😢,0,0,1,0,0,0,Nervousness,worry,,,
angular/angular,issue,883501622,2021-07-20 15:50:12,petebacondarwin,"Hi @profilesonly - thank you for this clear explanation of you problems with finding documentation on how to integrate Angular with Firebase.

As you say there is https://github.com/angular/angularfire which has quite good docs. I am not sure what your concerns are about that library. It is probably the most up to date resource on such an integration.

Regarding the Angular team documenting this integration directly, I'm afraid that is not going to happen. There are lots of potential backends out there that can be accessed via Angular apps and it is beyond our ability to document them all. I would recommend using AngularFire and filing issues or feature requests with them if there are areas that do not work as you wish.","Hi [USER] - thank you for this clear explanation of you problems with finding documentation on how to integrate Angular with Firebase.

As you say there is https://github.com/angular/angularfire which has quite good docs. I am not sure what your concerns are about that library. It is probably the most up to date resource on such an integration.

Regarding the Angular team documenting this integration directly, I'm afraid that is not going to happen. There are lots of potential backends out there that can be accessed via Angular apps and it is beyond our ability to document them all. I would recommend using AngularFire and filing issues or feature requests with them if there are areas that do not work as you wish.",0,0,1,0,0,0,Nervousness,Worry,Concern/Worry,1,
webpack/webpack,issue,892556228,2021-08-04 10:44:21,vankop,should this even work.. spec disallow requesting directories..,should this even work.. spec disallow requesting directories..,0,0,1,0,0,0,Nervousness,worry,,,
Microsoft/TypeScript,issue,894847214,2021-08-08 19:57:50,sheetalkamat,This would happen if LS and server go out of sync and ls operation was invoked without synchronized data from project …,This would happen if LS and server go out of sync and ls operation was invoked without synchronized data from project …,0,0,1,0,0,0,Nervousness,Worry,Concern/Worry -> Fear,,
Microsoft/TypeScript,issue,895683218,2021-08-10 2:38:21,JoshuaKGoldberg,Err @RyanCavanaugh I think this is still a bug report,Err [USER] I think this is still a bug report,0,0,1,0,0,0,Nervousness,Worry,Concern/Worry -> Fear,,
angular/angular,issue,899533589,2021-08-16 13:58:42,IgorMinar,@SanderElias my concern with cutting corners here is that it would come at a high resource usage and high complexity (just the cache invalidation alone would be tricky to get right). But it is an idea with exploring more. Thanks for sharing.,[USER] my concern with cutting corners here is that it would come at a high resource usage and high complexity (just the cache invalidation alone would be tricky to get right). But it is an idea with exploring more. Thanks for sharing.,0,0,1,0,0,0,Nervousness,Worry,Concern/Worry -> Fear,,
Microsoft/TypeScript,issue,902346222,2021-08-20 0:42:37,mjbvz,Can you please revise the code example as markdown formatting messed up the original. I tried adding a fenced code block but it still looks weird,Can you please revise the code example as markdown formatting messed up the original. I tried adding a fenced code block but it still looks weird,0,0,1,0,0,0,Nervousness,worry,,,
Microsoft/TypeScript,issue,904020545,2021-08-23 18:45:10,iliazeus,"I am concerned about declaration emit, for the same reasons I described above.
Funnily enough, when I test it on the playground, JS emit preserves the radix, but not the .D.TS emit:
https://www.typescriptlang.org/play?ts=4.4.0-beta#code/KYDwDg9gTgLgBAYwgOwM7wLIHkAiBROAXjgAYIB2SgbgFgAoIA","I am concerned about declaration emit, for the same reasons I described above.
Funnily enough, when I test it on the playground, JS emit preserves the radix, but not the .D.TS emit:
[URL]",0,0,1,0,0,0,Nervousness,Worry,Concern/Worry -> Fear,,
angular/angular,issue,904133418,2021-08-23 21:08:43,nreid260,These failures look like TAP noise.,These failures look like TAP noise.,0,0,1,0,0,0,Nervousness,worry,,,
angular/angular,issue,904406981,2021-08-24 7:49:11,wh1t3cAt1k,"@petebacondarwin keenly tracking your activity in the PRs you mentioned and cheering for the success 👍👍👍👍
I just noticed that one of the two PRs targets the `compiler-cli`... Any chance that the transform could also be made available outside of the Angular compiler, as part of a standalone Zone package? If this is going to be supported, what will the required toolset look like?
(I am naturally worried about the future of framework-agnostic zone.js usage... Definitely would be a bummer to have to rewrite the whole application in Angular!)","[USER] keenly tracking your activity in the PRs you mentioned and cheering for the success 👍👍👍👍
I just noticed that one of the two PRs targets the `compiler-cli`... Any chance that the transform could also be made available outside of the Angular compiler, as part of a standalone Zone package? If this is going to be supported, what will the required toolset look like?
(I am naturally worried about the future of framework-agnostic zone.js usage... Definitely would be a bummer to have to rewrite the whole application in Angular!)",0,0,1,0,0,0,Nervousness,Worry,Worried -> Fear,,
Microsoft/TypeScript,issue,909740016,2021-08-31 23:56:07,mjbvz,This is more correct but I'm not sure it's better for UX. The inlay hint just for `(` seems quite easy to overlook and I am worried it will end up causing confusion about what is in the file and what isn't,This is more correct but I'm not sure it's better for UX. The inlay hint just for `(` seems quite easy to overlook and I am worried it will end up causing confusion about what is in the file and what isn't,0,0,1,0,0,0,Nervousness,Worry,Worry -> Fear,,
Microsoft/TypeScript,issue,910123241,2021-09-01 9:52:14,orta,"I'm afraid that would be over-stepping, as they are allowed in those modes: https://github.com/microsoft/TypeScript/issues/396#issuecomment-403903004","I'm afraid that would be over-stepping, as they are allowed in those modes: [URL]",0,0,1,0,0,0,Nervousness,Worry,Concern,,
Microsoft/TypeScript,issue,910458454,2021-09-01 16:38:27,andrewbranch,"On second thought, I don’t think we’d want the displays between these two scenarios to look too similar; as it is they kind of portray something fundamental about what’s going on. Needs some consideration.","On second thought, I don’t think we’d want the displays between these two scenarios to look too similar; as it is they kind of portray something fundamental about what’s going on. Needs some consideration.",0,0,1,0,0,0,Nervousness,Worry,Concern,,
Microsoft/TypeScript,issue,912711121,2021-09-03 17:56:12,Pyrolistical,I don't see how this is working as intended as `bugged` is **explicitly typed** `const bugged: Person[]`. Shouldn't the compiler reveal this contradiction? `Cannot assign any[] to Person[]`? I would agree this is working as intended if `bugged` was being _implicitly typed_ and was being inferred to be `any[]`.,I don't see how this is working as intended as `bugged` is **explicitly typed** `const bugged: Person[]`. Shouldn't the compiler reveal this contradiction? `Cannot assign any[] to Person[]`? I would agree this is working as intended if `bugged` was being _implicitly typed_ and was being inferred to be `any[]`.,0,0,1,0,0,0,Nervousness,Worry,Concern/Worry -> Fear,,
webpack/webpack,issue,917390173,2021-09-11 11:24:08,Tarnadas,"Bump.

What are you going to do regarding this issue? Is there an alternative library that could be used instead?","Bump.

What are you going to do regarding this issue? Is there an alternative library that could be used instead?",0,0,1,0,0,0,Nervousness,worry,,,
angular/angular,issue,919966458,2021-09-15 12:15:46,petebacondarwin,This is still broken in v12.,This is still broken in v12.,0,0,1,0,0,0,Nervousness,Worry,Worry (concerned abt sth on v12),,
Microsoft/TypeScript,issue,922984235,2021-09-20 14:32:09,StanislavKharchenko,"I second concerned about this.
What is the reason of such breaking changes in 4.4 version?","I second concerned about this.
What is the reason of such breaking changes in 4.4 version?",0,0,1,0,0,0,Nervousness,worry,,,
angular/angular,issue,924284753,2021-09-21 18:51:22,dylhunn,"> Any news on this?

I am currently spending 80% of my time on this. I cannot promise any specific dates, but the roadmap ***tentatively*** looks like this:

- September: finish implementation on the prototype. We will probably add a `FormTuple` class, but it's otherwise very close to complete. If you're curious, the in-progress commit is linked to this issue.
- October: check that google3 internal migration is seamless (simply adding explicit `<any>` type params at call sites should preserve the exact old behavior). If there are any big compatibility issues, we'll find them here.
- November: publish an RFC, with emphasis on important design questions (i.e. whether to capture `AbstractControl` types in the type parameters, the tradeoffs of `FormArray<string[]>` vs `FormArray<string>`, etc).
- November: publish a downloadable version of the package that people can swap in to try out, and collect info on whether it causes any breakages.
- May: ship it with v14, together with a migration schematic. I'm aware that this has slipped from v13 -- unfortunately, there's just not time for the RFC or google3 migration before v13.

Again, I can't promise these dates, but I think the schedule is reasonable. The biggest risk is that the google3 migration uncovers a show-stopping backwards incompatibility.","[BLOCK QUOTE].

I am currently spending 80% of my time on this. I cannot promise any specific dates, but the roadmap ***tentatively*** looks like this:

- September: finish implementation on the prototype. We will probably add a `FormTuple` class, but it's otherwise very close to complete. If you're curious, the in-progress commit is linked to this issue.
- October: check that google3 internal migration is seamless (simply adding explicit `<any>` type params at call sites should preserve the exact old behavior). If there are any big compatibility issues, we'll find them here.
- November: publish an RFC, with emphasis on important design questions (i.e. whether to capture `AbstractControl` types in the type parameters, the tradeoffs of `FormArray<string[]>` vs `FormArray<string>`, etc).
- November: publish a downloadable version of the package that people can swap in to try out, and collect info on whether it causes any breakages.
- May: ship it with v14, together with a migration schematic. I'm aware that this has slipped from v13 -- unfortunately, there's just not time for the RFC or google3 migration before v13.

Again, I can't promise these dates, but I think the schedule is reasonable. The biggest risk is that the google3 migration uncovers a show-stopping backwards incompatibility.",0,0,1,0,0,0,Nervousness,worry,,,
Microsoft/TypeScript,issue,926521260,2021-09-24 10:30:28,michaeljsmith,"> TS is not aiming to be safe and sound, the type checking of TS is more for convenience, that is why they make mixin this way.

The issue is that this check is actually making things less convenient :(","[BLOCK QUOTE]. 

The issue is that this check is actually making things less convenient :(",0,0,1,0,0,0,Nervousness,Distress,Distress (about the check),,
Microsoft/TypeScript,issue,927500074,2021-09-27 3:32:02,Jack-Works,"I have some worries about this. I'm using some API that is marked as `@internal` but still exported to the `ts` namespace because there is no choice. Those internal functions provide some critical abilities to make the job done. If everything turned to the module and bundled by things like Rollup, they'll become truly inaccessible.","I have some worries about this. I'm using some API that is marked as `@internal` but still exported to the `ts` namespace because there is no choice. Those internal functions provide some critical abilities to make the job done. If everything turned to the module and bundled by things like Rollup, they'll become truly inaccessible.",0,0,1,0,0,0,Nervousness,Worry,Concern,,
angular/angular,issue,927878060,2021-09-27 13:30:33,petebacondarwin,I'm afraid that you cannot mix and match versions of ngcc with the rest of the framework. You will need to update your project to v11.1 or later.,I'm afraid that you cannot mix and match versions of ngcc with the rest of the framework. You will need to update your project to v11.1 or later.,0,0,1,0,0,0,Nervousness,worry,,,
Microsoft/TypeScript,issue,928060555,2021-09-27 16:43:12,amcasey,"@DanielRosenwasser I'm probably missing something obvious, but why is the `getBasePaths` call a mistake?

Edit: The claim that it should use the absolute path is very plausible, but `getBasePaths` has a bunch of logic that suggests that it was expecting to handle relative paths.","[USER] I'm probably missing something obvious, but why is the `getBasePaths` call a mistake? 

Edit: The claim that it should use the absolute path is very plausible, but `getBasePaths` has a bunch of logic that suggests that it was expecting to handle relative paths.",0,0,1,0,0,0,Nervousness,Worry,Concerned/Worried (about missing sth),,
Microsoft/TypeScript,issue,929888883,2021-09-29 6:52:56,uhyo,"Personally I think TypeScript could allow receiving parameters that may not exist from rest parameters, similarly to how TypeScript currently allows accessing array elements that may not exist. Considering `noUncheckedIndexedAccess` in that case may be nicer. Either way, current behavior is unsafe, so a fix is desired.","Personally I think TypeScript could allow receiving parameters that may not exist from rest parameters, similarly to how TypeScript currently allows accessing array elements that may not exist. Considering `noUncheckedIndexedAccess` in that case may be nicer. Either way, current behavior is unsafe, so a fix is desired.",0,0,1,0,0,0,Nervousness,Worry,Concern/Worry -> Fear,,
Microsoft/TypeScript,issue,934839400,2021-10-05 21:09:44,DanielRosenwasser,"I understand these discussions can get frustrating - I encourage everyone to cool down for a bit. @MartinJohns and @fatcerberus are correct in their assessment. This is a duplicate of https://github.com/microsoft/TypeScript/issues/39065, a duplicate of https://github.com/microsoft/TypeScript/issues/38842, and probably more. We've made the design decision not to allow this code for the exact reasons discussed in this issue along with those issues. Object types are open (i.e. ""width"" subtyping) which means any object could have a property that it doesn't declare, and it's unsafe to narrow based on that.","I understand these discussions can get frustrating - I encourage everyone to cool down for a bit. [USER] and [USER] are correct in their assessment. This is a duplicate of [URL] a duplicate of [URL] and probably more. We've made the design decision not to allow this code for the exact reasons discussed in this issue along with those issues. Object types are open (i.e. ""width"" subtyping) which means any object could have a property that it doesn't declare, and it's unsafe to narrow based on that.",0,0,1,0,0,0,Nervousness,worry,,,
Microsoft/TypeScript,issue,940380780,2021-10-11 19:22:00,rbuckton,"Is this a breaking change though? It seems that the current implementation is a bug, and anyone relying on the non-spec-compliant behavior would have an issue if they switched to `--target es2015`. We wouldn't be changing documented behavior in any way, so it might be worth taking in the beta timeframe.","Is this a breaking change though? It seems that the current implementation is a bug, and anyone relying on the non-spec-compliant behavior would have an issue if they switched to `--target es2015`. We wouldn't be changing documented behavior in any way, so it might be worth taking in the beta timeframe.",0,0,1,0,0,0,Nervousness,worry,,,
Microsoft/TypeScript,issue,943832719,2021-10-14 23:18:21,andrewbranch,Fair to say I significantly underestimated how much work this feature would take 😅,Fair to say I significantly underestimated how much work this feature would take 😅,0,0,1,0,0,0,Nervousness,uneasiness,,,
Microsoft/TypeScript,issue,945148756,2021-10-17 15:50:39,jcalz,I know from #15300 that this is by design but I don’t know that I quite understand why. Is there a unique danger to allowing implicit index signatures for interface types? Merging new properties into existing interfaces seems like it could always break code that depends on these interfaces; I don’t really see the problem as being worse with implicit index signatures. Could someone enlighten me?,I know from #15300 that this is by design but I don’t know that I quite understand why. Is there a unique danger to allowing implicit index signatures for interface types? Merging new properties into existing interfaces seems like it could always break code that depends on these interfaces; I don’t really see the problem as being worse with implicit index signatures. Could someone enlighten me?,0,0,1,0,0,0,Nervousness,Worry,Concern/Worry -> Fear,,
flutter/flutter,issue,946417466,2021-10-19 6:53:17,danagbemava-nc,"The issue was never your code to begin with, it was likely something on the engine side, so I'm afraid that you may not find the reason","The issue was never your code to begin with, it was likely something on the engine side, so I'm afraid that you may not find the reason",0,0,1,0,0,0,Nervousness,worry,,,
webpack/webpack,issue,946662003,2021-10-19 12:15:35,robatwilliams,"Sorry, I wasn't ignoring that part of the template - I thought I had answered sufficiently.

This doesn't seem optimal as it stands, and using `named` would cause a large size increase.","Sorry, I wasn't ignoring that part of the template - I thought I had answered sufficiently.

This doesn't seem optimal as it stands, and using `named` would cause a large size increase.",0,0,1,0,0,0,Nervousness,Worry,Concern,1,
angular/angular,issue,947140526,2021-10-19 22:04:26,willydee,"@atscott just in case the feature request reaches the required upvotes *and* is considered an improvement, I took the liberty to already open a PR. Since this is the first time I'm tapping into the Angular sources, please forgive any stupidities on my side and just reject it if not deemed satisfactory or necessary.","[USER] just in case the feature request reaches the required upvotes *and* is considered an improvement, I took the liberty to already open a PR. Since this is the first time I'm tapping into the Angular sources, please forgive any stupidities on my side and just reject it if not deemed satisfactory or necessary.",0,0,1,0,0,0,Nervousness,Anxiety,Anxiety,1,
Microsoft/TypeScript,issue,947191315,2021-10-19 23:52:50,joyceerhl,"From talking with @eamodio my understanding is that the tar approach we have is essentially a workaround for the limitations of the GitHub text search APIs and should go away when the GitHub search APIs improve. It's not clear when the search APIs will be improved, but I slightly worry about whether we should really be exposing that and having TypeScript depend on that implementation.","From talking with [USER] my understanding is that the tar approach we have is essentially a workaround for the limitations of the GitHub text search APIs and should go away when the GitHub search APIs improve. It's not clear when the search APIs will be improved, but I slightly worry about whether we should really be exposing that and having TypeScript depend on that implementation.",0,0,1,0,0,0,Nervousness,worry,,,
flutter/flutter,issue,947668010,2021-10-20 13:28:19,bartekpacia,This issue need more attention.,This issue need more attention.,0,0,1,0,0,0,Nervousness,worry,,,
flutter/flutter,issue,948093511,2021-10-20 22:48:30,nt4f04uNd,"Trying to figure out what makes the tests fail. I can't check this locally, because they fail with same error for me even on master","Trying to figure out what makes the tests fail. I can't check this locally, because they fail with same error for me even on master",0,0,1,0,0,0,Nervousness,Anxiety,Anxiety,,
flutter/flutter,issue,948120013,2021-10-20 23:54:38,zanderso,"I was hoping to hear from the analyzer team how the additional lints came up by surprise. I think at the moment if we re-enabled the Dart rolls, we would just hit the same issue again since there were also lints beyond the ones from flutter_gallery.","I was hoping to hear from the analyzer team how the additional lints came up by surprise. I think at the moment if we re-enabled the Dart rolls, we would just hit the same issue again since there were also lints beyond the ones from flutter_gallery.",0,0,1,0,0,0,Nervousness,worry,,,
Microsoft/TypeScript,issue,948924239,2021-10-21 19:13:36,andrewbranch,`initializeTypeChecker` is kicking off work via `mergeSymbolTable` that ends up pulling on `globalObjectType` before it's initialized (later in `initializeTypeChecker`) 😱,`initializeTypeChecker` is kicking off work via `mergeSymbolTable` that ends up pulling on `globalObjectType` before it's initialized (later in `initializeTypeChecker`) 😱,0,0,1,0,0,0,Nervousness,worry,,,
flutter/flutter,issue,949356853,2021-10-22 7:19:19,chunfengyao,"> > 1. build add-to-app project with jenkins pipeline.
>
> Does the project run properly locally without using jenkins ? It sounds like an issue using pipeline and you may need to contact service provider for it.

It's not just occured with jenkins. when I start multiple tasks to build project with ""flutter build apk"" locally at same time. Problem still occured.","[BLOCK QUOTE].

It's not just occured with jenkins. when I start multiple tasks to build project with ""flutter build apk"" locally at same time. Problem still occured.",0,0,1,0,0,0,Nervousness,worry,,,
angular/angular,issue,949794606,2021-10-22 16:39:48,petebacondarwin,"Oh and just to clarify a few things...

The P labels are not the same as the priority that I mentioned above. Once a piece of work is deemed complex enough it has to go into our team prioritization process amid many other tasks, of which quite a few are not even visible publicly.

And also, open issues are never closed by any bot. Only closed issues that have not received activity for a long time are locked. This is a common misconception but I am not sure how we can communicate that better.","Oh and just to clarify a few things...

The P labels are not the same as the priority that I mentioned above. Once a piece of work is deemed complex enough it has to go into our team prioritization process amid many other tasks, of which quite a few are not even visible publicly.

And also, open issues are never closed by any bot. Only closed issues that have not received activity for a long time are locked. This is a common misconception but I am not sure how we can communicate that better.",0,0,1,0,0,0,Nervousness,worry,,,
Microsoft/TypeScript,issue,950534201,2021-10-25 5:13:06,frank-dspeed,"@rayfoss we can take your example to again show that a plugin/hook system like the one from rollup is badly neeeded.
you mixed linux shell script into your package.json as workaround.","[USER] we can take your example to again show that a plugin/hook system like the one from rollup is badly neeeded.
you mixed linux shell script into your package.json as workaround.",0,0,1,0,0,0,Nervousness,worry,,,
angular/angular,issue,950745708,2021-10-25 10:00:19,DimitriTsikaridze,"Tried it on Iphone 11 and visual bug was still there, but on Ipad air 2 it's not. I think it's with IOS mobile devices in general but I might be wrong","Tried it on Iphone 11 and visual bug was still there, but on Ipad air 2 it's not. I think it's with IOS mobile devices in general but I might be wrong",0,0,1,0,0,0,Nervousness,Worry,Concern/Worry -> Fear,,
flutter/flutter,issue,950888912,2021-10-25 12:47:09,nt4f04uNd,"Hi @darshankawar. It seems to me the other issue tracks documentation updates (thus P4 priority)

This one has reproducible steps and a code sample, and it seems to me that if the image cache leads to OOM this is a problem.

What do you think?","Hi [USER] It seems to me the other issue tracks documentation updates (thus P4 priority)

This one has reproducible steps and a code sample, and it seems to me that if the image cache leads to OOM this is a problem.

What do you think?",0,0,1,0,0,0,Nervousness,Worry,Concern/Worry -> Fear,,
flutter/flutter,issue,951604428,2021-10-26 6:31:36,darshankawar,"@warcayac
Yes. There's an issue in general with the stepper widget if we try to implement it horizontally and could be the root -cause, and using and not using keys are the variants of it. So it's better to follow in the original linked issue.","[USER]
Yes. There's an issue in general with the stepper widget if we try to implement it horizontally and could be the root -cause, and using and not using keys are the variants of it. So it's better to follow in the original linked issue.",0,0,1,0,0,0,Nervousness,worry,,,
flutter/flutter,issue,953221305,2021-10-27 18:58:42,CaseyHillers,"There aren't any breaking issues on the current rollout, but the elevated error rate is concerning. https://github.com/flutter/cocoon/pull/1418 should resolve the issues, and we can resume the rollouts.","There aren't any breaking issues on the current rollout, but the elevated error rate is concerning. [URL] should resolve the issues, and we can resume the rollouts.",0,0,1,0,0,0,Nervousness,worry,,,
angular/angular,issue,953498958,2021-10-28 4:47:11,fpaaske,"@jessicajaniuk could you share some insight into why this is a potentially breaking change? Maybe it could be addressed, instead of just closing the issue?","[USER] could you share some insight into why this is a potentially breaking change? Maybe it could be addressed, instead of just closing the issue?",0,0,1,0,0,0,Nervousness,Worry,Concern,1,
flutter/flutter,issue,953907569,2021-10-28 14:33:45,jeffmilanes,I'm experiencing this as well.,I'm experiencing this as well.,0,0,1,0,0,0,Nervousness,Worry,Concern/Worry -> Fear,,
flutter/flutter,issue,954617743,2021-10-29 10:06:18,namangor04,"I have this issue in my desktop app, but the issue occurs when the app is launched and the title bar of the app flickers till the app loads","I have this issue in my desktop app, but the issue occurs when the app is launched and the title bar of the app flickers till the app loads",0,0,1,0,0,0,Nervousness,worry,,,
flutter/flutter,issue,954898480,2021-10-29 16:56:16,HugoHeneault,"I am also encountering this issue when calling `evaluateJavascript `.
```
Flutter (Channel stable, 2.5.3, on macOS 12.0 21A344 darwin-arm, locale fr-FR)
• Flutter version 2.5.3 at /Users/hugo/fvm/versions/2.5.3
• Upstream repository https://github.com/flutter/flutter.git
• Framework revision 18116933e7 (2 weeks ago), 2021-10-15 10:46:35 -0700
• Engine revision d3ea636dc5
• Dart version 2.14.4
```
Has anyone found a workaround to avoid it? It's filling into my Sentry quite fast! 😅
Thanks alot!","I am also encountering this issue when calling `evaluateJavascript `.

[TRIPLE QUOTE].

Has anyone found a workaround to avoid it? It's filling into my Sentry quite fast! 😅
Thanks alot!",0,0,1,0,0,0,Nervousness,worry,,,
Microsoft/TypeScript,issue,955072061,2021-10-29 22:01:19,gabritto,The highlights were pretty much my only concern with placing the tab stops,The highlights were pretty much my only concern with placing the tab stops,0,0,1,0,0,0,Nervousness,Worry,Concern -> Fear,,
Microsoft/TypeScript,issue,955088324,2021-10-29 22:47:56,amcasey,"My primary concerns are (1) real-world usefulness and (2) consistency. For me, @mjbvz's actual user experience trumps most other considerations (barring an opposite opinion from some other user). I'm fine with never having tab-stops; I'd be reluctant to have tab-stops conditionally unless it's _really_ clear when you should expect them.","My primary concerns are (1) real-world usefulness and (2) consistency. For me, [USER] actual user experience trumps most other considerations (barring an opposite opinion from some other user). I'm fine with never having tab-stops; I'd be reluctant to have tab-stops conditionally unless it's _really_ clear when you should expect them.",0,0,1,0,0,0,Nervousness,worry,,,
Microsoft/TypeScript,issue,955199095,2021-10-30 12:09:34,orta,"JSDoc is used to only give type-hints in TypeScript and JavaScript files, not to direct how the syntax should change. I'm afraid any changes here would be massively breaking to the ecosystem, and break the TypeScript design guides which were mentioned in the issue template.","JSDoc is used to only give type-hints in TypeScript and JavaScript files, not to direct how the syntax should change. I'm afraid any changes here would be massively breaking to the ecosystem, and break the TypeScript design guides which were mentioned in the issue template.",0,0,1,0,0,0,Nervousness,worry,,,
angular/angular,issue,955576538,2021-10-30 18:49:46,EvanCarroll,This is going to just cause more questions now. I mean anyone writing an angular app that has to fork an angular library will be wondering how they build that angular library and get the code into their app. The assumption that this problem goes away because Angular supports workspaces won't hold true when the library is externally maintained.,This is going to just cause more questions now. I mean anyone writing an angular app that has to fork an angular library will be wondering how they build that angular library and get the code into their app. The assumption that this problem goes away because Angular supports workspaces won't hold true when the library is externally maintained.,0,0,1,0,0,0,Nervousness,Worry,Concern (about externally maintained libs),,
flutter/flutter,issue,955657476,2021-10-31 8:21:08,0xj0hn,"same problem for me
any suggestion for solve that?

some weeks ago, i updated flutter(it was 2.0.5 i guess) on flutter 2.0.5 it's working perfectly but it doesn't work on flutter 2.5.1","same problem for me
any suggestion for solve that?

some weeks ago, i updated flutter(it was 2.0.5 i guess) on flutter 2.0.5 it's working perfectly but it doesn't work on flutter 2.5.1",0,0,1,0,0,0,Nervousness,worry,,,
flutter/flutter,issue,956325678,2021-11-01 15:20:16,Doppelklick,"same issue with XIAOMI Redmi Note 7.

For me it's not device specific.","same issue with XIAOMI Redmi Note 7.

For me it's not device specific.",0,0,1,0,0,0,Nervousness,worry,,,
flutter/flutter,issue,956342935,2021-11-01 15:40:43,ChoiKarl,"@darshankawar It's in a production, and I can't reproduce it, but a lot of users crash because of it.","[USER] It's in a production, and I can't reproduce it, but a lot of users crash because of it.",0,0,1,0,0,0,Nervousness,worry,,,
angular/angular,issue,956420930,2021-11-01 17:13:25,perotom,"Our production builds are failing with the same error. Seems like we need to revert back to 12.0.1. ng v: ``` Angular CLI: 12.2.12 Node: 16.3.0 (Unsupported) Package Manager: npm 7.16.0 OS: darwin x64 Angular: 12.2.12 ... animations, cdk, cli, common, compiler, compiler-cli, core ... forms, google-maps, language-service, localize, material ... platform-browser, platform-browser-dynamic, router Package Version --------------------------------------------------------- @angular-devkit/architect 0.1202.12 @angular-devkit/build-angular 12.2.12 @angular-devkit/core 12.2.12 @angular-devkit/schematics 12.2.12 @angular/flex-layout 12.0.0-beta.35 @schematics/angular 12.2.12 rxjs 6.6.7 typescript 4.3.5 ```",Our production builds are failing with the same error. Seems like we need to revert back to 12.0.1. ng v: [TRIPLE QUOTE].,0,0,1,0,0,0,Nervousness,Worry,,,
flutter/flutter,issue,956443164,2021-11-01 17:43:04,LoadJulz,Same issue. Anyone has a solution? It just randomly appeared for me,Same issue. Anyone has a solution? It just randomly appeared for me,0,0,1,0,0,0,Nervousness,worry,,,
flutter/flutter,issue,958113929,2021-11-02 19:46:26,sigmundch,"Sorry I didn't notice it was using Roboto - I'm not sure to be honest for the reason of the failure. It was just a guess based on the previous time we had a similar issue where HHH bots were failung due to missed backup fonts, but failures could not be reproduced locally.

This makes me wonder about the other tests that fail because we were using Ahem. Could those tests be rewritten to use Roboto instead?

@yjbanov - I don't believe there is a way already, but we can explore expose some environment variable to skip conditionally only in HHH.

Meanwhile I'll close this PR.","Sorry I didn't notice it was using Roboto - I'm not sure to be honest for the reason of the failure. It was just a guess based on the previous time we had a similar issue where HHH bots were failung due to missed backup fonts, but failures could not be reproduced locally.

This makes me wonder about the other tests that fail because we were using Ahem. Could those tests be rewritten to use Roboto instead?

@yjbanov - I don't believe there is a way already, but we can explore expose some environment variable to skip conditionally only in HHH.

Meanwhile I'll close this PR.",0,0,1,0,0,0,Nervousness,Worry,Concern/Worry -> Fear,,
flutter/flutter,issue,960151101,2021-11-03 21:47:00,dnfield,"You are right, but we shouldnt' close this bug - something is wrong here, probably in devtools or Dart.","You are right, but we shouldnt' close this bug - something is wrong here, probably in devtools or Dart.",0,0,1,0,0,0,Nervousness,Worry,Concern/Worry -> Fear,,
flutter/flutter,issue,961325855,2021-11-04 18:51:45,Aristidios,@mdebbar Hi i've just switched and built on Master channel & glitch still happening,[USER] Hi i've just switched and built on Master channel & glitch still happening,0,0,1,0,0,0,Nervousness,worry,,,
angular/angular,issue,949907634,2021-10-22 19:29:03,michaelurban,"@petebacondarwin `@angular/*` packages seem to be very tightly controlled by Google. Why not communicate that `@angular/animations` is, and we can quibble about wording here, unmaintained. I'd wager that those who rely on it would like to know that it has been ""significantly de-prioritized"" quietly. Why not loudly request community or corporate support?
We know where the bugs, flaws, and deficits are. Not sounding the alarm about them outside of issue trackers and using an ""ALL ENGINES GO!"" tone in the documentation/communications is unhelpful and infuriating for the people who have to dig around in the code to see what's really going on.
I love Angular. However, the communication issues (policies?) combined with actual bugs make me understand why there's no amount of money most JS, React, and Vue developers can be paid to learn Angular.
It's a shame! Angular+NgRx are the best way to structure code for the web. I've described using Angular as running with rocks in my shoes. Very nice shoes that help you run very fast to be sure, but, the rocks eventually leave your toes bloody.
Angular has a lot of issues. More than most open source projects. While features like optional modules have been getting a lot of attention, modules are not one of the issues keeping developers from adopting or learning Angular. Poor communication, bugs, and moving slowly on common functionality/features large and small (Zone.js+async/await, no passive HostListeners w\o hacks, etc.) *are* keeping developers out.
It's also hard to get a deep insight into what's actually going on with Angular development. That information is scattered across GitHub, Twitter, Medium, a smattering of newsletters, courses, and videos, or, is internal to Google and not communicated to external developers at all.
The Angular blog hasn't been updated since early June and the Twitter account is often surface level DR/PR. Reading the Twitter account, the most robust Angular news aggregator, you'd have no idea that a major Angular package like animations is unmaintained. How do you stay truly informed?
From the outside it seems like the day-to-day problems/bugs are here to stay.
I've never seen a large open source project run like Angular. It's not working.
Here's a positive example: This is how I keep up to date with [Django](https://www.djangoproject.com/) development:
Typically there are a few posts similar to [this](https://www.djangoproject.com/weblog/2021/sep/21/django-40-alpha-1-released/) on the [homepage](https://www.djangoproject.com/) that contains a link to extensive, developer friendly, [release notes](https://docs.djangoproject.com/en/dev/releases/4.0/) for each release.
To compare, Angular's homepage does not feature the latest releases (LTR, latest, or dev/next) and Angular's [release notes](https://github.com/angular/angular/releases/tag/12.0.0) are less useful. New features link to, sometimes, several GitHub issues and release notes are not linked anywhere on the Angular homepage. I think this is by design? Hiding the version numbers to keep from scaring off new developers?
I think it's time for an Angular Foundation similar in structure to Django, Python, or GNOME's. Thoughts?","[USER] `@angular/*` packages seem to be very tightly controlled by Google. Why not communicate that `@angular/animations` is, and we can quibble about wording here, unmaintained. I'd wager that those who rely on it would like to know that it has been ""significantly de-prioritized"" quietly. Why not loudly request community or corporate support?
We know where the bugs, flaws, and deficits are. Not sounding the alarm about them outside of issue trackers and using an ""ALL ENGINES GO!"" tone in the documentation/communications is unhelpful and infuriating for the people who have to dig around in the code to see what's really going on.
I love Angular. However, the communication issues (policies?) combined with actual bugs make me understand why there's no amount of money most JS, React, and Vue developers can be paid to learn Angular.
It's a shame! Angular+NgRx are the best way to structure code for the web. I've described using Angular as running with rocks in my shoes. Very nice shoes that help you run very fast to be sure, but, the rocks eventually leave your toes bloody.
Angular has a lot of issues. More than most open source projects. While features like optional modules have been getting a lot of attention, modules are not one of the issues keeping developers from adopting or learning Angular. Poor communication, bugs, and moving slowly on common functionality/features large and small (Zone.js+async/await, no passive HostListeners w\o hacks, etc.) *are* keeping developers out.
It's also hard to get a deep insight into what's actually going on with Angular development. That information is scattered across GitHub, Twitter, Medium, a smattering of newsletters, courses, and videos, or, is internal to Google and not communicated to external developers at all.
The Angular blog hasn't been updated since early June and the Twitter account is often surface level DR/PR. Reading the Twitter account, the most robust Angular news aggregator, you'd have no idea that a major Angular package like animations is unmaintained. How do you stay truly informed?
From the outside it seems like the day-to-day problems/bugs are here to stay.
I've never seen a large open source project run like Angular. It's not working.
Here's a positive example: This is how I keep up to date with Django development:
Typically there are a few posts similar to this([URL]) on the [homepage](https://www.djangoproject.com/) that contains a link to extensive, developer friendly, release notes([URL]) for each release.
To compare, Angular's homepage does not feature the latest releases (LTR, latest, or dev/next) and Angular's [release notes]([URL]) are less useful. New features link to, sometimes, several GitHub issues and release notes are not linked anywhere on the Angular homepage. I think this is by design? Hiding the version numbers to keep from scaring off new developers?
I think it's time for an Angular Foundation similar in structure to Django, Python, or GNOME's. Thoughts?",0,0,1,0,1,0,"Nervousness, Disappoinment",Worry,Concern/Disappointment/Anger,,
angular/angular,issue,886568180,2021-07-26 10:14:49,bampakoa,"Thanks very much for your feedback @petebacondarwin. Your point is totally fair. My intention was to highlight that camelCase or dash-case class names are perfectly fine to use in Angular templates. Most people, especially beginners, do not know that and end up using the `ngClass` directive. Do you think that rewording the alert towards that direction would make sense?","Thanks very much for your feedback [USER] Your point is totally fair. My intention was to highlight that camelCase or dash-case class names are perfectly fine to use in Angular templates. Most people, especially beginners, do not know that and end up using the `ngClass` directive. Do you think that rewording the alert towards that direction would make sense?",0,1,0,0,0,0,Affection,Love,Heartful thanks -> gratitude -> love,,
flutter/flutter,issue,950480127,2021-10-25 2:53:57,GotJimmy,"> I was trying to fix the issue for my app for hours! I tried a lot of stuff, and I decided to try one last stupid thing before giving up, but it ended up working in my case!!
>
> I'm using FancyShimmerImage inside ListWheelScrollView, which is basically the CachedNetworkImage with a shimmer. I noticed the problem was only happening to me for the visible widgets in the ListWheelScrollView, but when scrolling to the parts where it starts hidden, those images were loading well. So I realized it happens just in the first rendering. Then I had what I thought was a stupid idea, that I set the errorWidget to be displayed in the CachedNetworkImage as the FancyShimmerImage itself, and it ended up that when it tries to load the image again it works.

Works perfectly that way! Thanks!","[BLOCK QUOTE].

Works perfectly that way! Thanks!",0,1,0,0,0,0,Affection,Love,gratitude → affection → love,,
angular/angular,issue,897560867,2021-08-12 11:28:04,SanderElias,"@alxhub Thanks for the quick answers! It is good to have this cleared out of the way.
I do like your clarification on how this is a different dynamic as using Angular elements.

>This is a cool idea, too. One of the concerns here is that it would require some notion of a template scope (what @NgModule provides today for statically compiled components) and that might get very tricky or messy to specify. But it could be done.

This would be the same thing as it is for stand-alone(module-less) components, or am I looking from the wrong side? Those problems need to be solved anyway for truly dynamic components as far as I can see.","[USER] Thanks for the quick answers! It is good to have this cleared out of the way.
I do like your clarification on how this is a different dynamic as using Angular elements.

[BLOCK QUOTE].

This would be the same thing as it is for stand-alone(module-less) components, or am I looking from the wrong side? Those problems need to be solved anyway for truly dynamic components as far as I can see.",0,1,0,0,0,0,Affection,Love,Thankful + Concern related to the problem,,
angular/angular,issue,878517138,2021-07-12 18:58:50,Splaktar,"@MrNocTV I don't think that it would be possible to get this fixed in Angular v8, but many thanks for investigating the root cause and posting info here.","[USER] I don't think that it would be possible to get this fixed in Angular v8, but many thanks for investigating the root cause and posting info here.",0,1,0,0,0,0,Affection,Love,Gratitude -> Love,,
flutter/flutter,pull_request,649409703,2021-06-10 18:02:47,ardera,oh nice! I tried to find one but couldn't,oh nice! I tried to find one but couldn't,0,1,0,0,0,0,Affection,liking,,,
Microsoft/TypeScript,pull_request,695111102,2021-08-24 18:44:07,a-tarasyuk,"Oke. Thanks. Wow, it was my 300th PR :).","Oke. Thanks. Wow, it was my 300th PR :).",0,1,0,0,0,0,Affection,Sentimentality,Happy,,
webpack/webpack,pull_request,94057267,2016-12-28 17:30:50,halfzebra,"@sokra my bad! Thanks for the suggestion, I have removed the leftovers from testing.","[USER] my bad! Thanks for the suggestion, I have removed the leftovers from testing.",0,1,0,0,0,0,Affection,love,Gratitude -> Love,1,
webpack/webpack,pull_request,94108066,2016-12-29 7:34:00,TheLarkInn,"No probs, thank you for double checking.","No probs, thank you for double checking.",0,1,0,0,0,0,Affection,love,Gratitude -> Love,1,
webpack/webpack,pull_request,94288011,2017-01-01 19:35:47,naknode,I made my first commit at 4AM :-) May be why! Thank you,I made my first commit at 4AM :-) May be why! Thank you,0,1,0,0,0,0,Affection,Love,Thankful,,
webpack/webpack,pull_request,94314710,2017-01-02 12:32:04,willmendesneto,Thanks for the feedback. Done,Thanks for the feedback. Done,0,1,0,0,0,0,Affection,love,Gratitude -> Love,1,
webpack/webpack,pull_request,94482514,2017-01-03 20:58:00,TheLarkInn,I'll wait on this one before merging. Nice work overall.,I'll wait on this one before merging. Nice work overall.,0,1,0,0,0,0,Affection,love,Gratitude -> Love,1,
webpack/webpack,pull_request,96147085,2017-01-15 20:34:25,timse,probably much more readable :D like that.,probably much more readable :D like that.,0,1,0,0,0,0,Affection,Liking,Liking,,
webpack/webpack,pull_request,132652883,2017-08-11 10:01:14,sokra,That's a great idea. A Tombstone object,That's a great idea. A Tombstone object,0,1,0,0,0,0,Affection,liking,,1,
webpack/webpack,pull_request,157323470,2017-12-16 0:00:55,TheLarkInn,I think I like your first suggestion because it allows us to keep the hooks in one place.,I think I like your first suggestion because it allows us to keep the hooks in one place.,0,1,0,0,0,0,Affection,liking,,,
webpack/webpack,pull_request,157376729,2017-12-17 19:03:15,EugeneHlushko,"hmm for some reason i thought it was opposite, updating. Thank you @ooflorent","hmm for some reason i thought it was opposite, updating. Thank you [USER]",0,1,0,0,0,0,Affection,Love,Gratitude -> Love,,
webpack/webpack,pull_request,161802761,2018-01-16 16:01:58,samccone,"neat, thanks for the tip.","neat, thanks for the tip.",0,1,0,0,0,0,Affection,Love,Love,1,
webpack/webpack,pull_request,166580511,2018-02-07 10:47:22,TrySound,"Oh, you didn't add composes and values. Well, I like it even more. Those features are hard to maintain.","Oh, you didn't add composes and values. Well, I like it even more. Those features are hard to maintain.",0,1,0,0,0,0,Affection,liking,,,
webpack/webpack,pull_request,178769538,2018-04-03 9:51:02,ooflorent,I prefer how Tobias wrote it. It is more expressive and easier to understand how it works.,I prefer how Tobias wrote it. It is more expressive and easier to understand how it works.,0,1,0,0,0,0,Affection,Liking,Appreciate/Liking,1,
webpack/webpack,pull_request,194542610,2018-06-11 20:47:40,Legends,"@mohsen1 If you need help, feel free to assign us to a respective project, sub-ticket we can work on.","[USER] If you need help, feel free to assign us to a respective project, sub-ticket we can work on.",0,1,0,0,0,0,Affection,Caring,Caring,,
webpack/webpack,pull_request,448856427,2020-07-02 9:02:10,sokra,"Interesting idea. That's worth trying. I think I refactor the whole thing in a way to not leak the parsed version into the API, so all this is webpack internal and can be changed in future.","Interesting idea. That's worth trying. I think I refactor the whole thing in a way to not leak the parsed version into the API, so all this is webpack internal and can be changed in future.",0,1,0,0,0,0,Affection,Liking,Liking,1,
Microsoft/TypeScript,pull_request,483824904,2020-09-04 20:09:47,andrewbranch,Thanks for the clarification 👍,Thanks for the clarification 👍,0,1,0,0,0,0,Affection,Love,Thankful,,
angular/angular,pull_request,499866755,2020-10-05 20:54:54,aahmedayed,ah! Got it @atscott thank you.,ah! Got it [USER] thank you.,0,1,0,0,0,0,Affection,love,Expressing Gratitude -> Love,,
Microsoft/TypeScript,pull_request,534503726,2020-12-02 21:48:32,TimvdLippe,"I love the subtlety of this fix and I keep on being amazed that DevTools ""fuzzes"" TypeScript 😂","I love the subtlety of this fix and I keep on being amazed that DevTools ""fuzzes"" TypeScript 😂",0,1,0,0,0,0,Affection,liking,,,
Microsoft/TypeScript,pull_request,550365711,2020-12-31 0:40:11,aminpaks,"Love it. how do we do that?
Update: Well you already explained. I'm gonna try to do it 😅","Love it. how do we do that?
Update: Well you already explained. I'm gonna try to do it 😅",0,1,0,0,0,0,Affection,Love,Love,,
Microsoft/TypeScript,pull_request,561371829,2021-01-20 23:19:23,sandersn,"in context, I think this is a pretty good name.","in context, I think this is a pretty good name.",0,1,0,0,0,0,Affection,Love,,,
angular/angular,pull_request,566340114,2021-01-28 19:07:45,zarend,"consider unit testing this function. It's a pure function which should make it easy to unit test, it's reusable, and it's non-trivial enough to warrant a test IMHO.","consider unit testing this function. It's a pure function which should make it easy to unit test, it's reusable, and it's non-trivial enough to warrant a test IMHO.",0,1,0,0,0,0,Affection,Love,,1,
angular/angular,pull_request,622142795,2021-04-28 12:45:51,kapunahelewong,🧐 awwww I have no idea how I managed that. Goodness! Thank you for catching this! 😁,🧐 awwww I have no idea how I managed that. Goodness! Thank you for catching this! 😁,0,1,0,0,0,0,Affection,Love,Thankful,,
angular/angular,pull_request,626115467,2021-05-04 21:20:34,kapunahelewong,Oh! Thank you!!! Actually fixed now. 🙃,Oh! Thank you!!! Actually fixed now. 🙃,0,1,0,0,0,0,Affection,Love,Expressing Gratitude -> Love,1,
angular/angular,pull_request,626601399,2021-05-05 14:10:14,kapunahelewong,"Pete answered here: https://github.com/angular/angular/pull/41485#discussion_r626552426. Thanks, both of you!","Pete answered here: [URL] Thanks, both of you!",0,1,0,0,0,0,Affection,Love,Thankful,,
angular/angular,pull_request,638742132,2021-05-25 12:30:23,devversion,I like the idea of having a class 👍,I like the idea of having a class 👍,0,1,0,0,0,0,Affection,Liking,Liking,,
flutter/flutter,pull_request,641696774,2021-05-28 17:09:51,pedromassango,"Wow, this was a tricky one. Thank you!","Wow, this was a tricky one. Thank you!",0,1,0,0,0,0,Affection,Love,,1,
angular/angular,pull_request,644409707,2021-06-03 0:53:37,IgorMinar,Interesting. Thanks for the explanation.,Interesting. Thanks for the explanation.,0,1,0,0,0,0,Affection,Love,Appreciate -> Love,,
flutter/flutter,pull_request,654631907,2021-06-18 19:10:56,Piinks,"This looks good, thanks for clarifying the docs.","This looks good, thanks for clarifying the docs.",0,1,0,0,0,0,Affection,Liking,Liking,1,
angular/angular,pull_request,665722743,2021-07-07 21:38:17,josephperrott,Just wanted to note that I appreciate this name to avoid the keyword `class`,Just wanted to note that I appreciate this name to avoid the keyword `class`,0,1,0,0,0,0,Affection,Love,,1,
angular/angular,pull_request,666535767,2021-07-08 21:40:13,IgorMinar,makes sense! thanks for the clarification.,makes sense! thanks for the clarification.,0,1,0,0,0,0,Affection,love,Expressing Gratitude -> Love,1,
flutter/flutter,pull_request,668308645,2021-07-12 22:54:45,justinmc,These are great tests and really helped me understand how this works 👍,These are great tests and really helped me understand how this works 👍,0,1,0,0,0,0,Affection,Love,Expressing Gratitude -> Love,1,
flutter/flutter,pull_request,669081074,2021-07-13 20:19:55,Piinks,These are much more helpful. I will update. :),These are much more helpful. I will update. :),0,1,0,0,0,0,Affection,liking,,,
angular/angular,pull_request,669849854,2021-07-14 18:21:16,zarend,"That's a good point, developers would find completing pipe arguments helpful (e.g. the `date` pipe). For inputs with square brackets we can only complete with strings. For pipe arguments, we can complete with strings, number literals, true, false, null and undefined.

Do you think we need separate scopes for pipe arguments and inputs without square brackets? or can we results for filter inputs without square brackets to only include strings?","That's a good point, developers would find completing pipe arguments helpful (e.g. the `date` pipe). For inputs with square brackets we can only complete with strings. For pipe arguments, we can complete with strings, number literals, true, false, null and undefined.

Do you think we need separate scopes for pipe arguments and inputs without square brackets? or can we results for filter inputs without square brackets to only include strings?",0,1,0,0,0,0,Affection,Love,Apprciation -> Love,,
flutter/flutter,pull_request,670758656,2021-07-15 19:45:51,LongCatIsLooong,Thanks for the detailed explanation!,Thanks for the detailed explanation!,0,1,0,0,0,0,Affection,Love,Expressing Gratitude -> Love,1,
webpack/webpack,pull_request,671451986,2021-07-16 18:31:54,alexander-akait,"let's look what @sokra answer, maybe it is not bad to have parser pinned, sometimes regressions happens","let's look what [USER] answer, maybe it is not bad to have parser pinned, sometimes regressions happens",0,1,0,0,0,0,Affection,Caring,Caring,,
angular/angular,pull_request,671822413,2021-07-18 10:48:09,dario-piotrowicz,"cool thank you very much both, I will amend this :smiley:","cool thank you very much both, I will amend this :smiley:",0,1,0,0,0,0,Affection,Love,Thankful,,
angular/angular,pull_request,675865624,2021-07-23 21:05:25,atscott,"👍 Awesome, looks good to me!","👍 Awesome, looks good to me!",0,1,0,0,0,0,Affection,Love,Love,,
angular/angular,pull_request,677784183,2021-07-27 20:40:49,dario-piotrowicz,awesome points! I will amend this sorry :bow:,awesome points! I will amend this sorry :bow:,0,1,0,0,0,0,Affection,love,Expressing Gratitude -> Love,,
angular/angular,pull_request,680570961,2021-08-01 21:52:01,dario-piotrowicz,"Ah wow! thank you so so very much for the clear explanation!!!! you're amazing as always! thanks so much!!! :slightly_smiling_face: ---
About your comment regarding the tsconfig file locations, my current solution uses the existing `.eslintrc.json` file so I'd imagine the tconfigs are relative to that one and don't cause issues, and it does lint the files inside the ts files inside the `firebase-test-utils` directory, I tested that by violating some rules there and getting indeed errors
But I understand that it could be beneficial to keep the directories self contained (especially after your explanation)
I will add an `.eslintrc.json` file there too then :slightly_smiling_face: , I think a good solution would just be to extend the existing `.eslintrc.json` (meaning `""extends"": ""../../.eslintrc.json""`), as that is also what the existing `tsconfig.json` does (
https://github.com/angular/angular/blob/0af354ce056c7e6254bd17a52d4199bf86f51c0e/aio/tools/firebase-test-utils/tsconfig.json#L2
)","Ah wow! thank you so so very much for the clear explanation!!!! you're amazing as always! thanks so much!!! :slightly_smiling_face: ---
About your comment regarding the tsconfig file locations, my current solution uses the existing `.eslintrc.json` file so I'd imagine the tconfigs are relative to that one and don't cause issues, and it does lint the files inside the ts files inside the `firebase-test-utils` directory, I tested that by violating some rules there and getting indeed errors
But I understand that it could be beneficial to keep the directories self contained (especially after your explanation)
I will add an `.eslintrc.json` file there too then :slightly_smiling_face: , I think a good solution would just be to extend the existing `.eslintrc.json` (meaning `""extends"": ""../../.eslintrc.json""`), as that is also what the existing `tsconfig.json` does (
[URL]
)",0,1,0,0,0,0,Affection,love,Expressing Gratitude -> Love,,
flutter/flutter,pull_request,681206232,2021-08-02 19:08:00,Piinks,"Oh I see, the rest was factored out of the assert. This is a really nice clean up.","Oh I see, the rest was factored out of the assert. This is a really nice clean up.",0,1,0,0,0,0,Affection,Liking,Liking,,
flutter/flutter,pull_request,681312224,2021-08-02 22:38:05,justinmc,"I think that's a pretty good, realistic example of this 👍","I think that's a pretty good, realistic example of this 👍",0,1,0,0,0,0,Affection,Liking,Liking,1,
angular/angular,pull_request,684418921,2021-08-06 18:10:42,AndrewKushnir,"Yeah, using `JSON.stringify()` might not be possible. My proposal is to rephrase the error string to be more explicit on what the problem is (currently it's quite unclear) without additional `JSON.stringify()` calls.","Yeah, using `JSON.stringify()` might not be possible. My proposal is to rephrase the error string to be more explicit on what the problem is (currently it's quite unclear) without additional `JSON.stringify()` calls.",0,1,0,0,0,0,Affection,Love,Liking,,
flutter/flutter,pull_request,687277770,2021-08-12 0:16:32,justinmc,"Ah, I was working around the fact that _localFocalPoint is `late` and won't be initialized on the first run here, so I can't grab the value out of it here.

I've updated it to an if/else that avoids the recalculation, let me know if you like the old way better.","Ah, I was working around the fact that _localFocalPoint is `late` and won't be initialized on the first run here, so I can't grab the value out of it here.

I've updated it to an if/else that avoids the recalculation, let me know if you like the old way better.",0,1,0,0,0,0,Affection,Caring,Caring,,
angular/angular,pull_request,688423762,2021-08-13 10:51:15,edodusi,"Correct, just fixed, thank you!","Correct, just fixed, thank you!",0,1,0,0,0,0,Affection,Love,Expressing Gratitude -> Love,1,
Microsoft/TypeScript,pull_request,690217023,2021-08-17 9:55:19,stkevintan,Thanks! I've extended a new parameter `autoWrap` to control whether or not to wrap the parameter automatically.,Thanks! I've extended a new parameter `autoWrap` to control whether or not to wrap the parameter automatically.,0,1,0,0,0,0,Affection,Love,Expressing Gratitude -> Love,1,
angular/angular,pull_request,690663413,2021-08-17 19:32:48,dario-piotrowicz,"awesome thanks a lot :slightly_smiling_face: I also see don't have a strong preference either way, but I am leaning a bit more on the second one, so since you're giving me carte blanche I'll go with that
thanks! :smiley:","awesome thanks a lot :slightly_smiling_face: I also see don't have a strong preference either way, but I am leaning a bit more on the second one, so since you're giving me carte blanche I'll go with that
thanks! :smiley:",0,1,0,0,0,0,Affection,Liking,Liking,,
angular/angular,pull_request,694266175,2021-08-23 19:55:48,Colinatorr,"Ah my bad! Thanks for your comment @gkalpak I think my confusion comes from the fact that I made the wrong assumption that part ""the browser will not block while the service waits"" was a consequence of the first part of the sentence. Here is a proposition of a new wording: _The HeroService must wait for the server to respond, getHeroes() cannot return immediately with hero data, and because the browser don't block while the service waits the heroes property won't be updated._
What do you think?","Ah my bad! Thanks for your comment [USER] I think my confusion comes from the fact that I made the wrong assumption that part ""the browser will not block while the service waits"" was a consequence of the first part of the sentence. Here is a proposition of a new wording: _The HeroService must wait for the server to respond, getHeroes() cannot return immediately with hero data, and because the browser don't block while the service waits the heroes property won't be updated._
What do you think?",0,1,0,0,0,0,Affection,love,gratitude → affection → love,1,
angular/angular,pull_request,694986103,2021-08-24 15:54:49,atscott,This is nice and clean! Awesome!,This is nice and clean! Awesome!,0,1,0,0,0,0,Affection,Love,,,
flutter/flutter,pull_request,698685297,2021-08-30 17:48:01,darrenaustin,"Nice, thanks for adding this missing shape parameter to this.","Nice, thanks for adding this missing shape parameter to this.",0,1,0,0,0,0,Affection,love,gratitude → affection → love,1,
flutter/flutter,pull_request,705777941,2021-09-09 23:05:01,justinmc,Thank you for documenting these quirks 🙏,Thank you for documenting these quirks 🙏,0,1,0,0,0,0,Affection,Love,,1,
flutter/flutter,pull_request,706383441,2021-09-10 18:20:58,Renzo-Olivares,"Thank you for this suggestion! Just made the change, the variable names are definitely more understandable now.","Thank you for this suggestion! Just made the change, the variable names are definitely more understandable now.",0,1,0,0,0,0,Affection,love,gratitude → affection → love,,
angular/angular,pull_request,708655866,2021-09-14 21:42:12,josmar-crwdstffng,@petebacondarwin Thank you for the confirmation.,[USER] Thank you for the confirmation.,0,1,0,0,0,0,Affection,love,gratitude → affection → love,,
Microsoft/TypeScript,pull_request,713436499,2021-09-21 21:35:38,acutmore,yep that is a much nicer way of doing it. Thanks Ron!,yep that is a much nicer way of doing it. Thanks Ron!,0,1,0,0,0,0,Affection,Love,Appreciate -> Love,,
Microsoft/TypeScript,pull_request,713918292,2021-09-22 13:02:08,hahmadia,Ya that's totally fair! I decided to add it for both test cases just for my own sanity that it narrows it down correctly. Appreciate the help and guidance 😄,Ya that's totally fair! I decided to add it for both test cases just for my own sanity that it narrows it down correctly. Appreciate the help and guidance 😄,0,1,0,0,0,0,Affection,Love,Grateful -> Love,1,
angular/angular,pull_request,719360325,2021-09-30 12:35:51,IgorMinar,"sweet! I love what you did here @devversion, the assertions are much nicer after JSON.parse. Awesome!","sweet! I love what you did here [USER], the assertions are much nicer after JSON.parse. Awesome!",0,1,0,0,0,0,Affection,Love,Love,1,
angular/angular,pull_request,719423176,2021-09-30 13:45:32,IgorMinar,YEEESSSSSS!!!!!!! THANK YOU ❤️,YEEESSSSSS!!!!!!! THANK YOU ❤️,0,1,0,0,0,0,Affection,love,gratitude → affection → love,,
angular/angular,pull_request,719432207,2021-09-30 13:54:38,IgorMinar,thank you for adding the lint rule. 🙇🏻,thank you for adding the lint rule. 🙇🏻,0,1,0,0,0,0,Affection,Love,,,
webpack/webpack,pull_request,722474737,2021-10-05 17:50:43,markjm,"I definitely agree that the name is confusing, but couldnt think of a great way to create a new variable which remains backward compatible. Let me give it another go. I like the suggestions you gave above","I definitely agree that the name is confusing, but couldnt think of a great way to create a new variable which remains backward compatible. Let me give it another go. I like the suggestions you gave above",0,1,0,0,0,0,Affection,Love,,,
Microsoft/TypeScript,pull_request,724089127,2021-10-07 11:25:12,a-tarasyuk,"@MartinJohns Ok. I've closed PR. If you have any interest in fixing this issue, I would be very grateful for that. 👍🏻","[USER] Ok. I've closed PR. If you have any interest in fixing this issue, I would be very grateful for that. 👍🏻",0,1,0,0,0,0,Affection,Love,Gratitude (for future work) -> Love,1,
Microsoft/TypeScript,pull_request,724371984,2021-10-07 17:03:56,amcasey,Thanks for the detailed comment!,Thanks for the detailed comment!,0,1,0,0,0,0,Affection,Love,Gratitude -> Love,,
Microsoft/TypeScript,pull_request,725279828,2021-10-08 20:22:07,sandersn,"Thanks, that explanation makes sense.","Thanks, that explanation makes sense.",0,1,0,0,0,0,Affection,love,gratitude → affection → love,1,
flutter/flutter,pull_request,726535928,2021-10-11 20:00:22,Hixie,"@Zazo032 thanks for your excellent code review, I totally missed both of those.","[USER] thanks for your excellent code review, I totally missed both of those.",0,1,0,0,0,0,Affection,love,gratitude → affection → love,,
angular/angular,pull_request,730143882,2021-10-15 21:54:14,dario-piotrowicz,"Your changes do seem to be doing the trick and the tests pass with them, thank you very much, I committed them
(but I will need to come back to this tomorrow with a clearer head and reason about this stuff to understand the logic better :sweat_smile:)","Your changes do seem to be doing the trick and the tests pass with them, thank you very much, I committed them
(but I will need to come back to this tomorrow with a clearer head and reason about this stuff to understand the logic better :sweat_smile:)",0,1,0,0,0,0,Affection,Love,Appreciate -> Love,,
angular/angular,pull_request,730264646,2021-10-16 13:36:57,gkalpak,Either way works for me. Up to you :smiley:,Either way works for me. Up to you :smiley:,0,1,0,0,0,0,Affection,Love,Liking,,
flutter/flutter,pull_request,732155277,2021-10-19 18:53:39,CaseyHillers,Thanks for the picture. This is great context that should be added as a comment,Thanks for the picture. This is great context that should be added as a comment,0,1,0,0,0,0,Affection,Love,Gratitude -> Love,,
Microsoft/TypeScript,pull_request,733987019,2021-10-21 19:31:03,gabritto,thanks for explaining your thought process! 😊,thanks for explaining your thought process! 😊,0,1,0,0,0,0,Affection,love,gratitude → affection → love,1,
angular/angular,pull_request,738369609,2021-10-28 13:05:49,gkalpak,"Your approach looks fine to me :smiley:
The only thing is that the last part, `(?<!\d)}` would incorrectly skip (i.e. not escape) something like `x1}`. So you could make it more strict with `(?<!{\d+)}`. You can also simplify the middle part:
```suggestion
const partiallyEscapedString = str.replace(/(?:[.?*+\\|^$()[\]])|{(?!\d+})|(?<!{\d+)}/g, '\\$&');
```
Other than that, looks great 👏","Your approach looks fine to me :smiley: The only thing is that the last part, `(?<!\d)}` would incorrectly skip (i.e. not escape) something like `x1}`. So you could make it more strict with `(?<!{\d+)}`. You can also simplify the middle part: 

[TRIPLE QUOTE]. 

Other than that, looks great 👏",0,1,0,0,0,0,Affection,Love,Appreciation -> Love,1,
angular/angular,pull_request,738877939,2021-10-29 1:38:24,IgorMinar,"I love this!!!! George, you are awesome! 😄","I love this!!!! George, you are awesome! 😄",0,1,0,0,0,0,Affection,Love,Love,1,
flutter/flutter,pull_request,742167525,2021-11-03 17:17:36,jmagman,"You saved me a few minutes of head-scratching staring at that URL, I appreciate it!","You saved me a few minutes of head-scratching staring at that URL, I appreciate it!",0,1,0,0,0,0,Affection,love,Expressing Gratitude -> Love,1,
flutter/flutter,pull_request,742261922,2021-11-03 19:22:52,TahaTesser,"That is an awesome description, thanks!","That is an awesome description, thanks!",0,1,0,0,0,0,Affection,love,Expressing Gratitude -> Love,1,
flutter/flutter,pull_request,742420050,2021-11-03 23:23:20,TahaTesser,"That's a great resource, I will keep in mind for future PRs","That's a great resource, I will keep in mind for future PRs",0,1,0,0,0,0,Affection,liking,,,
webpack/webpack,issue,778857943,2021-02-14 23:10:55,rubenlg,"Wow, thanks for the super speedy fix!!","Wow, thanks for the super speedy fix!!",0,1,0,0,0,0,Affection,Love,Expressing Gratitude -> Love,1,
webpack/webpack,issue,782738270,2021-02-20 19:38:38,addejans,I had the same issue and this solution worked as well. Thanks!,I had the same issue and this solution worked as well. Thanks!,0,1,0,0,0,0,Affection,love,Expressing Gratitude -> Love,1,
webpack/webpack,issue,785228921,2021-02-24 17:08:33,huiyifyj,"> You don't need it, webpack-cli automatically apply `@babel/register` on `.babel.js` files, anyway if you still have problems with migration please open an issue in `webpack-cli` repo

Thanks for your reply. 👍","[BLOCK QUOTE].

Thanks for your reply. 👍",0,1,0,0,0,0,Affection,love,gratitude → affection → love,1,
webpack/webpack,issue,798661094,2021-03-13 17:24:05,rigor789,"@alexander-akait Thanks for looking into it - got me worried for a second there! 😆 If you can point me in the right direction, I'm happy to work on the fix!","[USER] Thanks for looking into it - got me worried for a second there! 😆 If you can point me in the right direction, I'm happy to work on the fix!",0,1,0,0,0,0,Affection,Liking,Liking,1,
webpack/webpack,issue,799657438,2021-03-15 18:39:19,xiaoxiaojx,"cool, I also need this feature, I'll mention a mr, thanks
https://github.com/webpack/webpack/pull/12902","cool, I also need this feature, I'll mention a mr, thanks
[URL]",0,1,0,0,0,0,Affection,love,gratitude → affection → love,,
webpack/webpack,issue,801040354,2021-03-17 12:24:58,vladimir-tikhonov,"@alexander-akait huh, my bad, for some reason I thought that those are related. Thanks for the help!","[USER] huh, my bad, for some reason I thought that those are related. Thanks for the help!",0,1,0,0,0,0,Affection,Love,Appreciate -> Love,,
webpack/webpack,issue,814075994,2021-04-06 12:21:53,vincaslt,"Wow, nice job, thank you!","Wow, nice job, thank you!",0,1,0,0,0,0,Affection,love,gratitude → affection → love,1,
webpack/webpack,issue,814922668,2021-04-07 13:39:58,doberkofler,As always: amazing!,As always: amazing!,0,1,0,0,0,0,Affection,Love,Gratitude -> Love,,
webpack/webpack,issue,820860978,2021-04-16 2:18:45,iPherian,@sokra wow thanks for the quick fix! Works in my actual project too. 😄🙏,[USER] wow thanks for the quick fix! Works in my actual project too. 😄🙏,0,1,0,0,0,0,Affection,love,gratitude → affection → love,,
webpack/webpack,issue,824996153,2021-04-22 16:31:40,JonathanLorimer,"Yes, thank you for your help!","Yes, thank you for your help!",0,1,0,0,0,0,Affection,Love,Appreciate -> Love,,
webpack/webpack,issue,836388588,2021-05-10 8:45:30,koto,"Thanks for the review and the changes, @sokra! Let me know if I can help with the followup e.g. documentation.","Thanks for the review and the changes, [USER] Let me know if I can help with the followup e.g. documentation.",0,1,0,0,0,0,Affection,love,gratitude → affection → love,,
webpack/webpack,issue,855579551,2021-06-07 5:06:18,RA80533,"> @SkReD we found the problem... to be honest, this is not really a problem, `terser-webpack-plugin` v4 and less versions used `cacache` package for caching (https://github.com/webpack-contrib/terser-webpack-plugin/blob/v4.2.3/package.json#L44) due webpack v4 doesn't have cache API, in webpack v5 we have cache API so we migrated away from `cacache` in favor webpack cache API, but here is the difference: `cacache` **always** used `filesystem` cache, but webpack by default uses `memory` API in `development` mode (https://github.com/webpack/webpack/blob/master/lib/config/defaults.js#L163), so between runs you have small regression in build time, if you want to do the same behavior as was before you need to set `cache: { type: ""filesystem"" }` (maybe it will be by default in webpack v6).
>
> With `cache: { type: ""filesystem"" }` my output:
>
> ```
> webpack 4: 4.163436799705028 seconds
> webpack 5: 0.6052136874079704 seconds
> ```
>
> it is real very fast, I recommend use it

Beautiful. Thank you for posting your solution.","[BLOCK QUOTE].

Beautiful. Thank you for posting your solution.",0,1,0,0,0,0,Affection,Love,,,
webpack/webpack,issue,868198011,2021-06-25 4:38:27,adamtay,Bumping this as it would still be highly desirable.,Bumping this as it would still be highly desirable.,0,1,0,0,0,0,Affection,liking,,,
webpack/webpack,issue,869399296,2021-06-28 6:31:01,csvan,"@sokra thanks for clarifying, will see what I can do","[USER] thanks for clarifying, will see what I can do",0,1,0,0,0,0,Affection,Love,Thankful -> Love,1,
webpack/webpack,issue,873405299,2021-07-03 13:04:30,alexander-akait,"Thanks for feedback, we will fix it","Thanks for feedback, we will fix it",0,1,0,0,0,0,Affection,Love,Gratitude -> Love,,
angular/angular,issue,876631362,2021-07-08 17:53:04,AndrewKushnir,"@alan-agius4 great, thanks for looking into this!","[USER] great, thanks for looking into this!",0,1,0,0,0,0,Affection,Love,Thankful -> Love,,
angular/angular,issue,876702129,2021-07-08 19:51:57,aahmedayed,"HI @atscott - Sorry for the delay I’m taking some days off, I’ll be back Monday. Thank you for all the fixes you made.","HI [USER] - Sorry for the delay I’m taking some days off, I’ll be back Monday. Thank you for all the fixes you made.",0,1,0,0,0,0,Affection,love,gratitude → affection → love,1,
webpack/webpack,issue,881382679,2021-07-16 11:36:03,p3x-robot,"wow, thanks so much! it works out of the box! soo good! you are super man by now :)))","wow, thanks so much! it works out of the box! soo good! you are super man by now :)))",0,1,0,0,0,0,Affection,Love,Thankful -> Love,1,
webpack/webpack,issue,881527843,2021-07-16 15:20:59,xtuc,"Great, thanks for your help!","Great, thanks for your help!",0,1,0,0,0,0,Affection,Love,Love,,
angular/angular,issue,881674589,2021-07-16 19:37:58,karptonite,"@JoostK thanks, I was only asking for clarification because you closed the issue as “fixed in Ivy”. I’m not actually using mixins because they were previously unsupported.","[USER] thanks, I was only asking for clarification because you closed the issue as “fixed in Ivy”. I’m not actually using mixins because they were previously unsupported.",0,1,0,0,0,0,Affection,love,gratitude → affection → love,,
angular/angular,issue,881869116,2021-07-17 9:46:05,dario-piotrowicz,"> Heya, sorry it took me a while to respond. I think I understand what you mean in your last comment about parameter normalization and I agree that it's a different issue, so no need to worry about that in this PR. I think I agree with your analysis that numeric parameters should not cause normalization failures due to a hidden conversion to strings.
Ah no worries, sorry for bothering you, I was just afraid you forgot about this PR :sweat_smile:
(I really really hope I didn't bother you :sweat: )
Thanks for the confirmation on the other thing, I will keep it in mind then :slightly_smiling_face:","[BLOCK QUOTE].
Ah no worries, sorry for bothering you, I was just afraid you forgot about this PR :sweat_smile:
(I really really hope I didn't bother you :sweat: )
Thanks for the confirmation on the other thing, I will keep it in mind then :slightly_smiling_face:",0,1,0,0,0,0,Affection,love,gratitude → affection → love,,
webpack/webpack,issue,884893259,2021-07-22 13:01:34,jacobp100,@sokra Thanks - that works surprisingly well! I'll assume you don't need the PR any more - but I'm happy to continue with it if you do need it (for other reasons etc.),[USER] Thanks - that works surprisingly well! I'll assume you don't need the PR any more - but I'm happy to continue with it if you do need it (for other reasons etc.),0,1,0,0,0,0,Affection,Love,Gratitude -> Love,1,
angular/angular,issue,885061600,2021-07-22 16:49:36,devversion,@josephperrott Awesome. Thanks 🎉,[USER] Awesome. Thanks 🎉,0,1,0,0,0,0,Affection,Love,Love,,
angular/angular,issue,888950926,2021-07-29 9:16:34,e-oz,Delicious! Thank you very much for this 👍,Delicious! Thank you very much for this 👍,0,1,0,0,0,0,Affection,Love,Thankful,,
webpack/webpack,issue,893553609,2021-08-05 15:30:45,gretzkiy,@alexander-akait many thanks,[USER] many thanks,0,1,0,0,0,0,Affection,Love,Love,,
Microsoft/TypeScript,issue,897390797,2021-08-12 6:46:02,ferjul17,"Yes, you're right, thank you!","Yes, you're right, thank you!",0,1,0,0,0,0,Affection,Love,Gratitude -> Love,1,
angular/angular,issue,897934488,2021-08-12 20:09:37,sg-gdarnell,"I love this, it's basically what I always hoped Ivy would enable.
However, I'm confused about how updates will work. I realize the syntax is nowhere close to final, but I'll use it as a reference for discussion.
In the example, if you used plain JavaScript expressions (`if`, `switch`, `for`, etc.) in your createView() call instead of `NgIf`, `NgSwitch`, `NgFor`, etc., wouldn't you have to destroy and recreate your view each time your context changed (expensive)? If you limited yourself to using the built-in structural directives instead then you could simply pass a new context to your embedded view, but I can imagine that devs familiar with React might assume that plain expressions would ""just work"" as they do in React, which might be a pain point.
If we do need to limit ourselves to using structural directives over plain expressions then it may be appropriate to provide some helper functions for the built-in stuff, so maybe instead of this:
```
template([
text(""some details"")
], {directives: [
directive(NgIf, {binding: () => myContext.showDetails})
]})
```
You could do:
```
ngIfTemplate(
[text(""some details"")],
() => myContext.showDetails
)
```
Of course, the community could build helper functions like that themselves. My main concern is that the way expressions restrict the ability to update a view may trip people up.
Thanks for sharing this openly! I'm excited for all the things a more dynamic Angular could bring.","I love this, it's basically what I always hoped Ivy would enable.
However, I'm confused about how updates will work. I realize the syntax is nowhere close to final, but I'll use it as a reference for discussion.
In the example, if you used plain JavaScript expressions (`if`, `switch`, `for`, etc.) in your createView() call instead of `NgIf`, `NgSwitch`, `NgFor`, etc., wouldn't you have to destroy and recreate your view each time your context changed (expensive)? If you limited yourself to using the built-in structural directives instead then you could simply pass a new context to your embedded view, but I can imagine that devs familiar with React might assume that plain expressions would ""just work"" as they do in React, which might be a pain point.
If we do need to limit ourselves to using structural directives over plain expressions then it may be appropriate to provide some helper functions for the built-in stuff, so maybe instead of this:
[TRIPLE QUOTE]
You could do:
[TRIPLE QUOTE]
Of course, the community could build helper functions like that themselves. My main concern is that the way expressions restrict the ability to update a view may trip people up.
Thanks for sharing this openly! I'm excited for all the things a more dynamic Angular could bring.",0,1,0,0,0,0,Affection,Love,Love,,
angular/angular,issue,900573730,2021-08-17 19:31:24,serpent5,@AndrewKushnir That's done now. Thanks for your help.,[USER] That's done now. Thanks for your help.,0,1,0,0,0,0,Affection,love,gratitude → affection → love,1,
angular/angular,issue,902251602,2021-08-19 21:14:46,Wintermoose,"I like the proposal, though it seems the usage won't be easy - then again such code should be quite localized to special dynamic components, not spread around the whole application, so it should be manageable (and I would echo the call for helper (offline) compiler that can convert string template into sample code: in a vaguely analogous situation, writing C# expression trees, being able to inspect regular compiler output saved me many hours)

You are asking about the need to support dynamic TemplateRef generation - it's probably not absolutely essential, but I would really like it. In most use cases I have in mind we would want to drive our UI with data - table definitions, charts, tooltips etc. Being able to generate a template and integrate it with the existing code would be excellent.","I like the proposal, though it seems the usage won't be easy - then again such code should be quite localized to special dynamic components, not spread around the whole application, so it should be manageable (and I would echo the call for helper (offline) compiler that can convert string template into sample code: in a vaguely analogous situation, writing C# expression trees, being able to inspect regular compiler output saved me many hours)

You are asking about the need to support dynamic TemplateRef generation - it's probably not absolutely essential, but I would really like it. In most use cases I have in mind we would want to drive our UI with data - table definitions, charts, tooltips etc. Being able to generate a template and integrate it with the existing code would be excellent.",0,1,0,0,0,0,Affection,Liking,Liking,,
webpack/webpack,issue,903703131,2021-08-23 12:05:06,ctjlewis,"Super sorry to see that @wh0, you did very good work here.

The PR in question was written by @sokra in order to rapidly fix this issue for Next.js builds (see [this tweet](https://twitter.com/ctjlewis/status/1425845590924144651)). I am sure it was not intentional and this was a very good PR.","Super sorry to see that [USER], you did very good work here. 

The PR in question was written by [USER] in order to rapidly fix this issue for Next.js builds (see [this tweet]([URL]) I am sure it was not intentional and this was a very good PR.",0,1,0,0,0,0,Affection,Love,Appreciation -> Love,1,
webpack/webpack,issue,905462279,2021-08-25 12:35:04,ben8p,"> ```js
> config.output.chunkFilename = '[id].js';
> ```

you saved my day!
Thanks","[BLOCK QUOTE].

you saved my day!
Thanks",0,1,0,0,0,0,Affection,love,gratitude → affection → love,,
webpack/webpack,issue,908069960,2021-08-30 6:32:56,sokra,"You can provide a custom filesystem which doesn't have to support these undocumented calling variants of these methods. Currently that's fine, but changing the typings would make that invalid.

The filesystem caching would also be a little bit sad if you use the encoding argument as it's only caching calls and doesn't convert between encoding.","You can provide a custom filesystem which doesn't have to support these undocumented calling variants of these methods. Currently that's fine, but changing the typings would make that invalid.

The filesystem caching would also be a little bit sad if you use the encoding argument as it's only caching calls and doesn't convert between encoding.",0,1,0,0,0,0,Affection,Caring,Helping/Caring -> Love,,
webpack/webpack,issue,910157644,2021-09-01 10:38:27,levymetal,"@alexander-akait Wow, absolutely amazing! You're a star 💫","[USER] Wow, absolutely amazing! You're a star 💫",0,1,0,0,0,0,Affection,Love,Love,,
angular/angular,issue,910322862,2021-09-01 14:09:17,yharaskrik,Wow. This is amazing! I love it. 👍👍 Two thumbs up indeed! Compilers are not my forte so I don't have a lot to contribute but I wholeheartedly support this improvement in the framework.,Wow. This is amazing! I love it. 👍👍 Two thumbs up indeed! Compilers are not my forte so I don't have a lot to contribute but I wholeheartedly support this improvement in the framework.,0,1,0,0,0,0,Affection,Love,Love,,
Microsoft/TypeScript,issue,912592225,2021-09-03 14:43:09,dmitrysteblyuk,"And this is too minor a thing to add a special compiler option just for this I guess? I'd love to look into this and contribute with a PR if it's worth it.
But thank you! I've been looking everywhere for a workaround or explanation.","And this is too minor a thing to add a special compiler option just for this I guess? I'd love to look into this and contribute with a PR if it's worth it.
But thank you! I've been looking everywhere for a workaround or explanation.",0,1,0,0,0,0,Affection,Love,Appreciate -> Love,,
angular/angular,issue,914430859,2021-09-07 16:00:23,aikidave,"I like @gkalpak's ideal solution, but I do not know the full scope of impact of such a change. Is there a way we could gauge the impact this change would have on the community?","I like [USER] ideal solution, but I do not know the full scope of impact of such a change. Is there a way we could gauge the impact this change would have on the community?",0,1,0,0,0,0,Affection,Love,Liking,,
angular/angular,issue,914581132,2021-09-07 19:51:51,yharaskrik,"Love the effort the Angular team is putting into these RFCs, I have been very impressed as of late! (not that I wasn't impressed before that is!).
I agree that the latency really stymies the effectiveness and creativity of developers, especially when making ""small"" changes (this is a relative term based on your specific scenario obviously). HMR _can_ be a way around this but I have yet to see an implementation that works really well. I have always wanted Angular to embrace a more parallelizable compiler (although the compiler up till now has been fantastic), as large apps start to get a little iffy (other solutions to this obviously, such as incremental compilation from Nx, micro-frontends using module federation etc, but these are all more involved than optimizing the compiler, for the dev obviously, not for the angular term persay). I actually wrote a blog post on the bundle size/speed for our companies code base (https://tech.trellis.org/Angular-v11-vs-v12-Build-Performance/) as I have been interested in this for a while.
I like the idea of being able to allow for type checking to be more of a lint check but would either need to be well thought out since as @e-oz mentioned type checking gets more important the larger the codebase or it would need to be opt in.
We use Nest and Nx at Trellis and the way `nx serve <nest app>` works is it will actually restart the server even if there are type errors and not hold up the refresh cycle. This can be handy, except when it's not, ie. you didn't notice you forgot to pass in a new function parameter and thats why your endpoint doesn't work, for example.
In my opinion **extreme** is the long term solution here, other tools are starting to integrate and support non TS based tooling (like esbuild and swc) as they are written in Rust or other more performant languages. I love Angular and don't want it to fall behind in terms of compilation performance or DX because it is not embracing new tools. Of course I realize this is a major lift and will take a lot of time and effort so I don't expect the Angular team to just go and implement it overnight but do strongly believe we need to keep up to date with tooling. The Angular CLI has always been one of the best selling points of Angular and one of the best built in CLI tools out there, let's not let it fall behind.
All in all, I love this RFC and support optimizing the pipeline wholeheartedly, the better we make it for the developers using it the more people will use it and love it.","Love the effort the Angular team is putting into these RFCs, I have been very impressed as of late! (not that I wasn't impressed before that is!).
I agree that the latency really stymies the effectiveness and creativity of developers, especially when making ""small"" changes (this is a relative term based on your specific scenario obviously). HMR _can_ be a way around this but I have yet to see an implementation that works really well. I have always wanted Angular to embrace a more parallelizable compiler (although the compiler up till now has been fantastic), as large apps start to get a little iffy (other solutions to this obviously, such as incremental compilation from Nx, micro-frontends using module federation etc, but these are all more involved than optimizing the compiler, for the dev obviously, not for the angular term persay). I actually wrote a blog post on the bundle size/speed for our companies code base ([URL] as I have been interested in this for a while.
I like the idea of being able to allow for type checking to be more of a lint check but would either need to be well thought out since as [USER] mentioned type checking gets more important the larger the codebase or it would need to be opt in.
We use Nest and Nx at Trellis and the way `nx serve <nest app>` works is it will actually restart the server even if there are type errors and not hold up the refresh cycle. This can be handy, except when it's not, ie. you didn't notice you forgot to pass in a new function parameter and thats why your endpoint doesn't work, for example.
In my opinion **extreme** is the long term solution here, other tools are starting to integrate and support non TS based tooling (like esbuild and swc) as they are written in Rust or other more performant languages. I love Angular and don't want it to fall behind in terms of compilation performance or DX because it is not embracing new tools. Of course I realize this is a major lift and will take a lot of time and effort so I don't expect the Angular team to just go and implement it overnight but do strongly believe we need to keep up to date with tooling. The Angular CLI has always been one of the best selling points of Angular and one of the best built in CLI tools out there, let's not let it fall behind.
All in all, I love this RFC and support optimizing the pipeline wholeheartedly, the better we make it for the developers using it the more people will use it and love it.",0,1,0,0,0,0,Affection,Love,Thankful,,
Microsoft/TypeScript,issue,915815692,2021-09-09 6:56:46,robpalme,"Thank you for landing this feature in time for TypeScript 4.5! 🎉
I am super excited for the follow-on PR to introduce type-only import identifiers. Probably we would wait for that before enabling this feature, to avoid doubling up on import lines (that would occur via the addition of an `import type` line). IMO this all adds up to excellent progress towards explicitness and simplicity.","Thank you for landing this feature in time for TypeScript 4.5! 🎉
I am super excited for the follow-on PR to introduce type-only import identifiers. Probably we would wait for that before enabling this feature, to avoid doubling up on import lines (that would occur via the addition of an `import type` line). IMO this all adds up to excellent progress towards explicitness and simplicity.",0,1,0,0,0,0,Affection,love,gratitude → affection → love,1,
Microsoft/TypeScript,issue,918441034,2021-09-13 18:03:18,andrewbranch,"Excellent detective work, @hi-ogawa 🕵️","Excellent detective work, [USER] 🕵️",0,1,0,0,0,0,Affection,Love,Gratitude -> Love,1,
angular/angular,issue,919125167,2021-09-14 12:58:58,lpl14,Aah okay. Thanks for the explanation.,Aah okay. Thanks for the explanation.,0,1,0,0,0,0,Affection,love,gratitude → affection → love,,
Microsoft/TypeScript,issue,920542149,2021-09-16 3:13:55,jbrown16,"> Baseline files should be updated with `npx gulp baseline-accept` after running tests locally. It’s only the `lib/*` files that typescript-bot was complaining about. The `tests/baselines/reference/*` changes from your first commit look right. Thanks!
@andrewbranch Thanks for the tips! I ran the 'baseline-accept' script after running the tests one more time and I've pushed another commit to the PR with the changes the script produced.","[BLOCK QUOTE].
@andrewbranch Thanks for the tips! I ran the 'baseline-accept' script after running the tests one more time and I've pushed another commit to the PR with the changes the script produced.",0,1,0,0,0,0,Affection,love,gratitude → affection → love,,
angular/angular,issue,923313638,2021-09-20 21:10:46,dario-piotrowicz,"@gkalpak Thanks a lot for the awesome reviewing!!!! (like always! :heart_eyes:)

I addressed all your comments :slightly_smiling_face::+1:

The only one still not addressed (waiting for your replies) should be:
 - ~~https://github.com/angular/angular/pull/43508#discussion_r712411841~~
 - ~~https://github.com/angular/angular/pull/43508#discussion_r712402106~~
 - ~~https://github.com/angular/angular/pull/43508#discussion_r712401446 (maybe? :thinking:)~~
 - ~~https://github.com/angular/angular/pull/43508#discussion_r712397712 (maybe? :thinking:)~~
 
 ___
 
 Update: all addressed now :slightly_smiling_face::+1:","[USER] Thanks a lot for the awesome reviewing!!!! (like always! :heart_eyes:)

I addressed all your comments :slightly_smiling_face::+1:

The only one still not addressed (waiting for your replies) should be:
 - ~~[URL]
 - ~~[URL]
 - ~~[URL] (maybe? :thinking:)~~
 - ~~[URL] (maybe? :thinking:)~~
 
 ___
 
 Update: all addressed now :slightly_smiling_face::+1:",0,1,0,0,0,0,Affection,love,gratitude → affection → love,,
Microsoft/TypeScript,issue,924308978,2021-09-21 19:16:36,radzserg,"Great, that's exactly what I was looking for. It was tough to find this in the docs. Thank you. Closing this one.","Great, that's exactly what I was looking for. It was tough to find this in the docs. Thank you. Closing this one.",0,1,0,0,0,0,Affection,Love,Thankful -> Love,1,
Microsoft/TypeScript,issue,926156624,2021-09-23 21:01:53,jim-nomad,"Thanks for taking a look, after reading your response (a few times hehe) I guess it makes sense...
I'm tempted to suggest something like:

```ts
type R3 = Record<`${string}bar`, number> & Record<string, never>; // doesn't work don't even try it
```

but I think it is too un-facile to consider seriously. /shrug

Thanks again for all your work on everyone's favorite language 💪","Thanks for taking a look, after reading your response (a few times hehe) I guess it makes sense... I'm tempted to suggest something like: 

[TRIPLE QUOTE]. 

but I think it is too un-facile to consider seriously. /shrug 

Thanks again for all your work on everyone's favorite language 💪",0,1,0,0,0,0,Affection,Love,Gratitude -> Love,1,
Microsoft/TypeScript,issue,926495436,2021-09-24 9:47:10,treybrisbane,"Having been loosely keeping up with the TypeScript discussions around the new Node resolutions, I just wanna say thanks for putting in what is clearly a significantly amount of time and effort towards both getting things right and making things as user-friendly as possible! 😀","Having been loosely keeping up with the TypeScript discussions around the new Node resolutions, I just wanna say thanks for putting in what is clearly a significantly amount of time and effort towards both getting things right and making things as user-friendly as possible! 😀",0,1,0,0,0,0,Affection,Love,Thankful -> Love,,
angular/angular,issue,927917698,2021-09-27 14:15:19,JoostK,"This is definitely broken, thanks for reporting!","This is definitely broken, thanks for reporting!",0,1,0,0,0,0,Affection,love,gratitude → affection → love,,
Microsoft/TypeScript,issue,929224730,2021-09-28 13:45:42,thetutlage,Cool. Thanks for explaining. This makes it easier for me to explain why things are the way things are,Cool. Thanks for explaining. This makes it easier for me to explain why things are the way things are,0,1,0,0,0,0,Affection,Love,Appreciate -> Love,,
angular/angular,issue,932938842,2021-10-03 12:13:36,dario-piotrowicz,"My latest implementation (at least for me) seems to work exactly as the webkit implementation now :slightly_smiling_face: , the only thing different being that the webkit icon doesn't have `cursor: pointer` but the new icon does, I like it better this was, feels more polished, but if you disagree I can remove it :+1:","My latest implementation (at least for me) seems to work exactly as the webkit implementation now :slightly_smiling_face: , the only thing different being that the webkit icon doesn't have `cursor: pointer` but the new icon does, I like it better this was, feels more polished, but if you disagree I can remove it :+1:",0,1,0,0,0,0,Affection,Liking,Liking (new implementation),,
Microsoft/TypeScript,issue,932941397,2021-10-03 12:30:51,orblazer,"Hello,
I have exactly same issue but on Linux, but i have found the problem and an temporary solution.
The problem come from `include` property in `tsconfig.json` when that property is set to folder or too ambigu in that case `src`(but this is same if is set to `src/**/*`).
My solution its stupid but simply specify file type `src/**/*.ts`.
Thanks.","Hello,
I have exactly same issue but on Linux, but i have found the problem and an temporary solution.
The problem come from `include` property in `tsconfig.json` when that property is set to folder or too ambigu in that case `src`(but this is same if is set to `src/**/*`).
My solution its stupid but simply specify file type `src/**/*.ts`.
Thanks.",0,1,0,0,0,0,Affection,Caring,Caring (helping),,
webpack/webpack,issue,939286414,2021-10-09 12:06:37,MattAppleton,duh! thanks so much... I guess I can ignore that warning for now.,duh! thanks so much... I guess I can ignore that warning for now.,0,1,0,0,0,0,Affection,love,gratitude → affection → love,,
Microsoft/TypeScript,issue,940657139,2021-10-12 4:50:14,mengxinssfd,"> See https://www.typescriptlang.org/docs/handbook/enums.html#union-enums-and-enum-member-types
> > `A` is special because its values are number literals. `B` is a plain old numeric enum whose type gets treated as `number`.
Thank you, I understand now","[BLOCK QUOTE].
Thank you, I understand now",0,1,0,0,0,0,Affection,Love,Thankful,,
angular/angular,issue,941395566,2021-10-12 19:53:10,dario-piotrowicz,"Ok thank you very much, I'll do my best! :smile:","Ok thank you very much, I'll do my best! :smile:",0,1,0,0,0,0,Affection,love,gratitude → affection → love,,
Microsoft/TypeScript,issue,941927064,2021-10-13 5:09:28,huan,"Dear @DanielRosenwasser , it's so brilliant to get the reproducible code!
Before fixing it, could we have any workaround for this code, so that my repo can work as expected under a specific version of TypeScript(4.4, or next, or dev version are all acceptable)?
Thank you very much and appreciate your help.","Dear [USER] , it's so brilliant to get the reproducible code!
Before fixing it, could we have any workaround for this code, so that my repo can work as expected under a specific version of TypeScript(4.4, or next, or dev version are all acceptable)?
Thank you very much and appreciate your help.",0,1,0,0,0,0,Affection,Love,Appreciate -> Love,,
webpack/webpack,issue,944261863,2021-10-15 12:35:00,martinpitt,"Ack, thanks for the details!","Ack, thanks for the details!",0,1,0,0,0,0,Affection,love,gratitude → affection → love,,
angular/angular,issue,945145629,2021-10-17 15:32:12,gkalpak,"> so I may need to rethink that... or just apply the all regexes to all types js/ts/html (I don't see too much a problem with that, except having html comments with js/ts code with eslint comments and vice versa)....

Aha, excellent point 💡
I think it is fine to always apply all regexes (or just apply the HTML regexes on TS files). If we wanted to be even more sophisticated, we could look for an `@Component` annotation, but looking for a `template` property sounds a bit too much. (I won't stop you if you want to give it a shot, but it will complicate things quite a bit.)

<sub>**Fun fact** (not pragmatically relevant, but...): HTML comments are [kind of respected][1] in JavaScript (for legacy reasons).</sub>

[1]: https://riptutorial.com/javascript/example/9722/using-html-comments-in-javascript--bad-practice-","[BLOCK QUOTE].

Aha, excellent point 💡
I think it is fine to always apply all regexes (or just apply the HTML regexes on TS files). If we wanted to be even more sophisticated, we could look for an `@Component` annotation, but looking for a `template` property sounds a bit too much. (I won't stop you if you want to give it a shot, but it will complicate things quite a bit.)

<sub>**Fun fact** (not pragmatically relevant, but...): HTML comments are [kind of respected][1] in JavaScript (for legacy reasons).</sub>

[1]: [URL]",0,1,0,0,0,0,Affection,Liking,excellent point -> Liking,,
angular/angular,issue,945996633,2021-10-18 17:24:57,alan-agius4,Thanks for the suggestions @aikidave.,Thanks for the suggestions [USER],0,1,0,0,0,0,Affection,Love,Gratitude -> Love,,
Microsoft/TypeScript,issue,946610241,2021-10-19 10:59:49,ruojianll,"> @ruojianll, i advise you to add next _Search Terms_:
> > ```
> meta, meta programming, dynamic type declaration > ```
@owl-from-hogvarts Updated. Thank for your advice.","[BLOCK QUOTE].
@owl-from-hogvarts Updated. Thank for your advice.",0,1,0,0,0,0,Affection,love,gratitude → affection → love,,
angular/angular,issue,946635394,2021-10-19 11:36:38,petebacondarwin,Yeah - sorry @willydee it is not the easiest onboarding. Perhaps your first contribution could be to improve that README??,Yeah - sorry [USER] it is not the easiest onboarding. Perhaps your first contribution could be to improve that README??,0,1,0,0,0,0,Affection,Caring,Caring,,
angular/angular,issue,947409620,2021-10-20 7:40:36,somehan,Thanks for the quick and comprehensive answer!,Thanks for the quick and comprehensive answer!,0,1,0,0,0,0,Affection,Love,Thankful,,
flutter/flutter,issue,947562574,2021-10-20 11:09:31,JohnYounanA,"Hello Taha,
 sorry for the late response and kindly find the below figures :
```
1- Flutter Doctor :
[√] Flutter (Channel stable, 2.5.0, on Microsoft Windows [Version 10.0.19043.1288], locale en-US)
 • Flutter version 2.5.0 at C:\flutter
 • Upstream repository https://github.com/flutter/flutter.git
 • Framework revision 4cc385b4b8 (6 weeks ago), 2021-09-07 23:01:49 -0700
 • Engine revision f0826da7ef
 • Dart version 2.14.0

[√] Android toolchain - develop for Android devices (Android SDK version 31.0.0)
 • Android SDK at C:\Users\John\AppData\Local\Android\sdk
 • Platform android-31, build-tools 31.0.0
 • Java binary at: C:\Program Files\Android\Android Studio\jre\bin\java
 • Java version OpenJDK Runtime Environment (build 11.0.10+0-b96-7249189)
 • All Android licenses accepted.

[√] Chrome - develop for the web
 • Chrome at C:\Program Files\Google\Chrome\Application\chrome.exe

[√] Android Studio (version 2020.3)
 • Android Studio at C:\Program Files\Android\Android Studio
 • Flutter plugin can be installed from:
 https://plugins.jetbrains.com/plugin/9212-flutter
 • Dart plugin can be installed from:
 https://plugins.jetbrains.com/plugin/6351-dart
 • Java version OpenJDK Runtime Environment (build 11.0.10+0-b96-7249189)

[√] VS Code (version 1.61.1)
 • VS Code at C:\Users\John\AppData\Local\Programs\Microsoft VS Code
 • Flutter extension version 3.27.0

[√] Connected device (2 available)
 • Chrome (web) • chrome • web-javascript • Google Chrome 94.0.4606.81
 • Edge (web) • edge • web-javascript • Microsoft Edge 94.0.992.50

• No issues found!
```

```
2- flutter run --verbose
[ +54 ms] executing: [C:\flutter/] git -c log.showSignature=false log -n 1 --pretty=format:%H
[ +379 ms] Exit code 0 from: git -c log.showSignature=false log -n 1 --pretty=format:%H
[ +1 ms] 4cc385b4b84ac2f816d939a49ea1f328c4e0b48e
[ ] executing: [C:\flutter/] git tag --points-at 4cc385b4b84ac2f816d939a49ea1f328c4e0b48e
[ +34 ms] Exit code 0 from: git tag --points-at 4cc385b4b84ac2f816d939a49ea1f328c4e0b48e
[ ] 2.5.0
[ +6 ms] executing: [C:\flutter/] git rev-parse --abbrev-ref --symbolic @{u}
[ +26 ms] Exit code 0 from: git rev-parse --abbrev-ref --symbolic @{u}
[ ] origin/stable
[ ] executing: [C:\flutter/] git ls-remote --get-url origin
[ +22 ms] Exit code 0 from: git ls-remote --get-url origin
[ ] https://github.com/flutter/flutter.git
[ +82 ms] executing: [C:\flutter/] git rev-parse --abbrev-ref HEAD
[ +25 ms] Exit code 0 from: git rev-parse --abbrev-ref HEAD
[ ] stable
[ +54 ms] Artifact Instance of 'AndroidGenSnapshotArtifacts' is not required, skipping update.
[ ] Artifact Instance of 'AndroidInternalBuildArtifacts' is not required, skipping update.
[ ] Artifact Instance of 'IOSEngineArtifacts' is not required, skipping update.
[ ] Artifact Instance of 'FlutterWebSdk' is not required, skipping update.
[ +3 ms] Artifact Instance of 'WindowsEngineArtifacts' is not required, skipping update.
[ ] Artifact Instance of 'WindowsUwpEngineArtifacts' is not required, skipping update.
[ ] Artifact Instance of 'MacOSEngineArtifacts' is not required, skipping update.
[ ] Artifact Instance of 'LinuxEngineArtifacts' is not required, skipping update.
[ ] Artifact Instance of 'LinuxFuchsiaSDKArtifacts' is not required, skipping update.
[ ] Artifact Instance of 'MacOSFuchsiaSDKArtifacts' is not required, skipping update.
[ ] Artifact Instance of 'FlutterRunnerSDKArtifacts' is not required, skipping update.
[ ] Artifact Instance of 'FlutterRunnerDebugSymbols' is not required, skipping update.
[ +44 ms] executing: C:\Users\John\AppData\Local\Android\sdk\platform-tools\adb.exe devices -l
[ +30 ms] List of devices attached
[ +4 ms] Artifact Instance of 'AndroidGenSnapshotArtifacts' is not required, skipping update.
[ ] Artifact Instance of 'AndroidInternalBuildArtifacts' is not required, skipping update.
[ ] Artifact Instance of 'IOSEngineArtifacts' is not required, skipping update.
[ +2 ms] Artifact Instance of 'WindowsEngineArtifacts' is not required, skipping update.
[ ] Artifact Instance of 'WindowsUwpEngineArtifacts' is not required, skipping update.
[ ] Artifact Instance of 'MacOSEngineArtifacts' is not required, skipping update.
[ ] Artifact Instance of 'LinuxEngineArtifacts' is not required, skipping update.
[ ] Artifact Instance of 'LinuxFuchsiaSDKArtifacts' is not required, skipping update.
[ ] Artifact Instance of 'MacOSFuchsiaSDKArtifacts' is not required, skipping update.
[ ] Artifact Instance of 'FlutterRunnerSDKArtifacts' is not required, skipping update.
[ ] Artifact Instance of 'FlutterRunnerDebugSymbols' is not required, skipping update.
[ +59 ms] Multiple devices found:
[ +17 ms] Chrome (web) • chrome • web-javascript • Google Chrome 94.0.4606.81
[ +1 ms] Edge (web) • edge • web-javascript • Microsoft Edge 94.0.992.50
[ +1 ms] [1]: Chrome (chrome)
[ ] [2]: Edge (edge)
[ +1 ms] Please choose one (To quit, press ""q/Q"")
[ ] :
[+26757 ms] q
[ +9 ms] ""flutter run"" took 26,961ms.
[ +16 ms]
 #0 throwToolExit (package:flutter_tools/src/base/common.dart:10:3)
 #1 DeviceManager._chooseOneOfAvailableDevices (package:flutter_tools/src/device.dart:292:7)
 <asynchronous suspension>
 #2 DeviceManager.findTargetDevices (package:flutter_tools/src/device.dart:280:37)
 <asynchronous suspension>
 #3 FlutterCommand.findAllTargetDevices (package:flutter_tools/src/runner/flutter_command.dart:1310:28)
 <asynchronous suspension>
 #4 RunCommand.validateCommand (package:flutter_tools/src/commands/run.dart:459:15)
 <asynchronous suspension>
 #5 FlutterCommand.verifyThenRunCommand (package:flutter_tools/src/runner/flutter_command.dart:1232:5)
 <asynchronous suspension>
 #6 FlutterCommand.run.<anonymous closure> (package:flutter_tools/src/runner/flutter_command.dart:1125:27)
 <asynchronous suspension>
 #7 AppContext.run.<anonymous closure> (package:flutter_tools/src/base/context.dart:150:19)
 <asynchronous suspension>
 #8 CommandRunner.runCommand (package:args/command_runner.dart:209:13)
 <asynchronous suspension>
 #9 FlutterCommandRunner.runCommand.<anonymous closure> (package:flutter_tools/src/runner/flutter_command_runner.dart:288:9)
 <asynchronous suspension>
 #10 AppContext.run.<anonymous closure> (package:flutter_tools/src/base/context.dart:150:19)
 <asynchronous suspension>
 #11 FlutterCommandRunner.runCommand (package:flutter_tools/src/runner/flutter_command_runner.dart:236:5)
 <asynchronous suspension>
 #12 run.<anonymous closure>.<anonymous closure> (package:flutter_tools/runner.dart:62:9)
 <asynchronous suspension>
 #13 AppContext.run.<anonymous closure> (package:flutter_tools/src/base/context.dart:150:19)
 <asynchronous suspension>
 #14 main (package:flutter_tools/executable.dart:92:3)
 <asynchronous suspension>


[ +258 ms] ensureAnalyticsSent: 252ms
[ +1 ms] Running shutdown hooks
[ ] Shutdown hooks complete
[ ] exiting with code 1
```

for the minimal app for only local auth, please consider this as minimal because this is just a test on how to implement.","Hello Taha,
 sorry for the late response and kindly find the below figures :
[TRIPLE QUOTE].

[TRIPLE QUOTE].

for the minimal app for only local auth, please consider this as minimal because this is just a test on how to implement.",0,1,0,0,0,0,Affection,Caring,Caring,,
webpack/webpack,issue,947745882,2021-10-20 14:51:19,rb-mwindh,"Thanks for spending so much time on my issue 😄 I know about the lazyStyleTag syntax, I learned about it from the @etchteam/storybook-addon-css-theme-variables plugin 😆 Actually I just wanted to use that plugin to switch between the themes from my library in storybook...
I also don't know how to set up such an exclusion as I don't know how to change the angular-generated webpack config...
8 days ago Webpack was just some tool that was used ""under the hood"" by Angular. I didn't even know what it's used for 🤣 Now I know (a little) about modules, loaders, inline syntax...","Thanks for spending so much time on my issue 😄 I know about the lazyStyleTag syntax, I learned about it from the [USER] plugin 😆 Actually I just wanted to use that plugin to switch between the themes from my library in storybook...
I also don't know how to set up such an exclusion as I don't know how to change the angular-generated webpack config...
8 days ago Webpack was just some tool that was used ""under the hood"" by Angular. I didn't even know what it's used for 🤣 Now I know (a little) about modules, loaders, inline syntax...",0,1,0,0,0,0,Affection,Love,Gratitude -> Love,,
flutter/flutter,issue,948411724,2021-10-21 9:08:36,danagbemava-nc,"Hi @hello-soon, you appear to be on an older version of flutter.

Please upgrade to the latest version of flutter and see if you still experience this issue.

If you do, please provide a complete minimal reproducible code sample and output of `flutter doctor -v`.

Thank you","Hi [USER] you appear to be on an older version of flutter.

Please upgrade to the latest version of flutter and see if you still experience this issue.

If you do, please provide a complete minimal reproducible code sample and output of `flutter doctor -v`.

Thank you",0,1,0,0,0,0,Affection,Caring,Caring,,
flutter/flutter,issue,949000003,2021-10-21 21:02:16,jakusb,"> Hm, [flutter/engine#29113](https://github.com/flutter/engine/pull/29113) should have fixed this, and rolled into the framework 2 days ago #92146.
>
> @darshankawar is the behavior totally the same between stable and master? If so we should probably reopen #86565 and duplicate this over.

I can confirm this seems fixed when using master channel!
@darshankawar : Many thanks for taking this bug seriously and addressing it so that it got the right attention!
Hopefully this will make its way to beta channel soon.","[BLOCK QUOTE].

I can confirm this seems fixed when using master channel!
@darshankawar : Many thanks for taking this bug seriously and addressing it so that it got the right attention!
Hopefully this will make its way to beta channel soon.",0,1,0,0,0,0,Affection,Love,Thankful (for taking the bug seruously),,
flutter/flutter,issue,949608009,2021-10-22 12:58:46,darshankawar,Thanks for the update. Treating this as a proposal.,Thanks for the update. Treating this as a proposal.,0,1,0,0,0,0,Affection,Love,Gratitude -> Love,,
Microsoft/TypeScript,issue,949976247,2021-10-22 21:44:07,andrewbranch,I personally like this. @rbuckton @DanielRosenwasser what do you think?,I personally like this. [USER] [USER] what do you think?,0,1,0,0,0,0,Affection,liking,,,
Microsoft/TypeScript,issue,953126498,2021-10-27 17:03:24,liamdebeasi,Thanks! I did not know that existed. Looks like there is a similar discussion going on at https://github.com/microsoft/TypeScript-DOM-lib-generator/issues/1119.,Thanks! I did not know that existed. Looks like there is a similar discussion going on at [URL],0,1,0,0,0,0,Affection,love,gratitude → affection → love,,
Microsoft/TypeScript,issue,953445513,2021-10-28 2:17:23,jdmoody,"Thanks again for the hack!
I just wanted to call out that if your VSCode config specifies the `""typescript.tsdk""` option, you'll need to update the `tsserver.ts` in whatever location that option specifies. It would have saved me a bit of debugging time 🙃","Thanks again for the hack!
I just wanted to call out that if your VSCode config specifies the `""typescript.tsdk""` option, you'll need to update the `tsserver.ts` in whatever location that option specifies. It would have saved me a bit of debugging time 🙃",0,1,0,0,0,0,Affection,Love,Gratitude -> Love,,
flutter/flutter,issue,953450209,2021-10-28 2:30:49,dwikresno,"hi @mvanbeusekom

thank you so much about the explanation","hi [USER]

thank you so much about the explanation",0,1,0,0,0,0,Affection,love,gratitude → affection → love,,
flutter/flutter,issue,953848468,2021-10-28 13:31:47,k10dev,@zhongwuzw Thanks for the patch. I don't have a setup to build the Flutter Engine just yet so it may take a little time to be able to verify the patch. Will keep you posted once I'm able to.,[USER] Thanks for the patch. I don't have a setup to build the Flutter Engine just yet so it may take a little time to be able to verify the patch. Will keep you posted once I'm able to.,0,1,0,0,0,0,Affection,love,gratitude → affection → love,1,
flutter/flutter,issue,954729022,2021-10-29 13:06:47,MasahideMori-SimpleAppli,"Hi @danagbemava-nc,
Thank you for your confirmation.

I have split this issue for iPad OS.
I've also edited the title of this issue for iOS.
I'm new to creating issues, so I'm not sure about tagging.

Thank you","Hi [USER]
Thank you for your confirmation.

I have split this issue for iPad OS.
I've also edited the title of this issue for iOS.
I'm new to creating issues, so I'm not sure about tagging.

Thank you",0,1,0,0,0,0,Affection,Love,Gratitude -> Love,1,
Microsoft/TypeScript,issue,955030877,2021-10-29 20:31:15,hbo-iecheruo,"Yup that looks like it.
Awesome and thanks a ton for the pointer, I tried looking around for an explanation but could not find one.","Yup that looks like it.
Awesome and thanks a ton for the pointer, I tried looking around for an explanation but could not find one.",0,1,0,0,0,0,Affection,love,gratitude → affection → love,,
angular/angular,issue,955054851,2021-10-29 21:20:31,IgorMinar,Thanks @gkalpak for doing this work!,Thanks [USER] for doing this work!,0,1,0,0,0,0,Affection,Love,Thankful,,
angular/angular,issue,955955379,2021-11-01 6:00:44,AndrewKushnir,"@rohan-pednekar thanks for the reply. If you don't have a chance to help - don't worry, I can take care of creating a PR and you can help with other fixes/improvements in the future. Thank you.","[USER] thanks for the reply. If you don't have a chance to help - don't worry, I can take care of creating a PR and you can help with other fixes/improvements in the future. Thank you.",0,1,0,0,0,0,Affection,Love,Thankful,,
angular/angular,issue,956879912,2021-11-01 23:28:13,fusho-takahashi,"@AndrewKushnir Thank you for your comment. Because when I did 'Tour of Heroes' in Angular version 12, There was a difference between the code generated by Angular CLI and example code.","[USER] Thank you for your comment. Because when I did 'Tour of Heroes' in Angular version 12, There was a difference between the code generated by Angular CLI and example code.",0,1,0,0,0,0,Affection,Love,Thankful,,
flutter/flutter,issue,959400185,2021-11-03 15:14:40,zhongwuzw,"@k10dev Sorry for the late reply, also thanks for your awesome repro demo, I tried it, but I only repro once :), I already make a PR https://github.com/flutter/engine/pull/29502 to try to fix it. Let's wait for Flutter team to review.","[USER] Sorry for the late reply, also thanks for your awesome repro demo, I tried it, but I only repro once :), I already make a PR [URL] to try to fix it. Let's wait for Flutter team to review.",0,1,0,0,0,0,Affection,Love,Gratitude -> Love,1,
flutter/flutter,issue,959459146,2021-11-03 15:32:01,k10dev,@zhongwuzw Awesome! Thank you for taking a look at this issue quickly. Really appreciate your efforts!,[USER] Awesome! Thank you for taking a look at this issue quickly. Really appreciate your efforts!,0,1,0,0,0,0,Affection,Love,Thankful,,
webpack/webpack,pull_request,149015057,2017-11-06 8:21:51,TheLarkInn,I'm wanting this to land in v3 so still v4 support at least.,I'm wanting this to land in v3 so still v4 support at least.,0,1,0,0,0,0,Longing,,wish → longing → love,,
webpack/webpack,pull_request,175118415,2018-03-16 15:03:13,sokra,It would be great if this stays in a single log call.,It would be great if this stays in a single log call.,0,1,0,0,0,0,Longing,,wish → longing → love,,
flutter/flutter,pull_request,665722062,2021-07-07 21:36:45,HansMuller,I think it would be more helpful to explain how to inset a shape within a RawScrollbar that has a border. An example would be useful.,I think it would be more helpful to explain how to inset a shape within a RawScrollbar that has a border. An example would be useful.,0,1,0,0,0,0,Longing,,"Longing (for an example, explanation)",,
flutter/flutter,pull_request,714383190,2021-09-22 23:40:52,HansMuller,A comment that explains what 42x14 is based on would help,A comment that explains what 42x14 is based on would help,0,1,0,0,0,0,Longing,-,Longing,,
Microsoft/TypeScript,pull_request,733180347,2021-10-20 22:06:04,DanielRosenwasser,"Something @weswigham mentioned in the design meeting is that this also has to gate out distributive conditionals.
```suggestion
if (!(target as ConditionalType).root.inferTypeParameters && !(target as ConditionalType).root.isDistributive) {
```
It would be good to have a test case here if nothing else fails.","Something [USER] mentioned in the design meeting is that this also has to gate out distributive conditionals.
[TRIPLE QUOTE].
It would be good to have a test case here if nothing else fails.",0,1,0,0,0,0,Longing,,Longing,,
angular/angular,issue,898682837,2021-08-13 19:43:54,ha100790tag,Very interesting proposal! Would be greate to have an example of using pipes in bindings and conditions as it's also a very important part of building templates.,Very interesting proposal! Would be greate to have an example of using pipes in bindings and conditions as it's also a very important part of building templates.,0,1,0,0,0,0,Longing,-,Longing,1,
Microsoft/TypeScript,issue,913018889,2021-09-04 18:32:39,johnsoncodehk,"I am the maintainer of the official Vue IDE plugin. Due to the particularity of the Vue template syntax, we need to use the `with` statement to make some very important performance improvements. Considering the number of Vue users, the benefits this brings will be huge. If TS can support this, we would be very grateful. 🙏","I am the maintainer of the official Vue IDE plugin. Due to the particularity of the Vue template syntax, we need to use the `with` statement to make some very important performance improvements. Considering the number of Vue users, the benefits this brings will be huge. If TS can support this, we would be very grateful. 🙏",0,1,0,0,0,0,Longing,-,,,
flutter/flutter,issue,951168813,2021-10-25 18:00:56,dnfield,@sidetraxaudio - it would be really helpful if you could further bisect this to a specific commit using `git bisect`. We can do this but you might be able to get to it sooner than any of us :),[USER] - it would be really helpful if you could further bisect this to a specific commit using `git bisect`. We can do this but you might be able to get to it sooner than any of us :),0,1,0,0,0,0,Longing,-,Longing,1,
flutter/flutter,issue,951780448,2021-10-26 10:02:45,dwikresno,"Thank you so much, I'll wait your update","Thank you so much, I'll wait your update",0,1,0,0,0,0,Longing,-,Longing,,
flutter/flutter,issue,959471483,2021-11-03 15:35:41,artur-zhdan,Really need this,Really need this,0,1,0,0,0,0,Longing,-,Longing,,
Microsoft/TypeScript,issue,901411102,2021-08-18 20:32:08,DanielRosenwasser,"Personally I'm hesitant to add more complexity to `TemplateStringsArray` - especially since it's inevitable that people will overuse this to write slow DSL parsers on long template strings.
That said, it does feel like there should be a way to capture the contents of a template string today.","Personally I'm hesitant to add more complexity to `TemplateStringsArray` - especially since it's inevitable that people will overuse this to write slow DSL parsers on long template strings.
That said, it does feel like there should be a way to capture the contents of a template string today.",0,1,0,0,0,0,Lust,Desire,Wishing/Desiring/Longing (for a way),,
webpack/webpack,pull_request,121332634,2017-06-12 8:17:36,sokra,"It would be great to refactor all these defineProperty calls to getter and setter

``` js
get outputFilesystem() {
 return ...
}

set outputFilesystem() {
 ...
}
```","It would be great to refactor all these defineProperty calls to getter and setter

[TRIPLE QUOTE].",0,1,0,0,0,0,Lust,Desire,Desiring sth -> Love,,
Microsoft/TypeScript,issue,926011190,2021-09-23 17:25:06,Shahaed,Would love a response from the Typescript team on this,Would love a response from the Typescript team on this,0,1,0,0,0,0,Lust,Desire,Desiring sth,,
Microsoft/TypeScript,issue,926020531,2021-09-23 17:39:16,mceachen,"Thanks for that sample: I actually did that in my branch and indeed the code works with all versions of `tsc`.

It'd be a huge help if you could make 4.4 emit a warning for this situation. I suspect every non-trivial backend typescript user is about to be bit by this issue.","Thanks for that sample: I actually did that in my branch and indeed the code works with all versions of `tsc`.

It'd be a huge help if you could make 4.4 emit a warning for this situation. I suspect every non-trivial backend typescript user is about to be bit by this issue.",0,1,0,0,0,0,Lust,Desire,Desiring for help,1,
flutter/flutter,issue,953984119,2021-10-28 15:59:48,fuzzybinary,"This is a first pass at the template updates for the PlatformInterface abstraction. This doesn't hit some of the requests of the ticket including showing an FFI implementation or any documentation updates on PlatformInterface.

But, I would love some guidance on whether that should be part of this PR or part of a different one, and what we might want to update.

Also, I did not add any tests for this, but all current tests pass. I'll double-check to see if any tests need to change or if I need to add one. Otherwise, I'll ask for a test exemption. Would love guidance on that as well.","This is a first pass at the template updates for the PlatformInterface abstraction. This doesn't hit some of the requests of the ticket including showing an FFI implementation or any documentation updates on PlatformInterface.

But, I would love some guidance on whether that should be part of this PR or part of a different one, and what we might want to update.

Also, I did not add any tests for this, but all current tests pass. I'll double-check to see if any tests need to change or if I need to add one. Otherwise, I'll ask for a test exemption. Would love guidance on that as well.",0,1,0,0,0,0,Lust,Desire,Desiring,1,
flutter/flutter,pull_request,724598198,2021-10-07 23:21:04,Piinks,This sparks joy. :) Thank you,This sparks joy. :) Thank you,0,1,0,0,0,0,Affection,Love,,1,
angular/angular,pull_request,652595957,2021-06-16 11:24:14,damingerdai,thanks for your suggestion. please review again.,thanks for your suggestion. please review again.,0,1,0,0,0,0,Affection,Love,Appreciating the suggestion -> Grateful -> Love,1,
webpack/webpack,pull_request,117821949,2017-05-22 19:04:37,sokra,I guess a JSON.stringify would be great here if the env is an object.,I guess a JSON.stringify would be great here if the env is an object.,0,1,0,0,0,0,Affection,Liking,would be great -> Liking,,
flutter/flutter,issue,944511653,2021-10-15 18:32:08,MateusAmin,"@darshankawar Thanks for looking! You actually successfully replicated the oddity! Please take a second at your video. :)
In the top button the splash is misaligned towards the bottom of the trapezoid. And if you try once again with the changes I made in the linked PR above you can see that it is fixed. At least for this particular scenario and likely for all since the inkwell now used the exact same shape as the parent material. @HansMuller Any reason the InkWell shape parameter wasn't also resolvedShape!.copyWith(side: resolvedSide); in your merge?
And if we are really looking at it. You can see that despite using the same outlineshape the shapes differ. And in fact, the splash of the first shape is the shape of the second trapezoid.","[USER] Thanks for looking! You actually successfully replicated the oddity! Please take a second at your video. :)
In the top button the splash is misaligned towards the bottom of the trapezoid. 
And if you try once again with the changes I made in the linked PR above you can see that it is fixed. 
At least for this particular scenario and likely for all since the inkwell now used the exact same shape as the parent material. 
[USER] Any reason the InkWell shape parameter wasn't also resolvedShape!.copyWith(side: resolvedSide); in your merge?
And if we are really looking at it. 
You can see that despite using the same outlineshape the shapes differ. 
And in fact, the splash of the first shape is the shape of the second trapezoid.",0,1,0,0,0,1,"Affection, Confuison",Love,Expressing Gratitude -> Love,,
Microsoft/TypeScript,pull_request,737899679,2021-10-27 22:46:27,gabritto,"I think @andrewbranch's suggestion is a good one for suggesting extensions. I don't think I could get this ready for the RC, though. Does it still make sense to include this PR as is? I think the error message without the suggestion is going to remain as is, so that should go in. I think it would only make sense to remove the extension suggestion message/check if we have performance concerns over calling `fileExists`. Is that the case?","I think [USER] suggestion is a good one for suggesting extensions. I don't think I could get this ready for the RC, though. Does it still make sense to include this PR as is? I think the error message without the suggestion is going to remain as is, so that should go in. I think it would only make sense to remove the extension suggestion message/check if we have performance concerns over calling `fileExists`. Is that the case?",0,1,0,0,0,1,"Affection, Curiosity",Liking,"Liking (the suggest), Curiosity",,
flutter/flutter,issue,949001832,2021-10-21 21:04:51,zanderso,@flar Thanks for the detailed explanation. Is there a reason to keep the unpopulated and populated entries in the same cache object? Would it make any sense to have separate caches for unpopulated and populated entries? Or is keeping them in the same cache and tracking with separate counts the best fix?,[USER] Thanks for the detailed explanation. Is there a reason to keep the unpopulated and populated entries in the same cache object? Would it make any sense to have separate caches for unpopulated and populated entries? Or is keeping them in the same cache and tracking with separate counts the best fix?,0,1,0,0,0,1,"Affection, Curiosity",Love,"Thankful, Curiosity",,
Microsoft/TypeScript,issue,920311878,2021-09-15 19:22:09,ffMathy,"I can't wait for this <3
I am curious, what kind of feedback is needed?","I can't wait for this <3 
I am curious, what kind of feedback is needed?",0,1,0,0,0,1,"Curiosity, Longing",Longing,"Longing, Curious",,
flutter/flutter,issue,959346020,2021-11-03 14:58:48,arkanmgerges,"@danagbemava-nc finally I solved the issue (by reading this page on [overstack](https://stackoverflow.com/questions/27565560/android-studio-not-showing-any-errors/27567947)), I've reset Android Studio to the default settings, then I installed Dart and Flutter plugins, then It worked
Manage IDE Settings ---> Restore Default Settings...
![image](https://user-images.githubusercontent.com/7836805/140084572-92140516-b123-4dea-ba77-fed0d06013a9.png)
![image](https://user-images.githubusercontent.com/7836805/140084314-fa0b5de4-a268-40a3-838b-6f41d19435a8.png)
Thank you @danagbemava-nc for your help","[USER] finally I solved the issue (by reading this page on [overstack]([URL] I've reset Android Studio to the default settings, then I installed Dart and Flutter plugins, then It worked

Manage IDE Settings ---> Restore Default Settings...

![image]([URL]




![image]([URL]


Thank you [USER] for your help",0,1,0,1,0,0,"Affection, Relief",love,gratitude → affection → love,1,
angular/angular,pull_request,699668336,2021-08-31 20:57:47,dario-piotrowicz,"Ah yeah that is interesting! I didn't know of such a type and actually be googling around it doesn't even seem too well documented!
Thanks a lot for mentioning it! :slightly_smiling_face: You did say not to bother but actually indeed having the set as readonly would make things quite more clear I'd imagine, so please if you would prefer me to revert to the old version and have the set as readonly I really really really really really would not mind!!! Please just say the word and I will get to it! :slightly_smiling_face: I think it would indeed make things clearer... on the other hand, in order not to have to parse the css text one time more than necessary I would indeed need to do a passing and return the tuple as I did before (unless there's a better alternative, but I can't think of one...)
so yeah it's up to you, just please say what you think would be the nicest solution for you and I will gladly be fine with that! :slightly_smiling_face:","Ah yeah that is interesting! I didn't know of such a type and actually be googling around it doesn't even seem too well documented!
Thanks a lot for mentioning it! :slightly_smiling_face: You did say not to bother but actually indeed having the set as readonly would make things quite more clear I'd imagine, so please if you would prefer me to revert to the old version and have the set as readonly I really really really really really would not mind!!! Please just say the word and I will get to it! :slightly_smiling_face: I think it would indeed make things clearer... on the other hand, in order not to have to parse the css text one time more than necessary I would indeed need to do a passing and return the tuple as I did before (unless there's a better alternative, but I can't think of one...)
so yeah it's up to you, just please say what you think would be the nicest solution for you and I will gladly be fine with that! :slightly_smiling_face:",0,1,0,1,0,0,"Zest, Affection","Liking, Excitement","Caring, Liking, Appreciating, Excitement",,
Microsoft/TypeScript,issue,924140805,2021-09-21 16:15:10,andrewbranch,"> I would like to request a way to reopen bugs or have a second look at them. Any suggestions? How would I do that in the future?

Just comment on the closed bug. We don’t unsubscribe from closed issues, and if there is a reason to reopen them or reengage with them, we do—as is happening here.

> You have no way of conjuring a different value of type `A` because you don't know what type `A` will be instantiated with.

I think you’re forgetting that you have ways of making plausibly correct subtypes of objects in JavaScript. It’s true that if you wind up with primitives you’re kind of stuck. https://www.typescriptlang.org/play?#code/MYewdgzgLgBAZiEBGGBeGAeAggGhgIQD4AKAQwC4ZcYAjS-ASkqzUJgG8AoGHmASzgwyMAGQjao8VACeABwCmIQaTSp0AIhA0AVvOBR1kmDIVKJajVt371DDt16OATvKgBXJ2BgB5HXqgAdKQQEHwA5mDE7AC+eDR4pAwA3A480akwLu6eMKQp6UA

You can also do some arguably correct things with user-defined type guards, which are not checked for accuracy, but are not wrong and are less suspicious than casting to `any`. If you have some pattern of runtime reflection that TypeScript can’t analyze, but you’ve convinced yourself of its safety and its utility, I don’t think I’d call that “shenanigans” anyway; I’d call it a limitation of our compiler.

I guess we’ll have to agree to disagree about what type parameters are for. I won’t be monitoring this thread anymore as the discussion has been exhausted of anything useful to resolving the original issue.","[BLOCK QUOTE].

Just comment on the closed bug. We don’t unsubscribe from closed issues, and if there is a reason to reopen them or reengage with them, we do—as is happening here.

[BLOCK QUOTE].

I think you’re forgetting that you have ways of making plausibly correct subtypes of objects in JavaScript. It’s true that if you wind up with primitives you’re kind of stuck. [URL]

You can also do some arguably correct things with user-defined type guards, which are not checked for accuracy, but are not wrong and are less suspicious than casting to `any`. If you have some pattern of runtime reflection that TypeScript can’t analyze, but you’ve convinced yourself of its safety and its utility, I don’t think I’d call that “shenanigans” anyway; I’d call it a limitation of our compiler.

I guess we’ll have to agree to disagree about what type parameters are for. I won’t be monitoring this thread anymore as the discussion has been exhausted of anything useful to resolving the original issue.",1,0,0,0,0,0,Disapproval,-,Disagreement -> Disapproval,,
flutter/flutter,issue,957181607,2021-11-02 8:01:40,devchenli,"Any update ?
my app have been removed because this , I never never never try to read clipboard , ​
Just because I used textfiled ,
Can't beleive such a big bug has not been solved yet","Any update ?
my app have been removed because this , I never never never try to read clipboard , ​
Just because I used textfiled ,
Can't beleive such a big bug has not been solved yet",1,0,0,0,0,0,Exasperation,Frustration,Frustration,,
flutter/flutter,pull_request,696157106,2021-08-25 22:30:34,caseycrogers,"This seems like a poorer developer experience-it's out of keeping with other similar `flutter/flutter` widgets (see [LinearGradient.stops](https://api.flutter.dev/flutter/painting/Gradient/stops.html) and requires a ton more boiler plate. Readability and editability for `SnapSizes()..add(.1)..add(2)` is pretty poor.

Also, what does it mean for `snapToMin/Max` to be false? That the sheet slides without snapping between the outer snap points and the min/max? That sounds like very strange UX that we'd not want to expose...Or the sheet could always snap to the available snap points so you could drag to the max size, but if max size isn't a snap size, you'd snap back down to the nearest snap size. That sounds more sane, but still weird UX.

And this construction still doesn't ensure that users don't attempt to specify snap points that are outside of min and max-we'll still need an assert at least for that case.

What do you think about staying with just a plain old list and a bool (or just a plain list and no bool, with the added caveat that this means an empty list will enable snapping which is awkward...)? This keeps us in line with the one comparable example I know of (`LinearGradient.stops`) and it feels like we're adding a lot of complexity to avoid relying on assertion errors, I'm not sure I see the tradeoff being worth it.

I could move the assertion errors into the sheet's constructors so it's easier for devs to interpret the stacktrace-would that help? and/or we could return an ordered list instead of throwing if an unordered list is provided-but I think it's better to loudly fail than silently do something weird-I can't imagine a developer intentionally supplying an undordered list-it'll make their code way less readable. If the list is unordered, it's probably the result of a bug and it's better to fail so the developer can root cause the issue than to continue with potentially unintended `snapSizes`.","This seems like a poorer developer experience-it's out of keeping with other similar `flutter/flutter` widgets (see LinearGradient.stops([URL]) and requires a ton more boiler plate. Readability and editability for `SnapSizes()..add(.1)..add(2)` is pretty poor.

Also, what does it mean for `snapToMin/Max` to be false? That the sheet slides without snapping between the outer snap points and the min/max? That sounds like very strange UX that we'd not want to expose...Or the sheet could always snap to the available snap points so you could drag to the max size, but if max size isn't a snap size, you'd snap back down to the nearest snap size. That sounds more sane, but still weird UX.

And this construction still doesn't ensure that users don't attempt to specify snap points that are outside of min and max-we'll still need an assert at least for that case.

What do you think about staying with just a plain old list and a bool (or just a plain list and no bool, with the added caveat that this means an empty list will enable snapping which is awkward...)? This keeps us in line with the one comparable example I know of (`LinearGradient.stops`) and it feels like we're adding a lot of complexity to avoid relying on assertion errors, I'm not sure I see the tradeoff being worth it.

I could move the assertion errors into the sheet's constructors so it's easier for devs to interpret the stacktrace-would that help? and/or we could return an ordered list instead of throwing if an unordered list is provided-but I think it's better to loudly fail than silently do something weird-I can't imagine a developer intentionally supplying an undordered list-it'll make their code way less readable. If the list is unordered, it's probably the result of a bug and it's better to fail so the developer can root cause the issue than to continue with potentially unintended `snapSizes`.",1,0,0,0,0,0,Exasperation,Frustration,Frustration over usecase,,
flutter/flutter,pull_request,708503165,2021-09-14 17:53:21,darrenaustin,I don't think this import is necessary. What was the reason for adding it?,I don't think this import is necessary. What was the reason for adding it?,1,0,0,0,0,0,Disapproval,-,,,
webpack/webpack,pull_request,94004246,2016-12-28 8:00:46,sokra,These conditions are weird. A test should have an expected behavior and not two possible.,These conditions are weird. A test should have an expected behavior and not two possible.,1,0,0,0,0,0,Disapproval,-,Disapproval,,
webpack/webpack,pull_request,95499985,2017-01-11 2:08:13,chicoxyzzy,@Kovensky I thinks it's better to leave it as is (i.e. string concatenation) than this for better readability,[USER] I thinks it's better to leave it as is (i.e. string concatenation) than this for better readability,1,0,0,0,0,0,Disapproval,-,Disapproving (new changes),,
webpack/webpack,pull_request,102410303,2017-02-22 8:57:37,willmendesneto,"This is unrelated to your changes. Could you rollback this, please?","This is unrelated to your changes. Could you rollback this, please?",1,0,0,0,0,0,Disapproval,-,Disapproval,,
webpack/webpack,pull_request,152751925,2017-11-23 9:27:29,sokra,should not be here,should not be here,1,0,0,0,0,0,Disapproval,-,,,
webpack/webpack,pull_request,153119784,2017-11-27 7:17:57,sokra,Not sure if it's a good idea to set this global variable here.,Not sure if it's a good idea to set this global variable here.,1,0,0,0,0,0,Disapproval,-,Disapproval,,
webpack/webpack,pull_request,161375219,2018-01-13 16:03:40,reergymerej,"I didn't see the point in burying this function in the class, so it's outside. I'm not sure if this matches the code styles well.","I didn't see the point in burying this function in the class, so it's outside. I'm not sure if this matches the code styles well.",1,0,0,0,0,0,Disapproval,-,Disagreement -> Disapproval,,1
webpack/webpack,pull_request,164664288,2018-01-30 8:04:43,sokra,The `sourceUrlComment` is not part of the footer. It doesn't make sense to move it into this module.,The `sourceUrlComment` is not part of the footer. It doesn't make sense to move it into this module.,1,0,0,0,0,0,Disapproval,-,Disapproval,,
webpack/webpack,pull_request,170027075,2018-02-22 17:04:51,sokra,"returning a value doesn't make sense here. It's an async function.

Maybe you want to wrap this in a Promise:

``` js
return new Promise((resolve, reject) => {
 ...
 resolve(true);
 ...
});","returning a value doesn't make sense here. It's an async function.

Maybe you want to wrap this in a Promise:",1,0,0,0,0,0,Disapproval,-,Disapproval,,
webpack/webpack,pull_request,171155778,2018-02-28 6:52:18,probablyup,Not sure I agree with this particular change. It breaks the grammar of the sentence.,Not sure I agree with this particular change. It breaks the grammar of the sentence.,1,0,0,0,0,0,Disapproval,-,Disagreement,,
webpack/webpack,pull_request,178605387,2018-04-02 18:00:29,sokra,"This is not correct. A Chunk doesn't have this probably.

You probably found this in the HMR code. The template takes a `Chunk | { id, modules, removedModules }`. This is a kind of fake Chunk with this extra info.","This is not correct. A Chunk doesn't have this probably.

You probably found this in the HMR code. The template takes a `Chunk | { id, modules, removedModules }`. This is a kind of fake Chunk with this extra info.",1,0,0,0,0,0,Disapproval,-,Disagreement -> Disapproval,,
webpack/webpack,pull_request,178605793,2018-04-02 18:02:02,sokra,"This is incorrect.

Actually the usage of `this.chunks` below is incorrect. It should be `compilation.chunks` instead.

This happend probably while the migration from function to arrow function.

Better do a separate PR here, as we should also add tests for this.","This is incorrect.

Actually the usage of `this.chunks` below is incorrect. It should be `compilation.chunks` instead.

This happend probably while the migration from function to arrow function.

Better do a separate PR here, as we should also add tests for this.",1,0,0,0,0,0,Disapproval,-,,,
webpack/webpack,pull_request,186031083,2018-05-04 9:27:21,ooflorent,"This is wrong. If options is `undefined`, then `bail` is not a `boolean`","This is wrong. If options is `undefined`, then `bail` is not a `boolean`",1,0,0,0,0,0,Disapproval,-,,,
webpack/webpack,pull_request,186620605,2018-05-08 5:34:47,ooflorent,This is wrong,This is wrong,1,0,0,0,0,0,Disapproval,-,,,
webpack/webpack,pull_request,189286545,2018-05-18 14:27:51,sokra,Remove this whole file. It's a bad test because it test the internal behavior.,Remove this whole file. It's a bad test because it test the internal behavior.,1,0,0,0,0,0,Disapproval,-,Disapproval/Annoyance,,
webpack/webpack,pull_request,198086388,2018-06-26 10:03:42,byzyk,"Not sure if the above changes are needed since we already do that in `WebpackOptionsDefaulter`.

/cc @ooflorent","Not sure if the above changes are needed since we already do that in `WebpackOptionsDefaulter`.

/cc [USER]",1,0,0,0,0,0,Disapproval,-,Disapproval,,
webpack/webpack,pull_request,225843589,2018-10-17 9:15:12,sokra,You should not repeat fields which are serialized in the base class.,You should not repeat fields which are serialized in the base class.,1,0,0,0,0,0,Disapproval,-,,,
webpack/webpack,pull_request,248169866,2019-01-16 7:06:48,sompylasar,That's an assumption this piece of code should not make.,That's an assumption this piece of code should not make.,1,0,0,0,0,0,Disapproval,-,,,
webpack/webpack,pull_request,303461904,2019-07-15 14:22:31,sokra,"Makes sense, but in this case I don't even need DateTimeFormat and can save the initialization cost...","Makes sense, but in this case I don't even need DateTimeFormat and can save the initialization cost...",1,0,0,0,0,0,Disapproval,-,,,
webpack/webpack,pull_request,305635514,2019-07-21 20:54:39,sokra,I see no reason why this can't be inlined into `getPolicy`,I see no reason why this can't be inlined into `getPolicy`,1,0,0,0,0,0,Disapproval,-,,,
webpack/webpack,pull_request,322592566,2019-09-10 7:36:33,sokra,"But we even bothering with a Promise, the original code should work fine here and is simpler.","But we even bothering with a Promise, the original code should work fine here and is simpler.",1,0,0,0,0,0,Disapproval,-,,,
webpack/webpack,pull_request,351888259,2019-11-28 17:27:27,alexander-akait,I think here mistake,I think here mistake,1,0,0,0,0,0,Disapproval,-,,,
webpack/webpack,pull_request,407966535,2020-04-14 8:43:23,sokra,"That's not something you can use here.
signals is something for the CLI not for a plugin.","That's not something you can use here.
signals is something for the CLI not for a plugin.",1,0,0,0,0,0,Disapproval,-,,,
webpack/webpack,pull_request,467174466,2020-08-07 17:29:14,sokra,"It's legal, but not correct. The car would have the ModuleDependency, but at runtime it could also have other types. That's why it's wrong.

You must only use casts when the type is restricted at runtime but typescript doesn't know about that. Here the cast is useful to tell typescript that you are sure that this is the type here.","It's legal, but not correct. The car would have the ModuleDependency, but at runtime it could also have other types. That's why it's wrong.

You must only use casts when the type is restricted at runtime but typescript doesn't know about that. Here the cast is useful to tell typescript that you are sure that this is the type here.",1,0,0,0,0,0,Disapproval,-,Disapproval,,1
Microsoft/TypeScript,pull_request,512943729,2020-10-27 18:46:29,sheetalkamat,I am not sure. but i am certain that extendedSourceFiles should contain source file name that wasnt present. It would need another file exists check or another field just to return information if file is present or not and that seems unnecessary just to let project structure information. Let me know if you think its necessary. If it is we would probably need another field on tsconfig source files,I am not sure. but i am certain that extendedSourceFiles should contain source file name that wasnt present. It would need another file exists check or another field just to return information if file is present or not and that seems unnecessary just to let project structure information. Let me know if you think its necessary. If it is we would probably need another field on tsconfig source files,1,0,0,0,0,0,Disapproval,-,,,
Microsoft/TypeScript,pull_request,544653738,2020-12-16 22:00:48,andrewbranch,"Not exactly; it asserts that the exported symbol was in fact found to be exported by its module symbol, according to either the main program checker or the AutoImportProvider checker. This is basically redoing work during the completions _details_ request that was done during the previous completions _list_ request, so it should always be found, but of course there’s no guarantee of that in the types, hence the assertion. (It’s also the sort of assumption that could plausibly be violated by a bizarre sequence of edits triggering some race condition, or just wrong code, so we do see assertions like this come up in telemetry every once in a while.)","Not exactly; it asserts that the exported symbol was in fact found to be exported by its module symbol, according to either the main program checker or the AutoImportProvider checker. This is basically redoing work during the completions _details_ request that was done during the previous completions _list_ request, so it should always be found, but of course there’s no guarantee of that in the types, hence the assertion. (It’s also the sort of assumption that could plausibly be violated by a bizarre sequence of edits triggering some race condition, or just wrong code, so we do see assertions like this come up in telemetry every once in a while.)",1,0,0,0,0,0,Disapproval,-,,,
webpack/webpack,pull_request,594591557,2021-03-15 18:37:14,alexander-akait,"You should not do it, it is wrong","You should not do it, it is wrong",1,0,0,0,0,0,Disapproval,-,Disagreement -> Disapproval,,1
angular/angular,pull_request,637396180,2021-05-22 12:09:50,petebacondarwin,"Is this actually relevant to this bug?
It seems to me that this PR has two parts:

1) Fixing the bug which is when there is only one task, and that task has a error, we were not throwing the error.
2) Speeding up the case where there are multiple tasks but only one of them has an error.

Is the second part actually necessary? I think the code could be smaller without this performance change.","Is this actually relevant to this bug?
It seems to me that this PR has two parts:

1) Fixing the bug which is when there is only one task, and that task has a error, we were not throwing the error.
2) Speeding up the case where there are multiple tasks but only one of them has an error.

Is the second part actually necessary? I think the code could be smaller without this performance change.",1,0,0,0,0,0,Disapproval,-,Disagreement (regarding the bug) -> Disapproval,1,
Microsoft/TypeScript,pull_request,643506552,2021-06-01 21:57:46,DanielRosenwasser,"This doesn't work in the presence of whitespace.
```ts
let x = import
. // hai :)
meta;
```
I would change your search string to `meta` instead.","This doesn't work in the presence of whitespace.
[TRIPLE QUOTE].
I would change your search string to `meta` instead.",1,0,0,0,0,0,Disapproval,-,,,
flutter/flutter,pull_request,644290236,2021-06-02 20:16:44,jonahwilliams,I don't think .call is necessary here,I don't think .call is necessary here,1,0,0,0,0,0,Disapproval,-,,,
Microsoft/TypeScript,pull_request,647633096,2021-06-08 17:04:56,sheetalkamat,"isnt this incorrect, you would want to return the watcher.close function that does what it is doing below instead of returning the actual watcher created by nodeModules watcher?","isnt this incorrect, you would want to return the watcher.close function that does what it is doing below instead of returning the actual watcher created by nodeModules watcher?",1,0,0,0,0,0,Disapproval,-,,,
Microsoft/TypeScript,pull_request,647642414,2021-06-08 17:18:47,amcasey,"I thought about this, but it didn't make sense to me that an entry would be both updated and deleted during the lifetime of the cache (which I think corresponds to a file change event). If that *is* possible, then I'll update the code to keep the two collections in sync.","I thought about this, but it didn't make sense to me that an entry would be both updated and deleted during the lifetime of the cache (which I think corresponds to a file change event). If that *is* possible, then I'll update the code to keep the two collections in sync.",1,0,0,0,0,0,Disapproval,-,Disagreement,,
flutter/flutter,pull_request,657385922,2021-06-23 19:02:15,chunhtai,"Same thing here, do we really need to use a todo if this is not meant for us?","Same thing here, do we really need to use a todo if this is not meant for us?",1,0,0,0,0,0,Disapproval,-,,,
angular/angular,pull_request,665724193,2021-07-07 21:41:14,petebacondarwin,I'm not sure that adding to tslint at this stage in its life is a good use of our time.,I'm not sure that adding to tslint at this stage in its life is a good use of our time.,1,0,0,0,0,0,Disapproval,-,Disagreement,,
Microsoft/TypeScript,pull_request,668371289,2021-07-13 1:57:49,DanielRosenwasser,"I'm not planning to start supporting events in this PR - the whole point is just to baseline the output of the event, and I'll admit that I don't necessarily know what it would mean to support events.","I'm not planning to start supporting events in this PR - the whole point is just to baseline the output of the event, and I'll admit that I don't necessarily know what it would mean to support events.",1,0,0,0,0,0,Disapproval,-,,,
angular/angular,pull_request,680512074,2021-08-01 13:30:37,gkalpak,"Why this change? ""Native"" sounds more appropriate/accurate than ""built-in"" here :confused:","Why this change? ""Native"" sounds more appropriate/accurate than ""built-in"" here :confused:",1,0,0,0,0,0,Disapproval,-,,,
angular/angular,pull_request,692424334,2021-08-19 19:33:49,JoostK,Is this logic really needed? If we unroll the loop one more iteration we'll naturally hit the `ts.isArrowFunction` case above.,Is this logic really needed? If we unroll the loop one more iteration we'll naturally hit the `ts.isArrowFunction` case above.,1,0,0,0,0,0,Disapproval,-,,,
Microsoft/TypeScript,pull_request,692538172,2021-08-19 22:51:34,sandersn,"these comments seem superfluous to me -- the intersection one might need a comment if it were on its own, but here it's clearly the inverse of the union case, and the union case is clear as-is","these comments seem superfluous to me -- the intersection one might need a comment if it were on its own, but here it's clearly the inverse of the union case, and the union case is clear as-is",1,0,0,0,0,0,Disapproval,-,,,
angular/angular,pull_request,702517538,2021-09-06 1:57:35,iRealNirmal,"hi @AndrewKushnir thanks for catching mistake. Regarding your comment
`we can probably have min/max and a value in tests as float numbers and come up with a case when parseInt would cause an issue`

So I doubt this can be valid scenario because if min is `1.0` and max is `3.0` and user enters just `2` then still it will be correct to user always enter decimal value developers should add pattern or regex.

Please feel free tp correct me If am wrong in above scenario or in case you have other thought in your mind.","hi [USER] thanks for catching mistake. Regarding your comment
`we can probably have min/max and a value in tests as float numbers and come up with a case when parseInt would cause an issue`

So I doubt this can be valid scenario because if min is `1.0` and max is `3.0` and user enters just `2` then still it will be correct to user always enter decimal value developers should add pattern or regex.

Please feel free tp correct me If am wrong in above scenario or in case you have other thought in your mind.",1,0,0,0,0,0,Disapproval,-,Disagreement -> Disapproval,1,
Microsoft/TypeScript,pull_request,703903526,2021-09-07 22:48:39,rbuckton,"The wording here is inconsistent with other similar messages, such as:

https://github.com/microsoft/TypeScript/blob/f8c686974525a4f7be9d0a5e17f2d63b1058ea0f/src/compiler/diagnosticMessages.json#L3877

https://github.com/microsoft/TypeScript/blob/f8c686974525a4f7be9d0a5e17f2d63b1058ea0f/src/compiler/diagnosticMessages.json#L3885

https://github.com/microsoft/TypeScript/blob/f8c686974525a4f7be9d0a5e17f2d63b1058ea0f/src/compiler/diagnosticMessages.json#L3881

https://github.com/microsoft/TypeScript/blob/f8c686974525a4f7be9d0a5e17f2d63b1058ea0f/src/compiler/diagnosticMessages.json#L3889

https://github.com/microsoft/TypeScript/blob/f8c686974525a4f7be9d0a5e17f2d63b1058ea0f/src/compiler/diagnosticMessages.json#L3893

Not that we're terribly consistent, but ""cannot be specified"" and ""can only be used"" are the most common qualifiers we use.","The wording here is inconsistent with other similar messages, such as: 

[URL] 

[URL] 

[URL] 

[URL] 

[URL] 

Not that we're terribly consistent, but ""cannot be specified"" and ""can only be used"" are the most common qualifiers we use.",1,0,0,0,0,0,Disapproval,-,Disagreement -> Disapproval,,
flutter/flutter,pull_request,705799769,2021-09-09 23:58:47,LongCatIsLooong,Is this needed? These tests are testing the factory constructor right?,Is this needed? These tests are testing the factory constructor right?,1,0,0,0,0,0,Disapproval,-,Disagreement,,
flutter/flutter,pull_request,705830073,2021-09-10 1:32:08,grouma,"Unfortunately I do not. I recall that a number of tests had to have their parameters updated to keep the ""goldens"" valid. The main intent behind this change was to fix the jitter users would experience as the scroll slowed down. I added a test for that invalid behavior, see `ClampingScrollSimulation velocity eventually reaches zero`.","Unfortunately I do not. I recall that a number of tests had to have their parameters updated to keep the ""goldens"" valid. The main intent behind this change was to fix the jitter users would experience as the scroll slowed down. I added a test for that invalid behavior, see `ClampingScrollSimulation velocity eventually reaches zero`.",1,0,0,0,0,0,Disapproval,-,,,
angular/angular,pull_request,707483092,2021-09-13 16:10:38,gkalpak,"I might be missing something, but I don't see the benefit of moving certain types of code-snippets outside the Markdown.
In fact, there is quite an overhead for authors (whomever that might be: the docs team, SWEs and most importantly community contributors). FWIW, our early choice to move the TypeScript and HTML code-snippets outside the Markdown was only made because we believe the benefits of being able to validate the code outweigh the cost of not having the code side-by-side with the rest of the docs content (where it would be much easier to keep in-sync).
So, I strongly believe that there are certain code types (i.e. those we cannot validate) that would be better off being left in the Markdown.
But, since this is related to docs authoring, I am happy to leave it up to the docs team :smiley:","I might be missing something, but I don't see the benefit of moving certain types of code-snippets outside the Markdown.
In fact, there is quite an overhead for authors (whomever that might be: the docs team, SWEs and most importantly community contributors). FWIW, our early choice to move the TypeScript and HTML code-snippets outside the Markdown was only made because we believe the benefits of being able to validate the code outweigh the cost of not having the code side-by-side with the rest of the docs content (where it would be much easier to keep in-sync).
So, I strongly believe that there are certain code types (i.e. those we cannot validate) that would be better off being left in the Markdown.
But, since this is related to docs authoring, I am happy to leave it up to the docs team :smiley:",1,0,0,0,0,0,Disapproval,-,Strong Disagreement,,
flutter/flutter,pull_request,715774007,2021-09-24 17:04:27,rami-a,Is this necessary? I think it should be left up to the scaffold body to inset its own content appropriately,Is this necessary? I think it should be left up to the scaffold body to inset its own content appropriately,1,0,0,0,0,0,Disapproval,-,Disapproval,,
angular/angular,pull_request,715947884,2021-09-24 23:17:59,dgp1130,"Not sure how important this functionality is, no other existing tests were broken by the change.","Not sure how important this functionality is, no other existing tests were broken by the change.",1,0,0,0,0,0,Disapproval,-,Disapproval,,
Microsoft/TypeScript,pull_request,738814346,2021-10-28 22:22:40,ImRodry,"Absolutely not. This situation is much different from the one above because that one doesn't make sense and has alternatives. This here has an alternative, which is passing an explicit 0, but when running .at() it would make sense for it to default to the first element in the array. This doesn't seem like another one of JS's quirks, but in fact very much intentional and should stay like this, unless a maintainer says otherwise","Absolutely not. This situation is much different from the one above because that one doesn't make sense and has alternatives. This here has an alternative, which is passing an explicit 0, but when running .at() it would make sense for it to default to the first element in the array. This doesn't seem like another one of JS's quirks, but in fact very much intentional and should stay like this, unless a maintainer says otherwise",1,0,0,0,0,0,Disapproval,-,,,
webpack/webpack,issue,804762054,2021-03-23 9:43:45,tgelu,"> Let's close in favor [webpack/webpack-dev-server#2692](https://github.com/webpack/webpack-dev-server/issues/2692), sorry for the inconvenience

But that other issue seems to describe a different broken behaviour, not related to HMR.","[BLOCK QUOTE].

But that other issue seems to describe a different broken behaviour, not related to HMR.",1,0,0,0,0,0,Disapproval,-,Disagreement,,
webpack/webpack,issue,866833762,2021-06-23 13:25:25,alexander-akait,You can't do it dynamically,You can't do it dynamically,1,0,0,0,0,0,Disapproval,-,,,
angular/angular,issue,873375987,2021-07-03 9:21:19,gkalpak,"I don't think we are at a point where adding this syntactic sugar would improve things noticeably. The `entryComponents` are no longer a thing, so that improves the situation a bit.

Also, we would need to keep the existing APIs, because there are cases where you want more configurability. As a result, we would be introducing multiple ways to achieve the same thing, which is undesirable.

Based on the above (and the relatively low number of upvotes), I am going to close it. In the future, once the `@angular/elements` APIs are more refined and stabilized, we can look into ways to streamline the syntax.","I don't think we are at a point where adding this syntactic sugar would improve things noticeably. The `entryComponents` are no longer a thing, so that improves the situation a bit.

Also, we would need to keep the existing APIs, because there are cases where you want more configurability. As a result, we would be introducing multiple ways to achieve the same thing, which is undesirable.

Based on the above (and the relatively low number of upvotes), I am going to close it. In the future, once the `@angular/elements` APIs are more refined and stabilized, we can look into ways to streamline the syntax.",1,0,0,0,0,0,Disapproval,-,,,
angular/angular,issue,877601081,2021-07-10 9:00:49,Jopie64,"I feel that this decision is wrong in many ways.

* Angular and RxJS go hand in hand from the beginning. In fact I came to know RxJS thanks to Angular. I don't think this was a bad decision. It was a nice standard way for Angular to be reactive. For me the places where it was not used, like `@Input` or lifecycle hooks, feel out of tone from the rest of Angular.
* How do you plan to remove or replace Angular's dependency on RxJS without introducing a massive backward incompatibility breakup like in the AngularJS -> Angular 2+ era? Don't repeat history but learn from it!
* If you manage to not create backward incompatibility issues, then why do you think that introducing input as observable will?
* It _already_ is possible to merely see the usage of observable/observer as a Subscribable pattern. RxJS was meant to be functionality around this pattern. But because Observable was not an ECMA standard like Promise, Observable was included in RxJS. If I remember correctly, Ben Lesh regrets his decision not to make Observable a separate lib apart from RxJS, because now the two are seen as one while in fact they are not.

I hope this decision is reverted soon and Angular will return to it's declarative reactive path instead of holding on to partly forcing users to use error prone imperative reactiveness.","I feel that this decision is wrong in many ways.

* Angular and RxJS go hand in hand from the beginning. In fact I came to know RxJS thanks to Angular. I don't think this was a bad decision. It was a nice standard way for Angular to be reactive. For me the places where it was not used, like `@Input` or lifecycle hooks, feel out of tone from the rest of Angular.
* How do you plan to remove or replace Angular's dependency on RxJS without introducing a massive backward incompatibility breakup like in the AngularJS -> Angular 2+ era? Don't repeat history but learn from it!
* If you manage to not create backward incompatibility issues, then why do you think that introducing input as observable will?
* It _already_ is possible to merely see the usage of observable/observer as a Subscribable pattern. RxJS was meant to be functionality around this pattern. But because Observable was not an ECMA standard like Promise, Observable was included in RxJS. If I remember correctly, Ben Lesh regrets his decision not to make Observable a separate lib apart from RxJS, because now the two are seen as one while in fact they are not.

I hope this decision is reverted soon and Angular will return to it's declarative reactive path instead of holding on to partly forcing users to use error prone imperative reactiveness.",1,0,0,0,0,0,Disapproval,-,,,
angular/angular,issue,881785239,2021-07-17 0:36:27,alxhub,"I see the problem here, but unfortunately Angular does allow recursive components, so I don't think we can automatically make this an error.","I see the problem here, but unfortunately Angular does allow recursive components, so I don't think we can automatically make this an error.",1,0,0,0,0,0,Disapproval,-,,,
angular/angular,issue,882136287,2021-07-18 23:54:38,sebastian-zarzycki-es,"A lot of people are also using similar argument against Angular in general, but I have an inkling that we actually disagree on what that usually foreshadows.","A lot of people are also using similar argument against Angular in general, but I have an inkling that we actually disagree on what that usually foreshadows.",1,0,0,0,0,0,Disapproval,-,Disagreement -> Disapproval,1,
webpack/webpack,issue,904507572,2021-08-24 10:09:26,alexander-akait,"Unfortunately no, you webpack v5 required...","Unfortunately no, you webpack v5 required...",1,0,0,0,0,0,Disapproval,-,,,
angular/angular,issue,919082522,2021-09-14 12:00:26,MickL,I disagree. A framework is exactly that: Decreasing the complexity and amount of written code and avoiding duplicate boilerplate code.,I disagree. A framework is exactly that: Decreasing the complexity and amount of written code and avoiding duplicate boilerplate code.,1,0,0,0,0,0,Disapproval,-,,,
Microsoft/TypeScript,issue,919132145,2021-09-14 13:06:47,MartinJohns,"> It should, in my opinion, have been `fn(...args?: any[])` to allow a call with no arguments.
An optional spread argument makes no sense and is invalid. But `fn(...args: any[])` actually is callable without arguments.
https://www.typescriptlang.org/play?#code/GYVwdgxgLglg9mABMMAKAdJghgJwOYDOAXIlmAJ4DaAugJSIDeAvgLABQ7Kqt7QA","[BLOCK QUOTE].
An optional spread argument makes no sense and is invalid. But `fn(...args: any[])` actually is callable without arguments.
[URL]",1,0,0,0,0,0,Disapproval,-,,,
angular/angular,issue,920707569,2021-09-16 8:42:00,infacto,"You really want a default behavior like this?
```ts
import { Component } from '@angular/core';
@Component({
selector: 'my-app',
template: `
<div *ngFor=""let item of (items | keyvalue)"">
{{ item.key }}
</div>
`
})
export class AppComponent {
items = {
one: 'one',
two: 'two',
three: 'three',
0: '0',
1: '1',
2: '2',
10: '10'
};
}
```
Result:
```text
0
1
10
2
one
three
two
```
I doubt anyone will miss that. I think people are more likely to get upset that it won't finally be changed.
It's not only related to a `Map`. I would really just remove this sort. Keep it simple.","You really want a default behavior like this? 

[TRIPLE QUOTE]. 

Result: 

[TRIPLE QUOTE]. 

I doubt anyone will miss that. I think people are more likely to get upset that it won't finally be changed. 

It's not only related to a `Map`. I would really just remove this sort. Keep it simple.",1,0,0,0,0,0,Disapproval,-,Anger/Disapproval (of the default behavior),,1
webpack/webpack,issue,920773565,2021-09-16 10:17:01,jayeshchoudhary,"> CMIIW, tree shaking doesn't remove the code, but acts on the export statements instead, making the code unreachable (unless it's referenced within the module). Actual removal of the code is left to the minification phase of the build. Can you confirm that you're seeing the unshaken code post minification @jayeshchoudhary? Also, reproducible repo would be nice

I can still see the unused functions used in the production mode also","[BLOCK QUOTE].

I can still see the unused functions used in the production mode also",1,0,0,0,0,0,Disapproval,-,Disapproval (of keeping unused func),,
angular/angular,issue,923881959,2021-09-21 11:16:43,petebacondarwin,"That is an interesting idea @hchiam. I think the wording should not mention redirects, since that is not what is happening. Perhaps ""leaves angular.io domain"" or ""external URL"" might be accurate.","That is an interesting idea [USER] I think the wording should not mention redirects, since that is not what is happening. Perhaps ""leaves angular.io domain"" or ""external URL"" might be accurate.",1,0,0,0,0,0,Disapproval,-,,,
Microsoft/TypeScript,issue,932994975,2021-10-03 17:41:17,MartinJohns,"> Is the same that:
But it's not, as it has been mentioned several times already...","[BLOCK QUOTE].
But it's not, as it has been mentioned several times already...",1,0,0,0,0,0,Disapproval,-,,,
webpack/webpack,issue,936098797,2021-10-06 11:59:32,alexander-akait,"I don't see any problems with cast, it is not related","I don't see any problems with cast, it is not related",1,0,0,0,0,0,Disapproval,-,Disagreement,,
Microsoft/TypeScript,issue,938692115,2021-10-08 14:34:05,frux,BTW I don't understand why this issue was closed. Is there any sensible reasons why `Array.prototype.includes` can not be a typeguard?,BTW I don't understand why this issue was closed. Is there any sensible reasons why `Array.prototype.includes` can not be a typeguard?,1,0,0,0,0,0,Disapproval,-,Disagreement -> Disapproval,,1
Microsoft/TypeScript,issue,941234580,2021-10-12 17:48:34,andrewbranch,"I think you’re right that this would be fairly easy from an implementation standpoint, but there are two main reasons why we don’t want to move forward without careful consideration of the full problem space:
1. If we _simply_ add a flag that allows module resolution to work with `.ts` files, it will 100% contribute to the misconception that TypeScript does, can, or should emit JS files with the transformation `import ""./foo.ts""` → `import ""./foo.js""`. We already have angry mobs demanding that this happen for `import ""./foo""` → `import ""./foo.js""` so if we allowed `.ts` extensions on there without it being very clear what use cases it is intended to serve, it would just pour fuel on that fire.
2. Such a flag would look like a gift to Deno users, but it would actually be woefully incomplete for them. There are obviously a lot of other parts of module resolution that are either specific to Deno or shared between Deno and the browser that we don’t currently support, and I think those users would be confused and disappointed that we stopped so far short of proper support for these things.
Don’t get me wrong, I want us to solve all of these problems, but we’re still in the phase where we’re trying to develop a thorough understanding of all the different reasons people want this and what the existing solutions are.","I think you’re right that this would be fairly easy from an implementation standpoint, but there are two main reasons why we don’t want to move forward without careful consideration of the full problem space:
1. If we _simply_ add a flag that allows module resolution to work with `.ts` files, it will 100% contribute to the misconception that TypeScript does, can, or should emit JS files with the transformation `import ""./foo.ts""` → `import ""./foo.js""`. We already have angry mobs demanding that this happen for `import ""./foo""` → `import ""./foo.js""` so if we allowed `.ts` extensions on there without it being very clear what use cases it is intended to serve, it would just pour fuel on that fire.
2. Such a flag would look like a gift to Deno users, but it would actually be woefully incomplete for them. There are obviously a lot of other parts of module resolution that are either specific to Deno or shared between Deno and the browser that we don’t currently support, and I think those users would be confused and disappointed that we stopped so far short of proper support for these things.
Don’t get me wrong, I want us to solve all of these problems, but we’re still in the phase where we’re trying to develop a thorough understanding of all the different reasons people want this and what the existing solutions are.",1,0,0,0,0,0,Disapproval,-,,,
Microsoft/TypeScript,issue,944216399,2021-10-15 11:15:10,QbDesu,"While I do agree with @MartinJohns my argument why this shouldn't really be considered a bug would be on a much more fundamental level.
There is not much typescript can do about this without breaking it's [Non-Goal No 3](https://github.com/Microsoft/TypeScript/wiki/TypeScript-Design-Goals#non-goals):
> Apply a sound or ""provably correct"" type system. Instead, strike a balance between correctness and productivity.
The only alternative would be treating properties that are known to be getters the same as function calls, which is not what you want in most cases, they are almost always supposed to be treated like regular properties. This kind of check is quite common check to prevent check if a value is not null so flagging it based on the signature alone would be annoying to most people that dont have such edge case uses as they'd have to do the non-null assertion even if it's not really needed.
So yes the only way you could detect it without troubling people when it mostly isn't necessary is by analyzing the flow in depth, which isn't worth it for such an edge case in my opinion but the issue above has more discussion on that.
On top of that a simple way to avoid this using modern ECMAScript features is `a.member?.do()`.","While I do agree with [USER] my argument why this shouldn't really be considered a bug would be on a much more fundamental level.
There is not much typescript can do about this without breaking it's [Non-Goal No 3]([URL]
[BLOCK QUOTE].
The only alternative would be treating properties that are known to be getters the same as function calls, which is not what you want in most cases, they are almost always supposed to be treated like regular properties. This kind of check is quite common check to prevent check if a value is not null so flagging it based on the signature alone would be annoying to most people that dont have such edge case uses as they'd have to do the non-null assertion even if it's not really needed.
So yes the only way you could detect it without troubling people when it mostly isn't necessary is by analyzing the flow in depth, which isn't worth it for such an edge case in my opinion but the issue above has more discussion on that.
On top of that a simple way to avoid this using modern ECMAScript features is `a.member?.do()`.",1,0,0,0,0,0,Disapproval,-,Disagreement,,
flutter/flutter,issue,944899862,2021-10-16 11:17:02,stuartmorgan,"Please vote for specific issues, or file new issues with specific details if you have issues that are not already filed.

Closing as this is not an actionable issue.","Please vote for specific issues, or file new issues with specific details if you have issues that are not already filed.

Closing as this is not an actionable issue.",1,0,0,0,0,0,Disapproval,-,Disapproval,,
flutter/flutter,issue,947366138,2021-10-20 6:24:56,darshankawar,"> Can you try to scroll to the bottom of the screen? Maybe the keyboard is covering the overflow.
No, if there would have an overflow error, it would have shown in console too, which I don't see at all. Also tried scrolling but don't see any issue.","[BLOCK QUOTE].

No, if there would have an overflow error, it would have shown in console too, which I don't see at all. Also tried scrolling but don't see any issue.",1,0,0,0,0,0,Disapproval,-,,,
flutter/flutter,issue,947893665,2021-10-20 17:41:22,TahaTesser,"Given the disagreement, I've reopened the issue.","Given the disagreement, I've reopened the issue.",1,0,0,0,0,0,Disapproval,-,Disagreement -> Disapproval,,
Microsoft/TypeScript,issue,948264963,2021-10-21 5:14:49,MartinJohns,I really don't see how this is any different than #467.,I really don't see how this is any different than #467.,1,0,0,0,0,0,Disapproval,-,,,
flutter/flutter,issue,948437097,2021-10-21 9:41:40,artonbejtuli,"@darshankawar The link you provided is not the issue, i fixed it by myself.
Firebase was the problem here. In older versions i had Application and FirebaseCloudMessagingPluginRegistrant.
I had to remove these files completely since they are no longer needed in new version.
```kotlin
public class Application: FlutterApplication(), PluginRegistrantCallback {
override fun onCreate() {
super.onCreate()
FlutterFirebaseMessagingService.setPluginRegistrant(this)
}
override fun registerWith(registry: PluginRegistry) {
FirebaseCloudMessagingPluginRegistrant.registerWith(registry)
}
}
```
```kotlin
class FirebaseCloudMessagingPluginRegistrant {
companion object {
fun registerWith(registry: PluginRegistry) {
if (alreadyRegisteredWith(registry)) {
return;
}
FirebaseMessagingPlugin.registerWith(registry.registrarFor(""io.flutter.plugins.firebasemessaging.FirebaseMessagingPlugin""))
}
fun alreadyRegisteredWith(registry: PluginRegistry): Boolean {
val key = FirebaseCloudMessagingPluginRegistrant::class.java.name
if (registry.hasPlugin(key)) {
return true
}
registry.registrarFor(key)
return false
}
}
}
```","[USER] The link you provided is not the issue, i fixed it by myself.

Firebase was the problem here. In older versions i had Application and FirebaseCloudMessagingPluginRegistrant.
I had to remove these files completely since they are no longer needed in new version.


[TRIPLE QUOTE].
[TRIPLE QUOTE].",1,0,0,0,0,0,Disapproval,-,,,
webpack/webpack,issue,950815592,2021-10-25 11:16:54,vankop,@alexander-akait I am not sure that this make sense since we have module federation,[USER] I am not sure that this make sense since we have module federation,1,0,0,0,0,0,Disapproval,-,Disagreement,,
angular/angular,issue,951958223,2021-10-26 13:47:49,petebacondarwin,I'm not convinced that the glossary should require public-api approval 🤔,I'm not convinced that the glossary should require public-api approval 🤔,1,0,0,0,0,0,Disapproval,-,,,
flutter/flutter,issue,956248457,2021-11-01 13:47:26,maheshmnj,"Hi @RoarGronmo, This doesn't look like flutter specific issue but rather the flutter plugin for Android Studio, I would advise you to please file the issue in the dedicated repo https://github.com/flutter/flutter-intellij.
Closing, as this isn't an issue with flutter. If you disagree feel free to write in the comments and I will reopen it. 

Thank you.","Hi [USER], This doesn't look like flutter specific issue but rather the flutter plugin for Android Studio, I would advise you to please file the issue in the dedicated repo [URL] Closing, as this isn't an issue with flutter. If you disagree feel free to write in the comments and I will reopen it. Thank you.",1,0,0,0,0,0,Disapproval,-,Disapproval,1,
Microsoft/TypeScript,issue,956260525,2021-11-01 14:03:23,MartinJohns,I don't understand the use case. This would add unnecessary complexity with no real benefit.,I don't understand the use case. This would add unnecessary complexity with no real benefit.,1,0,0,0,0,0,Disapproval,-,Disagreement,,
flutter/flutter,issue,956435881,2021-11-01 17:32:25,mat100payette,">
>
> With #90157, you'll be able to set the alignment of the floating label. This could help adjust the position to a place that doesn't overlap with the curvature of the border.
>
> Currently the PR only allows centering, but we could make it allow arbitrary positions. Would that help solve the problem?
>
> Here's how this rounded border looks like with a centered label:
>
> ![floating_label](https://user-images.githubusercontent.com/389558/139713775-03d021f3-858c-41b4-8e59-acc631d83756.gif)

No, that would not.

Obviously what's being asked is for the background of the label to keep a constant size regardless of where it's located over the border.","[BLOCK QUOTE].

No, that would not.

Obviously what's being asked is for the background of the label to keep a constant size regardless of where it's located over the border.",1,0,0,0,0,0,Disapproval,-,,,
angular/angular,issue,957915873,2021-11-02 16:24:11,alan-agius4,Duplicate of https://github.com/angular/angular/issues/44019 Closing in favor of the above since it has a reproduction.,Duplicate of [URL] Closing in favor of the above since it has a reproduction.,1,0,0,0,0,0,Disapproval,-,None,,
angular/angular,issue,958251397,2021-11-02 22:12:06,jessicajaniuk,"Closing this as it's out of date and hasn't seen updates since February 2020, but we can re-open if necessary to land any changes in here after updates.","Closing this as it's out of date and hasn't seen updates since February 2020, but we can re-open if necessary to land any changes in here after updates.",1,0,0,0,0,0,Disapproval,-,None,,
angular/angular,issue,958324195,2021-11-02 22:47:42,jessicajaniuk,Closing this as the replacement PR for this documentation has landed already.,Closing this as the replacement PR for this documentation has landed already.,1,0,0,0,0,0,Disapproval,-,,,
webpack/webpack,pull_request,741886691,2021-11-03 12:27:09,vankop,not sure that this is ok.. users will need to cast twice,not sure that this is ok.. users will need to cast twice,1,0,0,0,0,0,Rage,Dislike,Not liking sth,,
flutter/flutter,pull_request,666307582,2021-07-08 15:37:18,gspencergoog,"Ewww. OK, I'll change it, but... ewww.","Ewww. OK, I'll change it, but... ewww.",1,0,0,0,0,0,Disgust,-,,,
angular/angular,pull_request,668992882,2021-07-13 17:59:30,gkalpak,"As mentioned by @rafaelss95, this should be removed.",As mentioned by [USER] this should be removed.,1,0,0,0,0,0,Disgust,-,Disgust,,
Microsoft/TypeScript,issue,901188031,2021-08-18 14:59:59,bennycode,"> Would love to see this feature implemented as well. We have quite sizeable project and going ""all strict"" is not an option right now.

Same here! An ugly workaround would be enabling strict mode and adding the [// @ts-expect-error](https://www.typescriptlang.org/docs/handbook/release-notes/typescript-3-9.html#-ts-expect-error-comments) comment everywhere where you cannot fix the compilation errors right away.","[BLOCK QUOTE]. 

Same here! An ugly workaround would be enabling strict mode and adding the [// @ts-expect-error]([URL]) comment everywhere where you cannot fix the compilation errors right away.",1,0,0,0,0,0,Disgust,-,Disgusted about the workaround,,
angular/angular,issue,902648515,2021-08-20 12:13:08,blidblid,"For anybody looking for an ugly workaround, I've yet to see any issues with this patch of `attachPatchData`: ```typescript import { process as runNgcc } from '@angular/compiler-cli/ngcc'; import { existsSync, readFileSync, writeFileSync } from 'fs'; import { join } from 'path'; const ANGULAR_CORE_PATH = '@angular/core'; const ANGULAR_CORE_NGCC_PATH = `${ANGULAR_CORE_PATH}/__ivy_ngcc__/fesm2015/core.js`; const REPLACE_AT = ` function attachPatchData(target, data) { ngDevMode && assertDefined(target, 'Target expected'); target[MONKEY_PATCH_KEY_NAME] = data; } `.trim(); const REPLACE_WITH = ` function attachPatchData(target, data) { ngDevMode && assertDefined(target, 'Target expected'); if (ngDevMode || !(target instanceof EventTarget)) { target[MONKEY_PATCH_KEY_NAME] = data; } } `.trim(); // https://github.com/angular/angular/issues/41047 export function patchAngularToRemoveNgContextFromDom(nodeModulesPath: string): void { const patchFilePath = join(nodeModulesPath, ANGULAR_CORE_NGCC_PATH); if (!existsSync(patchFilePath)) { runNgcc({ basePath: nodeModulesPath, targetEntryPointPath: join(nodeModulesPath, ANGULAR_CORE_PATH), createNewEntryPointFormats: true, propertiesToConsider: ['fesm2015'], }); if (!existsSync(patchFilePath)) { throw new Error(`Tried to patch @angular/core but could not find ${patchFilePath}.`); } } const fileContent = readFileSync(patchFilePath, 'utf8'); const replacedFileContent = fileContent.replace(REPLACE_AT, REPLACE_WITH); if (!replacedFileContent.includes(REPLACE_WITH)) { throw new Error(`Could not patch memory leak in @angular/core.`); } if (fileContent.length === replacedFileContent.length) { return; } writeFileSync(patchFilePath, replacedFileContent); } ```","For anybody looking for an ugly workaround, I've yet to see any issues with this patch of `attachPatchData`: [TRIPLE QUOTE].",1,0,0,0,0,0,Disgust,-,,,
Microsoft/TypeScript,issue,931429308,2021-09-30 15:29:05,andrewbranch,"Yeah, there are several issues asking us to be more aggressive about either recognizing code as unreachable or issuing errors when we already do (like here—`value` is successfully narrowed to `never` inside `if (!value)`, but the user has no way of noticing that because they think they just detected it to be `undefined`, so of course they’re not going to try to use it). But I like this issue because the scope is very narrow, and seems to sit well within the unawaited Promise / uncalled function checks we already have.
Also related is #45267","Yeah, there are several issues asking us to be more aggressive about either recognizing code as unreachable or issuing errors when we already do (like here—`value` is successfully narrowed to `never` inside `if (!value)`, but the user has no way of noticing that because they think they just detected it to be `undefined`, so of course they’re not going to try to use it). But I like this issue because the scope is very narrow, and seems to sit well within the unawaited Promise / uncalled function checks we already have.
Also related is #45267",1,0,0,0,0,0,Disgust,-,Disgust,,
Microsoft/TypeScript,issue,938210972,2021-10-07 22:54:58,ctjlewis,"IMO @danrivett, you're absolutely correct, rewriting imports is compile-time behavior that is *not* a runtime change—in fact, for this resolution algorithm, you are having to make the compile-time changes by hand, in your source code, rather than letting the TS compiler do it for you.
I have personally said enough on this to digress now also, as maintainers have made it clear they feel like it's a waste of their time—but it seems clear that developers would prefer to not rewrite thousands of imports by hand.","IMO [USER] you're absolutely correct, rewriting imports is compile-time behavior that is *not* a runtime change—in fact, for this resolution algorithm, you are having to make the compile-time changes by hand, in your source code, rather than letting the TS compiler do it for you.
I have personally said enough on this to digress now also, as maintainers have made it clear they feel like it's a waste of their time—but it seems clear that developers would prefer to not rewrite thousands of imports by hand.",1,0,0,0,0,0,Disgust,-,Disgust,,
webpack/webpack,pull_request,157991924,2017-12-20 10:50:35,sokra,"Yeah, that's a problem. Omit the brackets to make the tools happy","Yeah, that's a problem. Omit the brackets to make the tools happy",1,0,0,0,0,0,Exasperation,Frustration,,,
webpack/webpack,pull_request,183948266,2018-04-25 5:58:26,sokra,This never returns false. There is alway a runtime chunk.,This never returns false. There is alway a runtime chunk.,1,0,0,0,0,0,Exasperation,Frustration,Frustration,,
webpack/webpack,pull_request,224008349,2018-10-10 9:45:50,michael-ciniawsky,"Ahh yep, github did manage to display tabs correctly until this day... 🙄","Ahh yep, github did manage to display tabs correctly until this day... 🙄",1,0,0,0,0,0,Exasperation,Frustration,,,
Microsoft/TypeScript,pull_request,247363022,2019-01-13 21:15:33,JoshuaKGoldberg,"Sorry, I'm not sure what change you'd like to see here?

From my perspective, this is already an allowed edge case:

```typescript
class Base { }

class Child extends Base {
 constructor() {
 (() => this)();
 super();
 }
}

new Child()
```

...since TypeScript gives no checker complaint, and its downpiled output runs without error, but running that directly gives the ""Must call super constructor..."" error.","Sorry, I'm not sure what change you'd like to see here? 

From my perspective, this is already an allowed edge case:

[TRIPLE QUOTE]. 

...since TypeScript gives no checker complaint, and its downpiled output runs without error, but running that directly gives the ""Must call super constructor..."" error.",1,0,0,0,0,0,Exasperation,-,Exasperation,,
flutter/flutter,pull_request,707711101,2021-09-13 21:44:19,christopherfujino,"thanks, I was so frustrated as to why this was still failing","thanks, I was so frustrated as to why this was still failing",1,0,0,0,0,0,Exasperation,Frustration,,,
webpack/webpack,issue,797642403,2021-03-12 17:31:29,alexander-akait,"Unfortunately, I can't help much, I spent 3~4 hours on debug and no luck, it require more time on debug, but I think it should done by `terser` contributors, feel free to report in `terser` repo and provide information about `compress.unused: false` is fix the problem. Nothing to fix on our side, sorry, I helped as much as I could

My **BIG** recommendation is drop IE 11, I know that some clients still require it, but it's time to tell them no, it is not possible do good and it is very slow.

As workaround you can setup `terser-webpack-plugin` manually using `vue.config.js` and setup `compress.unused: false`.

Feel free to feedback","Unfortunately, I can't help much, I spent 3~4 hours on debug and no luck, it require more time on debug, but I think it should done by `terser` contributors, feel free to report in `terser` repo and provide information about `compress.unused: false` is fix the problem. Nothing to fix on our side, sorry, I helped as much as I could

My **BIG** recommendation is drop IE 11, I know that some clients still require it, but it's time to tell them no, it is not possible do good and it is very slow.

As workaround you can setup `terser-webpack-plugin` manually using `vue.config.js` and setup `compress.unused: false`.

Feel free to feedback",1,0,0,0,0,0,Exasperation,Frustration,Frustraion,,
webpack/webpack,issue,800913191,2021-03-17 8:57:41,adsazad,Tried everything on this page but nothing seems to work. It's a really big issue with webpack and also the only issue that is bugging a lot.,Tried everything on this page but nothing seems to work. It's a really big issue with webpack and also the only issue that is bugging a lot.,1,0,0,0,0,0,Exasperation,Frustration,Frustration,1,
webpack/webpack,issue,815426944,2021-04-08 3:57:02,YikaJ,"webpack@5.31.0 still get this problem

![image](https://user-images.githubusercontent.com/8725110/113966327-7b21e280-9861-11eb-8e64-e316565b33a1.png)

`concatenateModules: false ` can fix it。

@Knagis @sokra Could you reopen this issue?","webpack@5.31.0 still get this problem

![image]([URL]

`concatenateModules: false ` can fix it。

@Knagis [USER] Could you reopen this issue?",1,0,0,0,0,0,Exasperation,Frustration,,,
webpack/webpack,issue,872341926,2021-07-01 15:28:59,orosro,Any news regarding this issue? It's pretty frustrating :),Any news regarding this issue? It's pretty frustrating :),1,0,0,0,0,0,Exasperation,Frustration,Frustration,,
angular/angular,issue,877598129,2021-07-10 8:41:40,Lonli-Lokli,"At least it's fair, even too late.
More frustrating is the root of this decision - Angular team want to move away from Rxjs. As for me it's the first sign to move away from Angular.","At least it's fair, even too late. More frustrating is the root of this decision - Angular team want to move away from Rxjs. As for me it's the first sign to move away from Angular.",1,0,0,0,0,0,Exasperation,Frustration,Frustration,,
angular/angular,issue,880924074,2021-07-15 18:34:41,petebacondarwin,"How could we even check them?

Note that this voting process is purely to give us some insight into how important a feature is to people in the community.
While this is taken into account, the final decision whether to implement a feature comes down to how it fits into our overall strategy and how it fits with other features; how complex it is for the benefit; how big a breaking change it might require; but also what capacity the team has.","How could we even check them?

Note that this voting process is purely to give us some insight into how important a feature is to people in the community.
While this is taken into account, the final decision whether to implement a feature comes down to how it fits into our overall strategy and how it fits with other features; how complex it is for the benefit; how big a breaking change it might require; but also what capacity the team has.",1,0,0,0,0,0,Exasperation,Frustration,Frustration,,
Microsoft/TypeScript,issue,898557681,2021-08-13 15:50:58,Akiyamka,"@sheetalkamat could not look at this problem again, it seems to me the author has not fully revealed the essence of the problem.
I have the following situation:
```
my-monorepo
|- packages
|- pacakge-one <- use pacakge-three as import pacakgeThree from '@my-monorepo/pacakge-three'
|- pacakge-two <- use pacakge-three as import pacakgeThree from '@my-monorepo/pacakge-three'
|- pacakge-three <- have typing error
```
In that case `tsb -b` report error in pacakge-three x3 times.
even with ```
""skipLibCheck"": true,
""exclude"": [ ""node_modules""]
```
This makes me very frustrating and does not at all correlate with what I expect from such a configuration.","[USER] could not look at this problem again, it seems to me the author has not fully revealed the essence of the problem.
I have the following situation:
[TRIPLE QUOTE].
In that case `tsb -b` report error in pacakge-three x3 times.
even with [TRIPLE QUOTE].
This makes me very frustrating and does not at all correlate with what I expect from such a configuration.",1,0,0,0,0,0,Exasperation,Frustration,,,
webpack/webpack,issue,899119740,2021-08-15 22:36:49,AprilArcus,Why is this closed? It's still very much an issue in the circumstance that @dietergeerts describes.,Why is this closed? It's still very much an issue in the circumstance that [USER] describes.,1,0,0,0,0,0,Exasperation,Frustration,,,
Microsoft/TypeScript,issue,900222068,2021-08-17 11:38:42,TomasSestak,are we getting fix?,are we getting fix?,1,0,0,0,0,0,Exasperation,Frustration,Frustration,,
Microsoft/TypeScript,issue,913254182,2021-09-06 0:16:31,ysfaran,Still here and struggling.. the code works fine but intellisense is not working and the error shows up in VSCode..,Still here and struggling.. the code works fine but intellisense is not working and the error shows up in VSCode..,1,0,0,0,0,0,Exasperation,Frustration,Frustration,,
webpack/webpack,issue,918873799,2021-09-14 7:10:46,lzl124631x,Bump. Still facing this issue when loading svg from different extensions like tsx or less.,Bump. Still facing this issue when loading svg from different extensions like tsx or less.,1,0,0,0,0,0,Exasperation,Frustration,,,
webpack/webpack,issue,919361406,2021-09-14 17:26:20,ytrezq,"> This has nothing to do with webpack. You need to fix whatever is doing that import since it is trying to import something that doesn't exist.

@csvan : disagree : projects only requiring webpack4 along with version 4 of `@types/webpack` like https://github.com/dafky2000/evm through npm shouldn’t stop compiling because webpack5 is now available (as a result, I’ve no ideas on what to do to get https://github.com/dafky2000/evm to compile whereas it compiled just fine before 2021).","[BLOCK QUOTE].

@csvan : disagree : projects only requiring webpack4 along with version 4 of `@types/webpack` like [URL] through npm shouldn’t stop compiling because webpack5 is now available (as a result, I’ve no ideas on what to do to get [URL] to compile whereas it compiled just fine before 2021).",1,0,0,0,0,0,Exasperation,Frustration,,,
Microsoft/TypeScript,issue,922246857,2021-09-18 9:19:05,georgyfarniev,"@RyanCavanaugh @weswigham @alan-agius4 hello, is there any plans to include this issue in the roadmap? I also find it extremely frustrating.
At least, can you give me a brief insight how difficult will it be to solve in case if I will try to create PR for this issue?
Wish you to have a nice weekend.","[USER] [USER] [USER] hello, is there any plans to include this issue in the roadmap? I also find it extremely frustrating.
At least, can you give me a brief insight how difficult will it be to solve in case if I will try to create PR for this issue?
Wish you to have a nice weekend.",1,0,0,0,0,0,Exasperation,Frustration,Frustration,,
webpack/webpack,issue,922487629,2021-09-19 15:00:51,netics,Any news about this one? I am having the same issue with vue-cli and webpack5,Any news about this one? I am having the same issue with vue-cli and webpack5,1,0,0,0,0,0,Exasperation,Frustration,Frustration,,
Microsoft/TypeScript,issue,923134732,2021-09-20 17:34:28,dncrews,"I don't know if there's a better way to ask for this to get priority other than commenting. It has been frustrating to no longer have `occurrencesHighlight` functionality.
For me, this occurred because my GraphQL type definition files are exported from a .ts file. This functionalty used to work even in those files, but with this change, the functionality has to be disabled.","I don't know if there's a better way to ask for this to get priority other than commenting. It has been frustrating to no longer have `occurrencesHighlight` functionality.
For me, this occurred because my GraphQL type definition files are exported from a .ts file. This functionalty used to work even in those files, but with this change, the functionality has to be disabled.",1,0,0,0,0,0,Exasperation,Frustration,,,
angular/angular,issue,924200778,2021-09-21 17:27:06,angelaki,Too bad! Thank you anyway ... This issue is really driving me nuts ...,Too bad! Thank you anyway ... This issue is really driving me nuts ...,1,0,0,0,0,0,Exasperation,Frustration,Frustration,,
Microsoft/TypeScript,issue,927300836,2021-09-26 12:47:29,Wharley01,is this getting fixed anytime soon ?,is this getting fixed anytime soon ?,1,0,0,0,0,0,Exasperation,Frustration,Frustration,,
Microsoft/TypeScript,issue,929572189,2021-09-28 19:48:26,tim-rohrer,"> I solved by adding in tsconfig.json ""types"": [ ""@types/jest"" ]
> 
> or more ugly way add in one of the type files: ///

Why is this when other type modules, afaik, are loaded without requiring the `@types` prefix? I spent hours on this.","[BLOCK QUOTE].

Why is this when other type modules, afaik, are loaded without requiring the `[USER]` prefix? I spent hours on this.",1,0,0,0,0,0,Exasperation,Frustration,Frustration,,
flutter/flutter,issue,944476051,2021-10-15 17:33:42,giorgio79,"I am coming from https://github.com/flutter/flutter/issues/88234
I followed the instructions still I am getting
```
Could not create task ':google_maps_flutter:generateDebugUnitTestConfig'.
this and base files have different roots: D:\projects\xxxx\build\google_maps_flutter and C:\Users\User\AppData\Local\Pub\Cache\hosted\pub.dartlang.org\google_maps_flutter-2.0.11\android.
* Try:
Run with --info or --debug option to get more log output. Run with --scan to get full insights.
* Exception is:
com.intellij.openapi.externalSystem.model.ExternalSystemException: Could not create task ':google_maps_flutter:generateDebugUnitTestConfig'.
this and base files have different roots: D:\projects\xxxx\build\google_maps_flutter and C:\Users\User\AppData\Local\Pub\Cache\hosted\pub.dartlang.org\google_maps_flutter-2.0.11\android.
at org.jetbrains.plugins.gradle.model.ProjectImportAction.addBuildModels(ProjectImportAction.java:258)
at org.jetbrains.plugins.gradle.model.ProjectImportAction.execute(ProjectImportAction.java:116)
at org.jetbrains.plugins.gradle.model.ProjectImportAction.execute(ProjectImportAction.java:41)
at org.gradle.tooling.internal.consumer.connection.InternalBuildActionAdapter.execute(InternalBuildActionAdapter.java:64)
at org.gradle.tooling.internal.provider.runner.AbstractClientProvidedBuildActionRunner$ActionRunningListener.runAction(AbstractClientProvidedBuildActionRunner.java:134)
at org.gradle.tooling.internal.provider.runner.AbstractClientProvidedBuildActionRunner$ActionRunningListener.buildFinished(AbstractClientProvidedBuildActionRunner.java:119)
at jdk.internal.reflect.GeneratedMethodAccessor582.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
at org.gradle.internal.event.DefaultListenerManager$ListenerDetails.dispatch(DefaultListenerManager.java:398)
at org.gradle.internal.event.DefaultListenerManager$ListenerDetails.dispatch(DefaultListenerManager.java:380)
at org.gradle.internal.event.AbstractBroadcastDispatch.dispatch(AbstractBroadcastDispatch.java:61)
at org.gradle.internal.event.DefaultListenerManager$EventBroadcast$ListenerDispatch.dispatch(DefaultListenerManager.java:368)
at org.gradle.internal.event.DefaultListenerManager$EventBroadcast$ListenerDispatch.dispatch(DefaultListenerManager.java:355)
at org.gradle.internal.event.AbstractBroadcastDispatch.dispatch(AbstractBroadcastDispatch.java:43)
at org.gradle.internal.event.BroadcastDispatch$SingletonDispatch.dispatch(BroadcastDispatch.java:245)
at org.gradle.internal.event.BroadcastDispatch$SingletonDispatch.dispatch(BroadcastDispatch.java:157)
at org.gradle.internal.event.AbstractBroadcastDispatch.dispatch(AbstractBroadcastDispatch.java:61)
at org.gradle.internal.event.BroadcastDispatch$CompositeDispatch.dispatch(BroadcastDispatch.java:346)
at org.gradle.internal.event.BroadcastDispatch$CompositeDispatch.dispatch(BroadcastDispatch.java:249)
at org.gradle.internal.event.ListenerBroadcast.dispatch(ListenerBroadcast.java:141)
at org.gradle.internal.event.ListenerBroadcast.dispatch(ListenerBroadcast.java:37)
at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
at com.sun.proxy.$Proxy19.buildFinished(Unknown Source)
at org.gradle.initialization.DefaultGradleLauncher.finishBuild(DefaultGradleLauncher.java:196)
at org.gradle.initialization.DefaultGradleLauncher.finishBuild(DefaultGradleLauncher.java:132)
at org.gradle.internal.invocation.GradleBuildController$1.create(GradleBuildController.java:72)
at org.gradle.internal.work.DefaultWorkerLeaseService.withLocks(DefaultWorkerLeaseService.java:213)
at org.gradle.internal.invocation.GradleBuildController.doBuild(GradleBuildController.java:67)
at org.gradle.internal.invocation.GradleBuildController.run(GradleBuildController.java:56)
at org.gradle.tooling.internal.provider.runner.AbstractClientProvidedBuildActionRunner.runClientAction(AbstractClientProvidedBuildActionRunner.java:53)
at org.gradle.tooling.internal.provider.runner.ClientProvidedPhasedActionRunner.run(ClientProvidedPhasedActionRunner.java:47)
at org.gradle.launcher.exec.ChainingBuildActionRunner.run(ChainingBuildActionRunner.java:35)
at org.gradle.launcher.exec.ChainingBuildActionRunner.run(ChainingBuildActionRunner.java:35)
at org.gradle.launcher.exec.BuildOutcomeReportingBuildActionRunner.run(BuildOutcomeReportingBuildActionRunner.java:66)
at org.gradle.tooling.internal.provider.ValidatingBuildActionRunner.run(ValidatingBuildActionRunner.java:32)
at org.gradle.tooling.internal.provider.FileSystemWatchingBuildActionRunner.run(FileSystemWatchingBuildActionRunner.java:90)
at org.gradle.launcher.exec.BuildCompletionNotifyingBuildActionRunner.run(BuildCompletionNotifyingBuildActionRunner.java:41)
at org.gradle.launcher.exec.RunAsBuildOperationBuildActionRunner$3.call(RunAsBuildOperationBuildActionRunner.java:49)
at org.gradle.launcher.exec.RunAsBuildOperationBuildActionRunner$3.call(RunAsBuildOperationBuildActionRunner.java:44)
at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:200)
at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:195)
at org.gradle.internal.operations.DefaultBuildOperationRunner$3.execute(DefaultBuildOperationRunner.java:75)
at org.gradle.internal.operations.DefaultBuildOperationRunner$3.execute(DefaultBuildOperationRunner.java:68)
at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:153)
at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:68)
at org.gradle.internal.operations.DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:62)
at org.gradle.internal.operations.DefaultBuildOperationExecutor.lambda$call$2(DefaultBuildOperationExecutor.java:76)
at org.gradle.internal.operations.UnmanagedBuildOperationWrapper.callWithUnmanagedSupport(UnmanagedBuildOperationWrapper.java:54)
at org.gradle.internal.operations.DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:76)
at org.gradle.launcher.exec.RunAsBuildOperationBuildActionRunner.run(RunAsBuildOperationBuildActionRunner.java:44)
at org.gradle.launcher.exec.InProcessBuildActionExecuter.lambda$execute$0(InProcessBuildActionExecuter.java:59)
at org.gradle.composite.internal.DefaultRootBuildState.run(DefaultRootBuildState.java:86)
at org.gradle.launcher.exec.InProcessBuildActionExecuter.execute(InProcessBuildActionExecuter.java:58)
at org.gradle.launcher.exec.InProcessBuildActionExecuter.execute(InProcessBuildActionExecuter.java:30)
at org.gradle.launcher.exec.BuildTreeScopeLifecycleBuildActionExecuter.lambda$execute$0(BuildTreeScopeLifecycleBuildActionExecuter.java:34)
at org.gradle.internal.buildtree.BuildTreeState.run(BuildTreeState.java:53)
at org.gradle.launcher.exec.BuildTreeScopeLifecycleBuildActionExecuter.execute(BuildTreeScopeLifecycleBuildActionExecuter.java:33)
at org.gradle.launcher.exec.BuildTreeScopeLifecycleBuildActionExecuter.execute(BuildTreeScopeLifecycleBuildActionExecuter.java:28)
at org.gradle.tooling.internal.provider.ContinuousBuildActionExecuter.execute(ContinuousBuildActionExecuter.java:104)
at org.gradle.tooling.internal.provider.ContinuousBuildActionExecuter.execute(ContinuousBuildActionExecuter.java:55)
at org.gradle.tooling.internal.provider.SubscribableBuildActionExecuter.execute(SubscribableBuildActionExecuter.java:64)
at org.gradle.tooling.internal.provider.SubscribableBuildActionExecuter.execute(SubscribableBuildActionExecuter.java:37)
at org.gradle.tooling.internal.provider.SessionScopeLifecycleBuildActionExecuter.lambda$execute$0(SessionScopeLifecycleBuildActionExecuter.java:54)
at org.gradle.internal.session.BuildSessionState.run(BuildSessionState.java:67)
at org.gradle.tooling.internal.provider.SessionScopeLifecycleBuildActionExecuter.execute(SessionScopeLifecycleBuildActionExecuter.java:50)
at org.gradle.tooling.internal.provider.SessionScopeLifecycleBuildActionExecuter.execute(SessionScopeLifecycleBuildActionExecuter.java:36)
at org.gradle.tooling.internal.provider.GradleThreadBuildActionExecuter.execute(GradleThreadBuildActionExecuter.java:36)
at org.gradle.tooling.internal.provider.GradleThreadBuildActionExecuter.execute(GradleThreadBuildActionExecuter.java:25)
at org.gradle.tooling.internal.provider.StartParamsValidatingActionExecuter.execute(StartParamsValidatingActionExecuter.java:59)
at org.gradle.tooling.internal.provider.StartParamsValidatingActionExecuter.execute(StartParamsValidatingActionExecuter.java:31)
at org.gradle.tooling.internal.provider.SessionFailureReportingActionExecuter.execute(SessionFailureReportingActionExecuter.java:58)
at org.gradle.tooling.internal.provider.SessionFailureReportingActionExecuter.execute(SessionFailureReportingActionExecuter.java:42)
at org.gradle.tooling.internal.provider.SetupLoggingActionExecuter.execute(SetupLoggingActionExecuter.java:47)
at org.gradle.tooling.internal.provider.SetupLoggingActionExecuter.execute(SetupLoggingActionExecuter.java:31)
at org.gradle.launcher.daemon.server.exec.ExecuteBuild.doBuild(ExecuteBuild.java:65)
at org.gradle.launcher.daemon.server.exec.BuildCommandOnly.execute(BuildCommandOnly.java:37)
at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)
at org.gradle.launcher.daemon.server.exec.WatchForDisconnection.execute(WatchForDisconnection.java:39)
at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)
at org.gradle.launcher.daemon.server.exec.ResetDeprecationLogger.execute(ResetDeprecationLogger.java:29)
at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)
at org.gradle.launcher.daemon.server.exec.RequestStopIfSingleUsedDaemon.execute(RequestStopIfSingleUsedDaemon.java:35)
at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)
at org.gradle.launcher.daemon.server.exec.ForwardClientInput$2.create(ForwardClientInput.java:78)
at org.gradle.launcher.daemon.server.exec.ForwardClientInput$2.create(ForwardClientInput.java:75)
at org.gradle.util.Swapper.swap(Swapper.java:38)
at org.gradle.launcher.daemon.server.exec.ForwardClientInput.execute(ForwardClientInput.java:75)
at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)
at org.gradle.launcher.daemon.server.exec.LogAndCheckHealth.execute(LogAndCheckHealth.java:55)
at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)
at org.gradle.launcher.daemon.server.exec.LogToClient.doBuild(LogToClient.java:63)
at org.gradle.launcher.daemon.server.exec.BuildCommandOnly.execute(BuildCommandOnly.java:37)
at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)
at org.gradle.launcher.daemon.server.exec.EstablishBuildEnvironment.doBuild(EstablishBuildEnvironment.java:84)
at org.gradle.launcher.daemon.server.exec.BuildCommandOnly.execute(BuildCommandOnly.java:37)
at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)
at org.gradle.launcher.daemon.server.exec.StartBuildOrRespondWithBusy$1.run(StartBuildOrRespondWithBusy.java:52)
at org.gradle.launcher.daemon.server.DaemonStateCoordinator$1.run(DaemonStateCoordinator.java:297)
at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)
at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)
at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)
org.gradle.api.internal.tasks.DefaultTaskContainer$TaskCreationException: Could not create task ':google_maps_flutter:generateDebugUnitTestConfig'.
at org.gradle.api.internal.tasks.DefaultTaskContainer.taskCreationException(DefaultTaskContainer.java:719)
at org.gradle.api.internal.tasks.DefaultTaskContainer.access$600(DefaultTaskContainer.java:77)
at org.gradle.api.internal.tasks.DefaultTaskContainer$TaskCreatingProvider.domainObjectCreationException(DefaultTaskContainer.java:711)
at org.gradle.api.internal.DefaultNamedDomainObjectCollection$AbstractDomainObjectCreatingProvider.tryCreate(DefaultNamedDomainObjectCollection.java:948)
at org.gradle.api.internal.tasks.DefaultTaskContainer$TaskCreatingProvider.access$1401(DefaultTaskContainer.java:658)
at org.gradle.api.internal.tasks.DefaultTaskContainer$TaskCreatingProvider$1.run(DefaultTaskContainer.java:684)
at org.gradle.internal.operations.DefaultBuildOperationRunner$1.execute(DefaultBuildOperationRunner.java:29)
at org.gradle.internal.operations.DefaultBuildOperationRunner$1.execute(DefaultBuildOperationRunner.java:26)
at org.gradle.internal.operations.DefaultBuildOperationRunner$3.execute(DefaultBuildOperationRunner.java:75)
at org.gradle.internal.operations.DefaultBuildOperationRunner$3.execute(DefaultBuildOperationRunner.java:68)
at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:153)
at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:68)
at org.gradle.internal.operations.DefaultBuildOperationRunner.run(DefaultBuildOperationRunner.java:56)
at org.gradle.internal.operations.DefaultBuildOperationExecutor.lambda$run$1(DefaultBuildOperationExecutor.java:71)
at org.gradle.internal.operations.UnmanagedBuildOperationWrapper.runWithUnmanagedSupport(UnmanagedBuildOperationWrapper.java:45)
at org.gradle.internal.operations.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:71)
at org.gradle.api.internal.tasks.DefaultTaskContainer$TaskCreatingProvider.tryCreate(DefaultTaskContainer.java:680)
at org.gradle.api.internal.DefaultNamedDomainObjectCollection$AbstractDomainObjectCreatingProvider.calculateOwnValue(DefaultNamedDomainObjectCollection.java:929)
at org.gradle.api.internal.provider.AbstractMinimalProvider.calculateValue(AbstractMinimalProvider.java:103)
at org.gradle.api.internal.provider.FlatMapProvider.calculateOwnValue(FlatMapProvider.java:46)
at org.gradle.api.internal.provider.AbstractMinimalProvider.calculateValue(AbstractMinimalProvider.java:103)
at org.gradle.api.internal.provider.MappingProvider.calculateOwnValue(MappingProvider.java:55)
at org.gradle.api.internal.provider.AbstractMinimalProvider.calculateValue(AbstractMinimalProvider.java:103)
at org.gradle.api.internal.provider.DefaultProperty.calculateValueFrom(DefaultProperty.java:128)
at org.gradle.api.internal.provider.DefaultProperty.calculateValueFrom(DefaultProperty.java:25)
at org.gradle.api.internal.provider.AbstractProperty.doCalculateValue(AbstractProperty.java:133)
at org.gradle.api.internal.provider.AbstractProperty.calculateOwnValue(AbstractProperty.java:127)
at org.gradle.api.internal.provider.AbstractMinimalProvider.calculateValue(AbstractMinimalProvider.java:103)
at org.gradle.api.internal.provider.DefaultProperty.calculateValueFrom(DefaultProperty.java:128)
at org.gradle.api.internal.provider.DefaultProperty.calculateValueFrom(DefaultProperty.java:25)
at org.gradle.api.internal.provider.AbstractProperty.doCalculateValue(AbstractProperty.java:133)
at org.gradle.api.internal.provider.AbstractProperty.calculateOwnValue(AbstractProperty.java:127)
at org.gradle.api.internal.provider.AbstractMinimalProvider.calculateValue(AbstractMinimalProvider.java:103)
at org.gradle.api.internal.provider.DefaultProperty.calculateValueFrom(DefaultProperty.java:128)
at org.gradle.api.internal.provider.DefaultProperty.calculateValueFrom(DefaultProperty.java:25)
at org.gradle.api.internal.provider.AbstractProperty.doCalculateValue(AbstractProperty.java:133)
at org.gradle.api.internal.provider.AbstractProperty.calculateOwnValue(AbstractProperty.java:127)
at org.gradle.api.internal.provider.AbstractMinimalProvider.get(AbstractMinimalProvider.java:84)
at com.android.build.gradle.internal.ide.ModelBuilder.createUnitTestsJavaArtifact(ModelBuilder.java:823)
at com.android.build.gradle.internal.ide.ModelBuilder.createVariant(ModelBuilder.java:710)
at com.android.build.gradle.internal.ide.ModelBuilder.buildVariant(ModelBuilder.java:606)
at com.android.build.gradle.internal.ide.ModelBuilder.buildAll(ModelBuilder.java:239)
at com.android.build.gradle.internal.ide.ModelBuilder.buildAll(ModelBuilder.java:156)
at org.gradle.tooling.provider.model.internal.DefaultToolingModelBuilderRegistry$BuilderWithParameter.build(DefaultToolingModelBuilderRegistry.java:194)
at org.gradle.tooling.provider.model.internal.DefaultToolingModelBuilderRegistry$LockSingleProjectBuilder.lambda$build$0(DefaultToolingModelBuilderRegistry.java:211)
at org.gradle.api.internal.project.DefaultProjectStateRegistry$ProjectStateImpl.lambda$withProjectLock$3(DefaultProjectStateRegistry.java:310)
at org.gradle.internal.work.DefaultWorkerLeaseService.withLocks(DefaultWorkerLeaseService.java:213)
at org.gradle.api.internal.project.DefaultProjectStateRegistry$ProjectStateImpl.withProjectLock(DefaultProjectStateRegistry.java:310)
at org.gradle.api.internal.project.DefaultProjectStateRegistry$ProjectStateImpl.fromMutableState(DefaultProjectStateRegistry.java:291)
at org.gradle.tooling.provider.model.internal.DefaultToolingModelBuilderRegistry$LockSingleProjectBuilder.build(DefaultToolingModelBuilderRegistry.java:211)
at org.gradle.tooling.provider.model.internal.DefaultToolingModelBuilderRegistry$BuildOperationWrappingBuilder$1.call(DefaultToolingModelBuilderRegistry.java:246)
at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:200)
at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:195)
at org.gradle.internal.operations.DefaultBuildOperationRunner$3.execute(DefaultBuildOperationRunner.java:75)
at org.gradle.internal.operations.DefaultBuildOperationRunner$3.execute(DefaultBuildOperationRunner.java:68)
at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:153)
at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:68)
at org.gradle.internal.operations.DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:62)
at org.gradle.internal.operations.DefaultBuildOperationExecutor.lambda$call$2(DefaultBuildOperationExecutor.java:76)
at org.gradle.internal.operations.UnmanagedBuildOperationWrapper.callWithUnmanagedSupport(UnmanagedBuildOperationWrapper.java:54)
at org.gradle.internal.operations.DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:76)
at org.gradle.tooling.provider.model.internal.DefaultToolingModelBuilderRegistry$BuildOperationWrappingBuilder.build(DefaultToolingModelBuilderRegistry.java:243)
at org.gradle.tooling.internal.provider.runner.DefaultBuildController.getParameterizedModel(DefaultBuildController.java:156)
at org.gradle.tooling.internal.provider.runner.DefaultBuildController.getModel(DefaultBuildController.java:104)
at org.gradle.tooling.internal.consumer.connection.ParameterAwareBuildControllerAdapter.getModel(ParameterAwareBuildControllerAdapter.java:39)
at org.gradle.tooling.internal.consumer.connection.UnparameterizedBuildController.getModel(UnparameterizedBuildController.java:113)
at org.gradle.tooling.internal.consumer.connection.NestedActionAwareBuildControllerAdapter.getModel(NestedActionAwareBuildControllerAdapter.java:31)
at org.gradle.tooling.internal.consumer.connection.UnparameterizedBuildController.findModel(UnparameterizedBuildController.java:97)
at org.gradle.tooling.internal.consumer.connection.NestedActionAwareBuildControllerAdapter.findModel(NestedActionAwareBuildControllerAdapter.java:31)
at org.jetbrains.plugins.gradle.model.ProjectImportAction$MyBuildController.findModel(ProjectImportAction.java:574)
at com.android.tools.idea.gradle.project.sync.AndroidExtraModelProviderWorker.findVariantModel(AndroidExtraModelProviderWorker.kt:521)
at com.android.tools.idea.gradle.project.sync.AndroidExtraModelProviderWorker.access$findVariantModel(AndroidExtraModelProviderWorker.kt:48)
at com.android.tools.idea.gradle.project.sync.AndroidExtraModelProviderWorker$getVariantAndModuleDependenciesAction$1.invoke(AndroidExtraModelProviderWorker.kt:450)
at com.android.tools.idea.gradle.project.sync.AndroidExtraModelProviderWorker$getVariantAndModuleDependenciesAction$1.invoke(AndroidExtraModelProviderWorker.kt:449)
at com.android.tools.idea.gradle.project.sync.SequentialSyncActionRunner.runAction(SyncActionRunner.kt:61)
at com.android.tools.idea.gradle.project.sync.SequentialSyncActionRunner.runActions(SyncActionRunner.kt:57)
at com.android.tools.idea.gradle.project.sync.AndroidExtraModelProviderWorker.chooseSelectedVariants(AndroidExtraModelProviderWorker.kt:364)
at com.android.tools.idea.gradle.project.sync.AndroidExtraModelProviderWorker.populateAndroidModels(AndroidExtraModelProviderWorker.kt:154)
at com.android.tools.idea.gradle.project.sync.AndroidExtraModelProviderWorker.populateBuildModels(AndroidExtraModelProviderWorker.kt:65)
at com.android.tools.idea.gradle.project.sync.AndroidExtraModelProvider.populateBuildModels(AndroidExtraModelProvider.kt:52)
at org.jetbrains.plugins.gradle.model.ProjectImportAction.addBuildModels(ProjectImportAction.java:246)
at org.jetbrains.plugins.gradle.model.ProjectImportAction.execute(ProjectImportAction.java:116)
at org.jetbrains.plugins.gradle.model.ProjectImportAction.execute(ProjectImportAction.java:41)
at org.gradle.tooling.internal.consumer.connection.InternalBuildActionAdapter.execute(InternalBuildActionAdapter.java:64)
at org.gradle.tooling.internal.provider.runner.AbstractClientProvidedBuildActionRunner$ActionRunningListener.runAction(AbstractClientProvidedBuildActionRunner.java:134)
at org.gradle.tooling.internal.provider.runner.AbstractClientProvidedBuildActionRunner$ActionRunningListener.buildFinished(AbstractClientProvidedBuildActionRunner.java:119)
at jdk.internal.reflect.GeneratedMethodAccessor582.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
at org.gradle.internal.event.DefaultListenerManager$ListenerDetails.dispatch(DefaultListenerManager.java:398)
at org.gradle.internal.event.DefaultListenerManager$ListenerDetails.dispatch(DefaultListenerManager.java:380)
at org.gradle.internal.event.AbstractBroadcastDispatch.dispatch(AbstractBroadcastDispatch.java:61)
at org.gradle.internal.event.DefaultListenerManager$EventBroadcast$ListenerDispatch.dispatch(DefaultListenerManager.java:368)
at org.gradle.internal.event.DefaultListenerManager$EventBroadcast$ListenerDispatch.dispatch(DefaultListenerManager.java:355)
at org.gradle.internal.event.AbstractBroadcastDispatch.dispatch(AbstractBroadcastDispatch.java:43)
at org.gradle.internal.event.BroadcastDispatch$SingletonDispatch.dispatch(BroadcastDispatch.java:245)
at org.gradle.internal.event.BroadcastDispatch$SingletonDispatch.dispatch(BroadcastDispatch.java:157)
at org.gradle.internal.event.AbstractBroadcastDispatch.dispatch(AbstractBroadcastDispatch.java:61)
at org.gradle.internal.event.BroadcastDispatch$CompositeDispatch.dispatch(BroadcastDispatch.java:346)
at org.gradle.internal.event.BroadcastDispatch$CompositeDispatch.dispatch(BroadcastDispatch.java:249)
at org.gradle.internal.event.ListenerBroadcast.dispatch(ListenerBroadcast.java:141)
at org.gradle.internal.event.ListenerBroadcast.dispatch(ListenerBroadcast.java:37)
at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
at com.sun.proxy.$Proxy19.buildFinished(Unknown Source)
at org.gradle.initialization.DefaultGradleLauncher.finishBuild(DefaultGradleLauncher.java:196)
at org.gradle.initialization.DefaultGradleLauncher.finishBuild(DefaultGradleLauncher.java:132)
at org.gradle.internal.invocation.GradleBuildController$1.create(GradleBuildController.java:72)
at org.gradle.internal.work.DefaultWorkerLeaseService.withLocks(DefaultWorkerLeaseService.java:213)
at org.gradle.internal.invocation.GradleBuildController.doBuild(GradleBuildController.java:67)
at org.gradle.internal.invocation.GradleBuildController.run(GradleBuildController.java:56)
at org.gradle.tooling.internal.provider.runner.AbstractClientProvidedBuildActionRunner.runClientAction(AbstractClientProvidedBuildActionRunner.java:53)
at org.gradle.tooling.internal.provider.runner.ClientProvidedPhasedActionRunner.run(ClientProvidedPhasedActionRunner.java:47)
at org.gradle.launcher.exec.ChainingBuildActionRunner.run(ChainingBuildActionRunner.java:35)
at org.gradle.launcher.exec.ChainingBuildActionRunner.run(ChainingBuildActionRunner.java:35)
at org.gradle.launcher.exec.BuildOutcomeReportingBuildActionRunner.run(BuildOutcomeReportingBuildActionRunner.java:66)
at org.gradle.tooling.internal.provider.ValidatingBuildActionRunner.run(ValidatingBuildActionRunner.java:32)
at org.gradle.tooling.internal.provider.FileSystemWatchingBuildActionRunner.run(FileSystemWatchingBuildActionRunner.java:90)
at org.gradle.launcher.exec.BuildCompletionNotifyingBuildActionRunner.run(BuildCompletionNotifyingBuildActionRunner.java:41)
at org.gradle.launcher.exec.RunAsBuildOperationBuildActionRunner$3.call(RunAsBuildOperationBuildActionRunner.java:49)
at org.gradle.launcher.exec.RunAsBuildOperationBuildActionRunner$3.call(RunAsBuildOperationBuildActionRunner.java:44)
at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:200)
at org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:195)
at org.gradle.internal.operations.DefaultBuildOperationRunner$3.execute(DefaultBuildOperationRunner.java:75)
at org.gradle.internal.operations.DefaultBuildOperationRunner$3.execute(DefaultBuildOperationRunner.java:68)
at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:153)
at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:68)
at org.gradle.internal.operations.DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:62)
at org.gradle.internal.operations.DefaultBuildOperationExecutor.lambda$call$2(DefaultBuildOperationExecutor.java:76)
at org.gradle.internal.operations.UnmanagedBuildOperationWrapper.callWithUnmanagedSupport(UnmanagedBuildOperationWrapper.java:54)
at org.gradle.internal.operations.DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:76)
at org.gradle.launcher.exec.RunAsBuildOperationBuildActionRunner.run(RunAsBuildOperationBuildActionRunner.java:44)
at org.gradle.launcher.exec.InProcessBuildActionExecuter.lambda$execute$0(InProcessBuildActionExecuter.java:59)
at org.gradle.composite.internal.DefaultRootBuildState.run(DefaultRootBuildState.java:86)
at org.gradle.launcher.exec.InProcessBuildActionExecuter.execute(InProcessBuildActionExecuter.java:58)
at org.gradle.launcher.exec.InProcessBuildActionExecuter.execute(InProcessBuildActionExecuter.java:30)
at org.gradle.launcher.exec.BuildTreeScopeLifecycleBuildActionExecuter.lambda$execute$0(BuildTreeScopeLifecycleBuildActionExecuter.java:34)
at org.gradle.internal.buildtree.BuildTreeState.run(BuildTreeState.java:53)
at org.gradle.launcher.exec.BuildTreeScopeLifecycleBuildActionExecuter.execute(BuildTreeScopeLifecycleBuildActionExecuter.java:33)
at org.gradle.launcher.exec.BuildTreeScopeLifecycleBuildActionExecuter.execute(BuildTreeScopeLifecycleBuildActionExecuter.java:28)
at org.gradle.tooling.internal.provider.ContinuousBuildActionExecuter.execute(ContinuousBuildActionExecuter.java:104)
at org.gradle.tooling.internal.provider.ContinuousBuildActionExecuter.execute(ContinuousBuildActionExecuter.java:55)
at org.gradle.tooling.internal.provider.SubscribableBuildActionExecuter.execute(SubscribableBuildActionExecuter.java:64)
at org.gradle.tooling.internal.provider.SubscribableBuildActionExecuter.execute(SubscribableBuildActionExecuter.java:37)
at org.gradle.tooling.internal.provider.SessionScopeLifecycleBuildActionExecuter.lambda$execute$0(SessionScopeLifecycleBuildActionExecuter.java:54)
at org.gradle.internal.session.BuildSessionState.run(BuildSessionState.java:67)
at org.gradle.tooling.internal.provider.SessionScopeLifecycleBuildActionExecuter.execute(SessionScopeLifecycleBuildActionExecuter.java:50)
at org.gradle.tooling.internal.provider.SessionScopeLifecycleBuildActionExecuter.execute(SessionScopeLifecycleBuildActionExecuter.java:36)
at org.gradle.tooling.internal.provider.GradleThreadBuildActionExecuter.execute(GradleThreadBuildActionExecuter.java:36)
at org.gradle.tooling.internal.provider.GradleThreadBuildActionExecuter.execute(GradleThreadBuildActionExecuter.java:25)
at org.gradle.tooling.internal.provider.StartParamsValidatingActionExecuter.execute(StartParamsValidatingActionExecuter.java:59)
at org.gradle.tooling.internal.provider.StartParamsValidatingActionExecuter.execute(StartParamsValidatingActionExecuter.java:31)
at org.gradle.tooling.internal.provider.SessionFailureReportingActionExecuter.execute(SessionFailureReportingActionExecuter.java:58)
at org.gradle.tooling.internal.provider.SessionFailureReportingActionExecuter.execute(SessionFailureReportingActionExecuter.java:42)
at org.gradle.tooling.internal.provider.SetupLoggingActionExecuter.execute(SetupLoggingActionExecuter.java:47)
at org.gradle.tooling.internal.provider.SetupLoggingActionExecuter.execute(SetupLoggingActionExecuter.java:31)
at org.gradle.launcher.daemon.server.exec.ExecuteBuild.doBuild(ExecuteBuild.java:65)
at org.gradle.launcher.daemon.server.exec.BuildCommandOnly.execute(BuildCommandOnly.java:37)
at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)
at org.gradle.launcher.daemon.server.exec.WatchForDisconnection.execute(WatchForDisconnection.java:39)
at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)
at org.gradle.launcher.daemon.server.exec.ResetDeprecationLogger.execute(ResetDeprecationLogger.java:29)
at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)
at org.gradle.launcher.daemon.server.exec.RequestStopIfSingleUsedDaemon.execute(RequestStopIfSingleUsedDaemon.java:35)
at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)
at org.gradle.launcher.daemon.server.exec.ForwardClientInput$2.create(ForwardClientInput.java:78)
at org.gradle.launcher.daemon.server.exec.ForwardClientInput$2.create(ForwardClientInput.java:75)
at org.gradle.util.Swapper.swap(Swapper.java:38)
at org.gradle.launcher.daemon.server.exec.ForwardClientInput.execute(ForwardClientInput.java:75)
at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)
at org.gradle.launcher.daemon.server.exec.LogAndCheckHealth.execute(LogAndCheckHealth.java:55)
at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)
at org.gradle.launcher.daemon.server.exec.LogToClient.doBuild(LogToClient.java:63)
at org.gradle.launcher.daemon.server.exec.BuildCommandOnly.execute(BuildCommandOnly.java:37)
at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)
at org.gradle.launcher.daemon.server.exec.EstablishBuildEnvironment.doBuild(EstablishBuildEnvironment.java:84)
at org.gradle.launcher.daemon.server.exec.BuildCommandOnly.execute(BuildCommandOnly.java:37)
at org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)
at org.gradle.launcher.daemon.server.exec.StartBuildOrRespondWithBusy$1.run(StartBuildOrRespondWithBusy.java:52)
at org.gradle.launcher.daemon.server.DaemonStateCoordinator$1.run(DaemonStateCoordinator.java:297)
at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)
at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)
at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.lang.IllegalArgumentException: this and base files have different roots: D:\projects\xxxx\build\google_maps_flutter and C:\Users\User\AppData\Local\Pub\Cache\hosted\pub.dartlang.org\google_maps_flutter-2.0.11\android.
at kotlin.io.FilesKt__UtilsKt.toRelativeString(Utils.kt:117)
at com.android.utils.FileUtils.relativePossiblyNonExistingPath(FileUtils.java:407)
at com.android.build.gradle.tasks.GenerateTestConfig$TestConfigInputs.<init>(GenerateTestConfig.kt:169)
at com.android.build.gradle.tasks.GenerateTestConfig$CreationAction.configure(GenerateTestConfig.kt:125)
at com.android.build.gradle.tasks.GenerateTestConfig$CreationAction.configure(GenerateTestConfig.kt:99)
at com.android.build.gradle.internal.tasks.factory.TaskConfigurationActions.execute(TaskFactoryUtils.kt:94)
at com.android.build.gradle.internal.tasks.factory.TaskConfigurationActions.execute(TaskFactoryUtils.kt:80)
at org.gradle.api.internal.DefaultMutationGuard$2.execute(DefaultMutationGuard.java:44)
at org.gradle.api.internal.DefaultMutationGuard$2.execute(DefaultMutationGuard.java:44)
at org.gradle.configuration.internal.DefaultUserCodeApplicationContext$CurrentApplication$1.execute(DefaultUserCodeApplicationContext.java:100)
at org.gradle.api.internal.DefaultCollectionCallbackActionDecorator$BuildOperationEmittingAction$1.run(DefaultCollectionCallbackActionDecorator.java:95)
at org.gradle.internal.operations.DefaultBuildOperationRunner$1.execute(DefaultBuildOperationRunner.java:29)
at org.gradle.internal.operations.DefaultBuildOperationRunner$1.execute(DefaultBuildOperationRunner.java:26)
at org.gradle.internal.operations.DefaultBuildOperationRunner$3.execute(DefaultBuildOperationRunner.java:75)
at org.gradle.internal.operations.DefaultBuildOperationRunner$3.execute(DefaultBuildOperationRunner.java:68)
at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:153)
at org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:68)
at org.gradle.internal.operations.DefaultBuildOperationRunner.run(DefaultBuildOperationRunner.java:56)
at org.gradle.internal.operations.DefaultBuildOperationExecutor.lambda$run$1(DefaultBuildOperationExecutor.java:71)
at org.gradle.internal.operations.UnmanagedBuildOperationWrapper.runWithUnmanagedSupport(UnmanagedBuildOperationWrapper.java:45)
at org.gradle.internal.operations.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:71)
at org.gradle.api.internal.DefaultCollectionCallbackActionDecorator$BuildOperationEmittingAction.execute(DefaultCollectionCallbackActionDecorator.java:92)
at org.gradle.internal.ImmutableActionSet$SetWithManyActions.execute(ImmutableActionSet.java:329)
at org.gradle.api.internal.DefaultDomainObjectCollection.doAdd(DefaultDomainObjectCollection.java:264)
at org.gradle.api.internal.DefaultNamedDomainObjectCollection.doAdd(DefaultNamedDomainObjectCollection.java:113)
at org.gradle.api.internal.DefaultDomainObjectCollection.add(DefaultDomainObjectCollection.java:258)
at org.gradle.api.internal.DefaultNamedDomainObjectCollection$AbstractDomainObjectCreatingProvider.tryCreate(DefaultNamedDomainObjectCollection.java:944)
... 183 more
```","I am coming from [URL]
I followed the instructions still I am getting


[TRIPLE QUOTE].",1,0,0,0,0,0,Exasperation,Frustration,,,
flutter/flutter,issue,945169237,2021-10-17 18:08:17,aleripe,No news? No answer? @TahaTesser @darshankawar,No news? No answer? [USER] [USER],1,0,0,0,0,0,Exasperation,Frustration,Frustration,,
flutter/flutter,issue,948199142,2021-10-21 2:29:53,sugood,"I also encountered the same problem, tried the following solution, the problem still exists

```
 buttonTheme:ButtonThemeData(minWidth: 5),
 textTheme: TextTheme(button: TextStyle(fontSize: 10)),
```","I also encountered the same problem, tried the following solution, the problem still exists 

[TRIPLE QUOTE].",1,0,0,0,0,0,Exasperation,Frustration,Frustration,,
webpack/webpack,issue,948250397,2021-10-21 4:35:28,Hideer,@simonchan2013 Did you finally solve this problem? I have the same idea and encountered a problem,[USER] Did you finally solve this problem? I have the same idea and encountered a problem,1,0,0,0,0,0,Exasperation,Frustration,,,
flutter/flutter,issue,948447080,2021-10-21 9:54:52,MCarlomagno,Any news about this issue?,Any news about this issue?,1,0,0,0,0,0,Exasperation,Frustration,Frustration,,
angular/angular,issue,948624251,2021-10-21 13:35:10,JR-Utily,"How come something like that is still not solved after 4 full years ?
XSRF is highly configurable in most server side technology, it should be the same on frontend side.
I need to interact with a backend that checks XSRF on each request with header ""application/json"", whatever the http method is.","How come something like that is still not solved after 4 full years ?
XSRF is highly configurable in most server side technology, it should be the same on frontend side.
I need to interact with a backend that checks XSRF on each request with header ""application/json"", whatever the http method is.",1,0,0,0,0,0,Exasperation,Frustration,,,
angular/angular,issue,949326882,2021-10-22 6:34:53,ilyakonrad,Angular 12.1.1 and this is still the case. Can't reliably calculate styles of rendered elements because of this. Why isn't this fixed yet 4 years later?,Angular 12.1.1 and this is still the case. Can't reliably calculate styles of rendered elements because of this. Why isn't this fixed yet 4 years later?,1,0,0,0,0,0,Exasperation,Frustration,,,
flutter/flutter,issue,951202592,2021-10-25 18:42:06,AzadCoder,Guys any solution after 3 years?,Guys any solution after 3 years?,1,0,0,0,0,0,Exasperation,Frustration,Frustration,,
webpack/webpack,issue,955667880,2021-10-31 9:42:45,revolter,"> workaround:
>
> ```shell
> export NODE_OPTIONS=--openssl-legacy-provider
> ```

If this is a workaround, and this issue was closed, what is the solution?","[BLOCK QUOTE].

If this is a workaround, and this issue was closed, what is the solution?",1,0,0,0,0,0,Exasperation,Frustration,Frustration,,
angular/angular,issue,960494704,2021-11-04 6:37:50,Krysztal,5 years after issue creation and still forms cause this bug. Are you going to fix it?,5 years after issue creation and still forms cause this bug. Are you going to fix it?,1,0,0,0,0,0,Exasperation,Frustration,,,
flutter/flutter,issue,946366720,2021-10-19 4:55:58,zanderso,"The longer backtrace also doesn't make sense to me, but maybe @jason-simmons or @chinmaygarde have more insights.","The longer backtrace also doesn't make sense to me, but maybe [USER] or [USER] have more insights.",1,0,0,0,0,0,Exasperation,Frustration,Frustration,,
flutter/flutter,issue,954299591,2021-10-28 23:36:00,janoschp,This problem still persists...,This problem still persists...,1,0,0,0,0,0,Irritation,Annoyance,Annoyance,,
webpack/webpack,pull_request,90343794,2016-11-30 22:30:11,sokra,Why only show warnings for emitted chunks? Show them always. The error doesn't vanish on recompile. It's still to big.,Why only show warnings for emitted chunks? Show them always. The error doesn't vanish on recompile. It's still to big.,1,0,0,0,0,0,Irritation,annoyance,,,
webpack/webpack,pull_request,100009777,2017-02-08 8:08:02,sokra,double `;;`. Please check if your tests make sense when writing...,double `;;`. Please check if your tests make sense when writing...,1,0,0,0,0,0,Irritation,Annoyance,Annoyance,,
webpack/webpack,pull_request,101380209,2017-02-15 20:54:11,timse,"it does look weird
but if i do what you suggest (what i tried in the first place) the linter complains.
Having it not like that makes eslint complain though.
The two linters should be aligned at some point","it does look weird
but if i do what you suggest (what i tried in the first place) the linter complains.
Having it not like that makes eslint complain though.
The two linters should be aligned at some point",1,0,0,0,0,0,Irritation,Annoyance,Sound like some kind of frowning -> Annoyance/Irritaion,,
webpack/webpack,pull_request,104302457,2017-03-05 2:39:41,ornj,"Just to call this out, a SyntaxError is still being thrown but the message no longer contains this text.","Just to call this out, a SyntaxError is still being thrown but the message no longer contains this text.",1,0,0,0,0,0,Irritation,Aggravation,Aggravation,,
webpack/webpack,pull_request,127898160,2017-07-18 7:18:37,probablyup,just making this a little more readable - hard to grok with such high arity if all on one line,just making this a little more readable - hard to grok with such high arity if all on one line,1,0,0,0,0,0,Irritation,annoyance,,,
webpack/webpack,pull_request,149628835,2017-11-08 10:27:35,sokra,"Throwing is expensive, but this line doesn't throw. It's not in the hot path anyway. Not worth changing.","Throwing is expensive, but this line doesn't throw. It's not in the hot path anyway. Not worth changing.",1,0,0,0,0,0,Irritation,Annoyance,Annyance,,1
webpack/webpack,pull_request,173096042,2018-03-08 8:54:36,ooflorent,Please add brackets here. It's really hard to read.,Please add brackets here. It's really hard to read.,1,0,0,0,0,0,Irritation,,Irritation,,
webpack/webpack,pull_request,187769710,2018-05-12 10:20:56,xtuc,"Sorry but I don't understand why you are renaming the internal name here?

How are the usage detected? I'm not able to trigger the DCE.

```js
import {test} from ""./test.c.wasm"";

test();

// generator.js

module.isUsed(""test"") // test
module.isUsed(""nonexisting"") // nonexisting
```","Sorry but I don't understand why you are renaming the internal name here?

How are the usage detected? I'm not able to trigger the DCE.

[TRIPLE QUOTE].",1,0,0,0,0,0,Irritation,annoyance,,,1
webpack/webpack,pull_request,216911283,2018-09-12 6:35:21,sokra,Please read my comment again. This is supposed to return a function when `this.name` is a function.,Please read my comment again. This is supposed to return a function when `this.name` is a function.,1,0,0,0,0,0,Irritation,annoyance,,,
Microsoft/TypeScript,pull_request,425446839,2020-05-14 21:40:20,RyanCavanaugh,"Well, you can't fix the entire world. We'll have to figure out what the right balance of correctness vs not breaking everyone is. I'll bring it up in our weekly design meeting.","Well, you can't fix the entire world. We'll have to figure out what the right balance of correctness vs not breaking everyone is. I'll bring it up in our weekly design meeting.",1,0,0,0,0,0,Irritation,-,Irritant,,1
Microsoft/TypeScript,pull_request,536463509,2020-12-05 0:42:43,DanielRosenwasser,"bash is so dumb, I hate computers","bash is so dumb, I hate computers",1,0,0,0,0,0,Irritation,annoyance,,,
Microsoft/TypeScript,pull_request,575565644,2021-02-12 23:02:03,andrewbranch,🤷 it's backward compatible,🤷 it's backward compatible,1,0,0,0,0,0,Irritation,Annoyance,Annoyance,,
Microsoft/TypeScript,pull_request,576750629,2021-02-16 11:26:03,weswigham,"I'm *pretty sure* we should sort this in some way, since I think our array ordering will respect the input order (our maps all respect insertion order for iteration at least) - so `{a, b}` and `{b, a}` are going to yield props in differing orders, which'll in turn make differing keys here, but are... essentially the same type? The same as far as we actually reason about anyway.","I'm *pretty sure* we should sort this in some way, since I think our array ordering will respect the input order (our maps all respect insertion order for iteration at least) - so `{a, b}` and `{b, a}` are going to yield props in differing orders, which'll in turn make differing keys here, but are... essentially the same type? The same as far as we actually reason about anyway.",1,0,0,0,0,0,Irritation,Annoyance,Annoyance,1,
Microsoft/TypeScript,pull_request,619346313,2021-04-23 16:22:01,andrewbranch,"All of these are fine to have, and correct, but as far as I understand, essentially pointless. I don’t think they’re particularly important to test, and I definitely think that little to no implementation code should be written to make these cases pass.","All of these are fine to have, and correct, but as far as I understand, essentially pointless. I don’t think they’re particularly important to test, and I definitely think that little to no implementation code should be written to make these cases pass.",1,0,0,0,0,0,Irritation,Annoyance,Annoyed,,1
angular/angular,pull_request,622428301,2021-04-28 18:17:30,kapunahelewong,I can't reproduce this formatting issue. Is your screen zoomed in by chance? I've broken the layout by forgetting I zoomed in.,I can't reproduce this formatting issue. Is your screen zoomed in by chance? I've broken the layout by forgetting I zoomed in.,1,0,0,0,0,0,Irritation,annoyance,,,
angular/angular,pull_request,626076316,2021-05-04 20:17:17,jelbourn,"This seems kind of repetitive: ""Strict mode is the default"", ""automatically uses strict mode""","This seems kind of repetitive: ""Strict mode is the default"", ""automatically uses strict mode""",1,0,0,0,0,0,Irritation,Annoyance,Annoyance,,
angular/angular,pull_request,627465339,2021-05-06 14:20:45,gkalpak,"FWIW, I find this way of formatting difficult to read. I'd rather stick to how similar elements are formatted in the `i18n` examples (but I don't feel particularly strongly about it).","FWIW, I find this way of formatting difficult to read. I'd rather stick to how similar elements are formatted in the `i18n` examples (but I don't feel particularly strongly about it).",1,0,0,0,0,0,Irritation,Annoyance,Annoyance,,
angular/angular,pull_request,637383047,2021-05-22 9:58:39,gkalpak,This seems to work fine for me 😕,This seems to work fine for me 😕,1,0,0,0,0,0,Irritation,Annoyance,Irritant,,
flutter/flutter,pull_request,641433569,2021-05-28 10:08:31,xu-baolin,"You are right, this change actually breaks some tests.","You are right, this change actually breaks some tests.",1,0,0,0,0,0,Irritation,Agitation,Agitation,,
angular/angular,pull_request,651918294,2021-06-15 15:41:01,gkalpak,Could you please remove these unrelated formatting changes (here and below)? :pray:,Could you please remove these unrelated formatting changes (here and below)? :pray:,1,0,0,0,0,0,Irritation,Annoyance,Annoyance,,
flutter/flutter,pull_request,658926348,2021-06-25 17:27:19,jmagman,"I think the whitespace is wrong but hard to tell in GitHub
```suggestion
 _assetDirectory.childDirectory('data').childDirectory('flutter_assets'),
```","I think the whitespace is wrong but hard to tell in GitHub
[TRIPLE QUOTE].",1,0,0,0,0,0,Irritation,Annoyance,Annoyance,,
flutter/flutter,pull_request,668225309,2021-07-12 20:15:12,goderbauer,"Please revert all these unrelated code formatting changes. The flutter repo does not use dartfmt, see also https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo#formatting","Please revert all these unrelated code formatting changes. The flutter repo does not use dartfmt, see also [URL]",1,0,0,0,0,0,Irritation,annoyance,,1,
flutter/flutter,pull_request,668974964,2021-07-13 17:33:58,justinmc,I'm sure you're aware but heads up there is a commented out method here.,I'm sure you're aware but heads up there is a commented out method here.,1,0,0,0,0,0,Irritation,annoyance,,,
flutter/flutter,pull_request,669906139,2021-07-14 19:49:28,HansMuller,"This is pretty hard to read. Here's an alternative:
```dart

const Widget width20 = SizedBox(width: 20.0);
const Widget width16 = SizedBox(width: 16.0);

 child: Row(
 mainAxisSize: MainAxisSize.min,
 children: child == null
 ? <Widget>[width20, _label!, width20]
 : isExtended
 ? <Widget>[width16, child!, SizedBox(width: iconLabelSpacing), _label!, width20]
 : <Widget>[width20, child!, width20];
 )
```","This is pretty hard to read. Here's an alternative:
[TRIPLE QUOTE].",1,0,0,0,0,0,Irritation,,Hard to read -> Irritation,,
angular/angular,pull_request,669942401,2021-07-14 20:47:31,devversion,this comment is a little outdated,this comment is a little outdated,1,0,0,0,0,0,Irritation,annoyance,,,
angular/angular,pull_request,671498090,2021-07-16 20:06:15,gioragutt,"Of course, none is asking for our agreement, it was just stating an opinion for the sake of the discussion.
My first intuition was that because imports in NgModules could only import modules, then using the same name in components would be semantically different. However, considering you'll now be able to import Components as well, perhaps it IS semantically the same.","Of course, none is asking for our agreement, it was just stating an opinion for the sake of the discussion.
My first intuition was that because imports in NgModules could only import modules, then using the same name in components would be semantically different. However, considering you'll now be able to import Components as well, perhaps it IS semantically the same.",1,0,0,0,0,0,Irritation,Annoyance,Annoyance,,
flutter/flutter,pull_request,673540353,2021-07-20 22:41:56,justinmc,"This file's diff is really hard to read, but basically what happened was:

 * Lots of logic moved to TextEditingAction, TextEditingValue, and TextSelection.
 * Some alphabetizing/reordering may have happened...
 * TextMetrics was implemented.
 * debugAssertLayoutUpToDate was turned into a function and deduplicated.","This file's diff is really hard to read, but basically what happened was:

 * Lots of logic moved to TextEditingAction, TextEditingValue, and TextSelection.
 * Some alphabetizing/reordering may have happened...
 * TextMetrics was implemented.
 * debugAssertLayoutUpToDate was turned into a function and deduplicated.",1,0,0,0,0,0,Irritation,Annoyance,Hard to read -> Irritant,,
flutter/flutter,pull_request,677019183,2021-07-26 23:53:53,HansMuller,Please don't reformat this,Please don't reformat this,1,0,0,0,0,0,Irritation,,Irritation,,
flutter/flutter,pull_request,681141416,2021-08-02 17:17:02,HansMuller,"This is a bit hard to read. Here's a suggestion:
```dart
final TextStyle extendedTextStyle = (this.extendedTextStyle
 ?? floatingActionButtonTheme.extendedTextStyle
 ?? theme.textTheme.button!.copyWith(letterSpacing: 1.2)).copyWith(color: foregroundColor);
```","This is a bit hard to read. Here's a suggestion:
[TRIPLE QUOTE].",1,0,0,0,0,0,Irritation,,Hard to read -> Irritation,,
Microsoft/TypeScript,pull_request,703925795,2021-09-07 23:51:44,andrewbranch,"I hate “can only be used” but will match existing options.
---
> > If you only see one movie this year...
> > Normal human beings frontload the word “only” at the beginning of a sentence. Copy editors will tend to pick up that “only” and drop it next to the thing that’s being “only”d:
> > > If you see only one movie this year...
> > Or, for instance:
> > > **NORMAL HUMAN BEING:** You can only watch a movie ironically so many times before you’re watching it earnestly.
> >
> > **COPY EDITOR:** You can watch a movie ironically only so many times before you’re watching it earnestly.
> > Does the latter perhaps sound a bit stilted? Perhaps it does, but to be perfectly honest, there’s a certain tautness in slightly stilted prose that I find almost viscerally thrilling.
> > I also think that readers don’t much notice when prose is wound up a bit too tight but may well, and not favorably, notice overloose prose.
> > Moreover, a loosely placed “only” can distort the meaning of a sentence entirely.
> > That said, in copyediting fiction, especially fiction with an informal narrative voice and, even more so, dialogue in fiction, I’m most likely to leave the “only” where the author set it.
— _Dreyer’s English_, p. 253","I hate “can only be used” but will match existing options.
---
[BLOCK QUOTE].
— _Dreyer’s English_, p. 253",1,0,0,0,0,0,Irritation,annoyance,,,
flutter/flutter,pull_request,715214195,2021-09-23 23:09:41,gspencergoog,"Sorry, I don't see what you mean. It's in line with the `math.min` line, which is what it matches.","Sorry, I don't see what you mean. It's in line with the `math.min` line, which is what it matches.",1,0,0,0,0,0,Irritation,annoyance,,,
angular/angular,pull_request,716710724,2021-09-27 13:49:27,gkalpak,"What does ""break down"" refer to here (and below)? 😕","What does ""break down"" refer to here (and below)? 😕",1,0,0,0,0,0,Irritation,Annoyance,Annoyance,,
angular/angular,pull_request,730398750,2021-10-17 11:22:46,gkalpak,"Are you sure they are not ignored? Based on the regexes, I think they are ignored 😕","Are you sure they are not ignored? Based on the regexes, I think they are ignored 😕",1,0,0,0,0,0,Irritation,,Irritation,,
Microsoft/TypeScript,pull_request,739521555,2021-10-29 20:43:52,andrewbranch,"Note that this is never surfaced by the VS Code UI 🤷

I think that's totally fine, I only made it because the protocol made me have a message to go along with the fix","Note that this is never surfaced by the VS Code UI 🤷 I think that's totally fine, I only made it because the protocol made me have a message to go along with the fix",1,0,0,0,0,0,Irritation,Annoyance,Irritated,,
webpack/webpack,issue,785823452,2021-02-25 11:22:18,alexander-akait,You don't ask something,You don't ask something,1,0,0,0,0,0,Irritation,annoyance,,,
webpack/webpack,issue,794177661,2021-03-09 17:11:03,alexander-akait,"Expected, do not mix webpack v4 and webpack v5, it was answered a lot of time","Expected, do not mix webpack v4 and webpack v5, it was answered a lot of time",1,0,0,0,0,0,Irritation,Annoyance,Annoyance,,
webpack/webpack,issue,794180596,2021-03-09 17:13:31,mihkeleidast,"So you're saying the entire industry should upgrade to webpack 5 at the same time? It's rather difficult even in my own small ecosystem. `app` has some dependency that does not support webpack@5 yet, so I shouldn't upgrade anything else either?","So you're saying the entire industry should upgrade to webpack 5 at the same time? It's rather difficult even in my own small ecosystem. `app` has some dependency that does not support webpack@5 yet, so I shouldn't upgrade anything else either?",1,0,0,0,0,0,Irritation,Annoyance,Annoyance,,
webpack/webpack,issue,797512596,2021-03-12 14:08:42,hugoebarboza,"I have the same issue Cannot read property 'includes' of undefined"".","I have the same issue Cannot read property 'includes' of undefined"".",1,0,0,0,0,0,Irritation,annoyance,,,
webpack/webpack,issue,809284754,2021-03-29 10:56:28,alexander-akait,"You still use old version of `terser-webpack-plugin`, please double check your `webpack` and `terser-webpack-plugin` versions","You still use old version of `terser-webpack-plugin`, please double check your `webpack` and `terser-webpack-plugin` versions",1,0,0,0,0,0,Irritation,annoyance,,1,
webpack/webpack,issue,809338018,2021-03-29 12:29:52,alexander-akait,"Never ignore the issue template, respect time of other developers","Never ignore the issue template, respect time of other developers",1,0,0,0,0,0,Irritation,Annoyance,"Angry (for not following template), Annoyance",,
webpack/webpack,issue,814970212,2021-04-07 14:39:49,alexander-akait,"> If the current behavior is a bug, please provide the steps to reproduce.

Steps to reproduce, don't understand what is misleading here... without code nobody can't help","[BLOCK QUOTE].

Steps to reproduce, don't understand what is misleading here... without code nobody can't help",1,0,0,0,0,0,Irritation,annoyance,,1,
webpack/webpack,issue,839699752,2021-05-12 11:35:09,alexander-akait,"`*` never work, please read docs how alias works https://webpack.js.org/configuration/resolve/#resolvealias","`*` never work, please read docs how alias works [URL]",1,0,0,0,0,0,Irritation,annoyance,,,
webpack/webpack,issue,856804454,2021-06-08 14:12:37,alexander-akait,"You should fix it in your app, sorry won't fix, there is no HTML in JS, only strings","You should fix it in your app, sorry won't fix, there is no HTML in JS, only strings",1,0,0,0,0,0,Irritation,annoyance,,,1
webpack/webpack,issue,869009588,2021-06-26 14:14:37,edoardo-bluframe,"> see https://webpack.js.org/blog/2020-10-10-webpack-5-release/#automatic-nodejs-polyfills-removed
>
> `resolve.fallback.dgram: false`

How come this is downvoted?

Isn't this **the** official Webpack solution?","[BLOCK QUOTE].

How come this is downvoted?

Isn't this **the** official Webpack solution?",1,0,0,0,0,0,Irritation,,Irritant,,
angular/angular,issue,872265480,2021-07-01 13:51:46,Airblader,"If there were any news, you'd be able to read it here. Please don't ping several dozen of people bumping this issue unnecessarily, thank you!","If there were any news, you'd be able to read it here. Please don't ping several dozen of people bumping this issue unnecessarily, thank you!",1,0,0,0,0,0,Irritation,,Irritated,,
angular/angular,issue,876998140,2021-07-09 8:04:32,PowerKiKi,"I was not aware that the directive wraps the validator in a problematic way. So it's a relief that a ""normal usage"" of `Validators.required` would indeed be detectable by `@angular/material`. That's the most frequent and annoying thing from my point of view. And I'm looking forward to seeing it fixed.

However this would not be true for any other validators that takes an argument, such as `Validators.min`. Similar to the required validator that should automatically show a `*` to the user, I would like that the `Validators.min(3)` set by TypeScript is reflected as the attribute `min=""3""` in DOM, so that browsers can behave accordingly (prevent input of invalid things). Unfortunately it would seems that I would have to wait for that future Forms redesign.","I was not aware that the directive wraps the validator in a problematic way. So it's a relief that a ""normal usage"" of `Validators.required` would indeed be detectable by `@angular/material`. That's the most frequent and annoying thing from my point of view. And I'm looking forward to seeing it fixed.

However this would not be true for any other validators that takes an argument, such as `Validators.min`. Similar to the required validator that should automatically show a `*` to the user, I would like that the `Validators.min(3)` set by TypeScript is reflected as the attribute `min=""3""` in DOM, so that browsers can behave accordingly (prevent input of invalid things). Unfortunately it would seems that I would have to wait for that future Forms redesign.",1,0,0,0,0,0,Irritation,Annoyance,Annoying -> Anger,,
angular/angular,issue,877308201,2021-07-09 16:29:38,ChazUK,"Agreed, very lame.

One of the most annoying things I've found with this ""community library component"" approach is that you have to factor in passing every single viable attribute to both links, which makes it way more cumbersome than just passing a link string.","Agreed, very lame.

One of the most annoying things I've found with this ""community library component"" approach is that you have to factor in passing every single viable attribute to both links, which makes it way more cumbersome than just passing a link string.",1,0,0,0,0,0,Irritation,Annoyance,Annoyance,,
angular/angular,issue,877309743,2021-07-09 16:32:15,csimpi,"ahhh every time I read ""good opportunity for a community library component"" I feel pain... It's like: we don't have the mood, so pls solve it instead of us. I see 235 unhandled issue reports, begging for maintenance when you'd upgrade etc... it's ridiculous. I understand the other side's concerns too, but I can't believe that there is no better way to handle external links on **web**. It's like bicycles without wheels.","ahhh every time I read ""good opportunity for a community library component"" I feel pain... It's like: we don't have the mood, so pls solve it instead of us. I see 235 unhandled issue reports, begging for maintenance when you'd upgrade etc... it's ridiculous. I understand the other side's concerns too, but I can't believe that there is no better way to handle external links on **web**. It's like bicycles without wheels.",1,0,0,0,0,0,Irritation,annoyance,,,
angular/angular,issue,877547567,2021-07-10 3:11:38,Rush,"@jessicajaniuk since it's likely developers will keep encountering the issue, what is the official recommendation from the Angular team on how to deal with this?","[USER] since it's likely developers will keep encountering the issue, what is the official recommendation from the Angular team on how to deal with this?",1,0,0,0,0,0,Irritation,,Irritation,,
webpack/webpack,issue,878249439,2021-07-12 12:45:42,alexander-akait,"Please do not ignore the issue template, fix it and I will reopen","Please do not ignore the issue template, fix it and I will reopen",1,0,0,0,0,0,Irritation,Annoyance,Annoyance (for ignoring template),,
angular/angular,issue,880069933,2021-07-14 17:18:13,JoostK,"I'm sorry but we don't understand the problem you are reporting. If the problem still exists in your application, please [open a new issue](https://github.com/angular/angular/issues/new/choose) and follow the instructions in the issue template.","I'm sorry but we don't understand the problem you are reporting. If the problem still exists in your application, please [open a new issue]([URL] and follow the instructions in the issue template.",1,0,0,0,0,0,Irritation,annoyance,,,
webpack/webpack,issue,880071474,2021-07-14 17:20:33,Cherry,Looks like this might be a duplicate of #12960 after investigating further - sorry!,Looks like this might be a duplicate of #12960 after investigating further - sorry!,1,0,0,0,0,0,Irritation,annoyance,,,
webpack/webpack,issue,884292533,2021-07-21 15:44:20,alexander-akait,"No bugs here, wrong template for the issue","No bugs here, wrong template for the issue",1,0,0,0,0,0,Irritation,Annoyance,Annoyance,,
webpack/webpack,issue,885583176,2021-07-23 11:47:04,alexander-akait,Please respect time of other devleopers,Please respect time of other devleopers,1,0,0,0,0,0,Irritation,annoyance,,1,
angular/angular,issue,887526993,2021-07-27 13:46:22,petebacondarwin,Please can you provide a running example of this problem for us to investigate. Without this it is not possible to look into this issue.,Please can you provide a running example of this problem for us to investigate. Without this it is not possible to look into this issue.,1,0,0,0,0,0,Irritation,-,Irritant (for not providing the example),1,
angular/angular,issue,892770343,2021-08-04 15:48:56,SchnWalter,"Guys, please stop with the `+1`. On the right sidebar, you have a ""Subscribe"" button, please use that.","Guys, please stop with the `+1`. On the right sidebar, you have a ""Subscribe"" button, please use that.",1,0,0,0,0,0,Irritation,Annoyance,Irritation,,
Microsoft/TypeScript,issue,894266430,2021-08-06 13:37:26,alexshelkov,"Yes, `as const` works, but it a bit ugly to add everywhere. Thx for feedback.","Yes, `as const` works, but it a bit ugly to add everywhere. Thx for feedback.",1,0,0,0,0,0,Irritation,Annoyance,Annoyance,,
Microsoft/TypeScript,issue,894964803,2021-08-09 5:42:30,MartinJohns,"This is not a bug, this is working as intended. A change to omit has been proposed and rejected already. There are implementations out there (even in the issues linked) that work as you want by first excluding the Index signature.","This is not a bug, this is working as intended. A change to omit has been proposed and rejected already. There are implementations out there (even in the issues linked) that work as you want by first excluding the Index signature.",1,0,0,0,0,0,Irritation,Annoyance,Annoyance,,
webpack/webpack,issue,897816045,2021-08-12 17:13:34,alexander-akait,"Please do not duplicate issues, we already have issue here https://github.com/webpack/webpack/issues/13801, put your investigation here https://github.com/webpack/webpack/issues/13801 with example of reproducing","Please do not duplicate issues, we already have issue here [URL] put your investigation here [URL] with example of reproducing",1,0,0,0,0,0,Irritation,Annoyance,Annoyance,,
Microsoft/TypeScript,issue,899787982,2021-08-16 20:11:33,R0bl0x10501050,This *still* exists as of August 2021. I'm having the same error messages as @nharrer and this is a major annoyance.,This *still* exists as of August 2021. I'm having the same error messages as [USER] and this is a major annoyance.,1,0,0,0,0,0,Irritation,Annoyance,Annoyance,,
Microsoft/TypeScript,issue,901050363,2021-08-18 11:53:57,alvis,@andrewbranch @DanielRosenwasser Please don't forget this PR. Please.,[USER] [USER] Please don't forget this PR. Please.,1,0,0,0,0,0,Irritation,annoyance,,,
angular/angular,issue,902187896,2021-08-19 19:38:01,petebacondarwin,It's going to be really hard to diagnose this problem without some more information. Is it possible to share a reproduction that can be debugged?,It's going to be really hard to diagnose this problem without some more information. Is it possible to share a reproduction that can be debugged?,1,0,0,0,0,0,Irritation,,hard to diagnose -> Irritation (for not providing more info),,
Microsoft/TypeScript,issue,904339392,2021-08-24 5:43:34,wesleyolis,"@RyanCavanaugh You are joking right, like ability for ts guys understand stuff is very low in seeing permutations/combinations puzzle peace come to gather for nice tight fitting language, starting to get frustrated. 2 Seconds on a problem you guys give up, by the looks of it.","[USER] You are joking right, like ability for ts guys understand stuff is very low in seeing permutations/combinations puzzle peace come to gather for nice tight fitting language, starting to get frustrated. 2 Seconds on a problem you guys give up, by the looks of it.",1,0,0,0,0,0,Irritation,annoyance,,,
Microsoft/TypeScript,issue,906084897,2021-08-26 4:27:08,DanielRosenwasser,Complete English sentences are my preference in documentation and error messages.,Complete English sentences are my preference in documentation and error messages.,1,0,0,0,0,0,Irritation,annoyance,,,
angular/angular,issue,909621683,2021-08-31 20:45:02,ties-s,This has been over a year. This is a very annoying bug. Any updates on the progress? This shouldn't take more than 2 major versions.,This has been over a year. This is a very annoying bug. Any updates on the progress? This shouldn't take more than 2 major versions.,1,0,0,0,0,0,Irritation,annoyance,,,
Microsoft/TypeScript,issue,911706309,2021-09-02 13:50:25,MarcCelani-at,"We have a lot of tsconfig files, kind of annoying to keep them all in sync.","We have a lot of tsconfig files, kind of annoying to keep them all in sync.",1,0,0,0,0,0,Irritation,Annoyance,Annoyance,,
angular/angular,issue,913671594,2021-09-06 13:59:55,alan-agius4,"Thanks for your contribution. However, this is already being addressed by someone else in https://github.com/angular/angular/pull/43350","Thanks for your contribution. However, this is already being addressed by someone else in [URL]",1,0,0,0,0,0,Irritation,Annoyance,Annoyance,,
webpack/webpack,issue,916059076,2021-09-09 12:46:28,alexander-akait,"Increase your memory usage, file is so bug, not related to this problem","Increase your memory usage, file is so bug, not related to this problem",1,0,0,0,0,0,Irritation,annoyance,,,
Microsoft/TypeScript,issue,916440817,2021-09-09 21:13:28,andrewbranch,"It’s not intentional that it was ever included in the first place, as it doesn’t meet our bar of spec/support for standard lib inclusion. The removal was documented ahead of time as @MartinJohns pointed out. We’re aware that 4.4 included more lib breaks than usual as we transitioned to a new process for generating them, and while we expect that the breakiness of 4.4 was a one-time pain associated with that transition, we’re having conversations about how we can do better with this in the future. That’s part of the motivation for a versioned `@types/web` (https://github.com/microsoft/TypeScript-DOM-lib-generator/issues/1023) and potentially other ways of versioning and resolving libs (#45685)—in general, we don’t think it makes sense for people to be stuck dealing with lib changes (particularly DOM lib changes) if they want to upgrade their TS version.","It’s not intentional that it was ever included in the first place, as it doesn’t meet our bar of spec/support for standard lib inclusion. The removal was documented ahead of time as [USER] pointed out. We’re aware that 4.4 included more lib breaks than usual as we transitioned to a new process for generating them, and while we expect that the breakiness of 4.4 was a one-time pain associated with that transition, we’re having conversations about how we can do better with this in the future. That’s part of the motivation for a versioned `@types/web` ([URL] and potentially other ways of versioning and resolving libs (#45685)—in general, we don’t think it makes sense for people to be stuck dealing with lib changes (particularly DOM lib changes) if they want to upgrade their TS version.",1,0,0,0,0,0,Irritation,,Irritated,,
Microsoft/TypeScript,issue,916801688,2021-09-10 10:28:36,WORMSS,"There are a number of times something like `""pathsAppend"": [], ""libsAppend"": [], ""referencesAppend"": [], ""includesAppend"": []`
Where we want to ADD to what ever the default/extended options are, rather than replace/override.

Libs being the most annoying even in 'standard' circumstances without extending another tsconfig, but the fact that 'adding' a single lib, REMOVES ALL the default ones added by the ""target"" setting. And you can't even get a definitive list of what those libs were..","There are a number of times something like `""pathsAppend"": [], ""libsAppend"": [], ""referencesAppend"": [], ""includesAppend"": []`
Where we want to ADD to what ever the default/extended options are, rather than replace/override.

Libs being the most annoying even in 'standard' circumstances without extending another tsconfig, but the fact that 'adding' a single lib, REMOVES ALL the default ones added by the ""target"" setting. And you can't even get a definitive list of what those libs were..",1,0,0,0,0,0,Irritation,Annoyance,Annoyance,,
Microsoft/TypeScript,issue,917047364,2021-09-10 16:41:42,sahin52,"Renaming a file causes the same problem too, I need to restart it, which takes nearly a minute, so pretty annoying","Renaming a file causes the same problem too, I need to restart it, which takes nearly a minute, so pretty annoying",1,0,0,0,0,0,Irritation,annoyance,,,
Microsoft/TypeScript,issue,920222212,2021-09-15 17:29:33,funkydev,"@andrewbranch Why did you close this issue? Your answer is another prove that the TypeScript crew should do ""something"" with this request. The plugin you send isn't compatible with the native `typescript` library. It's for `ttypescript`, which is forked by a random guy probably because you didn't want to implement some functionalities. Creating custom transformers could be a solution, but it should be supported by a native `typescript` library with official support. I guess that developers would be satisfied with such a solution, especially that it offers much more. Could you share info if TypeScript supports such plugins? Still, I don't know why did you close this issue if you didn't provide a solution on how to resolve paths using **native typescript library** (which this request refers to). If you want to say ""do not use typescript – use everything else"" just say it directly, but it's not a definition of contributing to this library, nor solves this issue.","[USER] Why did you close this issue? Your answer is another prove that the TypeScript crew should do ""something"" with this request. The plugin you send isn't compatible with the native `typescript` library. It's for `ttypescript`, which is forked by a random guy probably because you didn't want to implement some functionalities. Creating custom transformers could be a solution, but it should be supported by a native `typescript` library with official support. I guess that developers would be satisfied with such a solution, especially that it offers much more. Could you share info if TypeScript supports such plugins? Still, I don't know why did you close this issue if you didn't provide a solution on how to resolve paths using **native typescript library** (which this request refers to). If you want to say ""do not use typescript – use everything else"" just say it directly, but it's not a definition of contributing to this library, nor solves this issue.",1,0,0,0,0,0,Irritation,annoyance,,,
webpack/webpack,issue,920907560,2021-09-16 13:34:16,alexander-akait,I don't see how runtime fix this problem,I don't see how runtime fix this problem,1,0,0,0,0,0,Irritation,Annoyance,Annoyance,,
Microsoft/TypeScript,issue,922498675,2021-09-19 16:15:41,MartinJohns,"@ducnguyen96 You didn't read the link I provided, did you? Filipe provided you the solution, which is mentioned in the provided documentation as well.
> If this is not a bug please tell me how to code `$in?: T extends AnyArray<any> ? Unpacked<T>[] : T[]` part correctly.
Just because you don't know how it's done correctly doesn't mean it's a bug. :-) You're just dealing with behaviour your don't understand, but don't try to line out what exactly is the bug, instead want to know how to achieve the desired result.
> Actually this code is a part of `mongoose`.
Terrible library. I always feel pain having to use it.","[USER] You didn't read the link I provided, did you? Filipe provided you the solution, which is mentioned in the provided documentation as well.
[BLOCK QUOTE].
Just because you don't know how it's done correctly doesn't mean it's a bug. :-) You're just dealing with behaviour your don't understand, but don't try to line out what exactly is the bug, instead want to know how to achieve the desired result.
[BLOCK QUOTE].
Terrible library. I always feel pain having to use it.",1,0,0,0,0,0,Irritation,annoyance,,,
webpack/webpack,issue,923845868,2021-09-21 10:26:14,alexander-akait,"I don't know what we need explain here, Node.js docs describe how `exports` works","I don't know what we need explain here, Node.js docs describe how `exports` works",1,0,0,0,0,0,Irritation,annoyance,,,
Microsoft/TypeScript,issue,929391408,2021-09-28 16:33:29,andrewbranch,"I welcome thoughtful discussion and debate, but this conversation is running in circles and getting heated. I apologize to those who were just asking questions in good faith, but some others in this thread are going to have to find a more productive way to engage in conversation about decisions they disagree with. This issue is a duplicate of many others, linked throughout the comments above. We have been talking about this for _years_, and nothing new has been said in this thread, so it has become just a drain on maintainer time and energy. Thank you for understanding.","I welcome thoughtful discussion and debate, but this conversation is running in circles and getting heated. I apologize to those who were just asking questions in good faith, but some others in this thread are going to have to find a more productive way to engage in conversation about decisions they disagree with. This issue is a duplicate of many others, linked throughout the comments above. We have been talking about this for _years_, and nothing new has been said in this thread, so it has become just a drain on maintainer time and energy. Thank you for understanding.",1,0,0,0,0,0,Irritation,,Irritation,,
Microsoft/TypeScript,issue,932467100,2021-10-01 18:40:35,MartinJohns,The issue template you didn't fill out has a checklist. Your suggestion goes against the design philosophy of TypeScript and would be a fairly bad fit. It's also a duplicate: #563,The issue template you didn't fill out has a checklist. Your suggestion goes against the design philosophy of TypeScript and would be a fairly bad fit. It's also a duplicate: #563,1,0,0,0,0,0,Irritation,Annoyance,Violation of expectation -> Annoyance,,
Microsoft/TypeScript,issue,934533771,2021-10-05 15:50:40,MartinJohns,"> Try to call `ff.metch()` inside `if` block
Honestly, this is getting ridiculous. It's clear that you don't know what the heck you're talking about.
In the brief example you can't call `meth()` because TypeScript correctly narrows it to `never`. This is due to the behaviour of assignments narrowing the type of variables. TypeScript sees that a `Foo[]` is assigned, but no `Foo`. So trying to narrow it to `Foo` using `'bar' in ff` results in `never`, because it can't be a `Foo`.
If you take this behaviour out of the equation (e.g. by returning the value from a function) you will get the issue mentioned:
```typescript
class Foo {
bar: object = {}
meth() {}
}
type FooArrayWithBarProperty = Foo[] & { bar?: string }
const ff: Foo | Foo[] = getValue();
if ('bar' in ff) {
// ff is narrowed to ""Foo"", but the value is actually a ""Foo[]"".
// Calling meth() will result in an error.
ff.meth();
}
function getValue(): Foo | Foo[] {
const fooArrayWithBarProperty: FooArrayWithBarProperty = [];
fooArrayWithBarProperty.bar = 'hello!';
return fooArrayWithBarProperty;
}
```
[Playground link](https://www.typescriptlang.org/play?#code/MYGwhgzhAEBiD29oG8BQ0PQEZgE4C5p4sArAU2ABdoBeFAX3UwFszKALACgEoHVHUlAJ4AHMnEQBBXLjBCA6gEsOAITwAFXPDG5htCfADaAXWgAyFNjwB+QhEq5FAOwDm0AcHhP70AGa-CBCQAHwMTfRc2ADUwEABXMh4AblRFX2hOAHIcXEzoZz9fXjRMaAB6MsL8mCc8LQB3MgATaEokACIg9oAabDjqDnEAN1iE6ugwKjjYkCEJ6E7EE3aAOiYMCugAYRnnN1YOHmh6xRAQaFwyCDiQagKwJ2gyGXhcNdL-FYOubhSBXziTioii80EilBi8US3ECiGgoSC4RKmE83movikMjkSlUGi0OmEsPg0lkCmU7DUuE02meejoJhSH0xpJxFLxNN0QhWOX0mXYZDO8AAhJlGZhLpQ4rhHhjiViybiqfjaUI-qggA)","[BLOCK QUOTE].
Honestly, this is getting ridiculous. It's clear that you don't know what the heck you're talking about.
In the brief example you can't call `meth()` because TypeScript correctly narrows it to `never`. This is due to the behaviour of assignments narrowing the type of variables. TypeScript sees that a `Foo[]` is assigned, but no `Foo`. So trying to narrow it to `Foo` using `'bar' in ff` results in `never`, because it can't be a `Foo`.
If you take this behaviour out of the equation (e.g. by returning the value from a function) you will get the issue mentioned:
[TRIPLE QUOTE].
[Playground link]([URL]",1,0,0,0,0,0,Irritation,annoyance,,,
Microsoft/TypeScript,issue,934976734,2021-10-05 22:53:31,FilipeBeck,"> Honestly, this is getting ridiculous. It's clear that you don't know what the heck you're talking about.
I'm not saying that a type cannot have additional properties (I said the exact opposite [here](https://github.com/microsoft/TypeScript/issues/45975#issuecomment-926258598) myself). I'm saying the compiler is correct when handling `f` as `Foo` due to `Foo[]` ""not have"" `'bar'` because it already is the expected behaviour. The compiler is optimistic and handles as _exact types_ with respect to the `in` operator. This is enough for the vast majority of cases if you use good programming practices. I never had any problems using `in` to determine the type, neither in my personal projects nor in my work.
This was explained here: https://github.com/microsoft/TypeScript/pull/15256#discussion_r154825541
> > For example, if Foo.bar were a number, then a value of 0...
> > This is reason why `(if f.bar)` doesn't always work
Yes, it is a duplicate and, even if it wasn't, the issue is incoherent and must be closed","[BLOCK QUOTE].
I'm not saying that a type cannot have additional properties (I said the exact opposite [here]([URL] myself). I'm saying the compiler is correct when handling `f` as `Foo` due to `Foo[]` ""not have"" `'bar'` because it already is the expected behaviour. The compiler is optimistic and handles as _exact types_ with respect to the `in` operator. This is enough for the vast majority of cases if you use good programming practices. I never had any problems using `in` to determine the type, neither in my personal projects nor in my work.
This was explained here: [URL]
[BLOCK QUOTE].
Yes, it is a duplicate and, even if it wasn't, the issue is incoherent and must be closed",1,0,0,0,0,0,Irritation,annoyance,,,
webpack/webpack,issue,936112827,2021-10-06 12:08:52,alexander-akait,"> Argument of type 'URL' is not assignable to parameter of type 'string | URL'.

How it is related to webpack? It is typescript problem","[BLOCK QUOTE].

How it is related to webpack? It is typescript problem",1,0,0,0,0,0,Irritation,Annoyance,Annoyance,,
flutter/flutter,issue,945482231,2021-10-18 8:09:46,darshankawar,"@kyounglee
I think you are hitting https://github.com/flutter/flutter/issues/83169
If so, please follow-up in it for further updates.
Closing this as a duplicate. If you disagree, write in comments and I'll reopen it.
Thanks.","[USER]
I think you are hitting [URL]
If so, please follow-up in it for further updates.
Closing this as a duplicate. If you disagree, write in comments and I'll reopen it.
Thanks.",1,0,0,0,0,0,Irritation,Annoyance,Mild annoyance,,
flutter/flutter,issue,945633797,2021-10-18 10:36:05,EinatK,"Thanks @DanTup
Looking forward to a fix or workaround , this is extremely annoying :)","Thanks [USER]
Looking forward to a fix or workaround , this is extremely annoying :)",1,0,0,0,0,0,Irritation,annoyance,,,
webpack/webpack,issue,947048082,2021-10-19 19:41:18,alexander-akait,"Please read answer again https://github.com/webpack/webpack/issues/10535#issuecomment-597775372, we can't fix it, because it is wrong, you can't use `import('./something.js.gz')` in JS code","Please read answer again [URL] we can't fix it, because it is wrong, you can't use `import('./something.js.gz')` in JS code",1,0,0,0,0,0,Irritation,,Irritated,,
flutter/flutter,issue,947584682,2021-10-20 11:43:52,bambinoua,This is already in flutter. Pl;ease search `stackoverflow`.,This is already in flutter. Pl;ease search `stackoverflow`.,1,0,0,0,0,0,Irritation,annoyance,,1,
angular/angular,issue,947754758,2021-10-20 15:01:02,josephperrott,"Please keep GitHub issues for bug reports / feature requests. Better avenues for troubleshooting / questions are stack overflow, gitter, mailing list, etc.","Please keep GitHub issues for bug reports / feature requests. Better avenues for troubleshooting / questions are stack overflow, gitter, mailing list, etc.",1,0,0,0,0,0,Irritation,annoyance,,,
flutter/flutter,issue,947931540,2021-10-20 18:32:17,syrakozz,"any solutions for this , its very annoying , happen after flutter last update !","any solutions for this , its very annoying , happen after flutter last update !",1,0,0,0,0,0,Irritation,Annoyance,Annoyance,,
flutter/flutter,issue,948410407,2021-10-21 9:07:04,danagbemava-nc,"@MadoAwny, have you tried what @bambinoua stated above?
Also, @bambinoua is right, the flutter issue tracker is for bugs and issues with flutter itself, not for help with personal code.
Closing as this is an issue with implementation and not an actual issue with flutter.","[USER] have you tried what [USER] stated above?

Also, [USER] is right, the flutter issue tracker is for bugs and issues with flutter itself, not for help with personal code.

Closing as this is an issue with implementation and not an actual issue with flutter.",1,0,0,0,0,0,Irritation,annoyance,,,
flutter/flutter,issue,948546791,2021-10-21 12:06:19,kannel-outis,this issue should be opened in the plugin's repo and not here,this issue should be opened in the plugin's repo and not here,1,0,0,0,0,0,Irritation,annoyance,,,
angular/angular,issue,948616224,2021-10-21 13:26:12,jessicajaniuk,"Hello, we reviewed this issue and determined that it doesn't fall into the bug report or feature request category. This issue tracker is not suitable for support requests, please repost your issue on [StackOverflow](https://stackoverflow.com/) using tag `angular`.

If you are wondering why we don't resolve support issues via the issue tracker, please [check out this explanation](https://github.com/angular/angular/blob/master/CONTRIBUTING.md#-got-a-question-or-problem).","Hello, we reviewed this issue and determined that it doesn't fall into the bug report or feature request category. This issue tracker is not suitable for support requests, please repost your issue on [StackOverflow]([URL] using tag `angular`.

If you are wondering why we don't resolve support issues via the issue tracker, please [check out this explanation]([URL]",1,0,0,0,0,0,Irritation,annoyance,,,
Microsoft/TypeScript,issue,948865097,2021-10-21 17:51:42,andrewbranch,This is not related to TypeScript; it says eslint right there in the error message.,This is not related to TypeScript; it says eslint right there in the error message.,1,0,0,0,0,0,Irritation,Annoyance,Annoyed,,
flutter/flutter,issue,949455296,2021-10-22 9:35:18,darshankawar,"This is more of a question for support channels like StackOverflow. Also, see [this](https://www.youtube.com/watch?v=TuBFVXsBlTI) video and check if it answers your question.
Closing from here.","This is more of a question for support channels like StackOverflow. Also, see [this]([URL] video and check if it answers your question.
Closing from here.",1,0,0,0,0,0,Irritation,Annoyance,Annoyance (for asking question in wrong forum),,
flutter/flutter,issue,949517979,2021-10-22 10:58:20,jiahaog,Yeah it's a bit hard to understand the flow of what you're doing. If you can provide a minimal repro that will be very helpful https://github.com/flutter/flutter/wiki/Issue-hygiene#provide-reduced-test-cases,Yeah it's a bit hard to understand the flow of what you're doing. If you can provide a minimal repro that will be very helpful [URL],1,0,0,0,0,0,Irritation,Annoyance,Hard to understand -> Irritant,,
flutter/flutter,issue,949580851,2021-10-22 12:22:25,stuartmorgan,"> * I find memory usage of Flutter app on Linux desktop to be on higher side.

Compared to what? A number like this isn't particularly informative in isolation. What GUI applications are you comparing to?","[BLOCK QUOTE]. 

Compared to what? A number like this isn't particularly informative in isolation. What GUI applications are you comparing to?",1,0,0,0,0,0,Irritation,Annoyance,Annoyed (for not providing enough info),,1
Microsoft/TypeScript,issue,949808750,2021-10-22 16:59:44,jcalz,Images of text are difficult to deal with; please replace with plaintext and preferably a TS Playground link so that others can easily assess the issue.,Images of text are difficult to deal with; please replace with plaintext and preferably a TS Playground link so that others can easily assess the issue.,1,0,0,0,0,0,Irritation,annoyance,,,
flutter/flutter,issue,950202494,2021-10-23 19:37:17,stuartmorgan,"There is no difference in effects of RAM usage in an app made with Flutter vs with any other technology stack. Limits on RAM usage are purely a function of the platform, so this question should be addressed to a general discussion forum about those platforms.","There is no difference in effects of RAM usage in an app made with Flutter vs with any other technology stack. Limits on RAM usage are purely a function of the platform, so this question should be addressed to a general discussion forum about those platforms.",1,0,0,0,0,0,Irritation,Annoyance,Annoyance for asking question in not right place,1,
flutter/flutter,issue,950467908,2021-10-25 2:17:23,stuartmorgan,Please see flutter.dev/community for links to other resources where you can ask questions about developing your own application; the issue tracker is for bug reports and specific feature requests.,Please see flutter.dev/community for links to other resources where you can ask questions about developing your own application; the issue tracker is for bug reports and specific feature requests.,1,0,0,0,0,0,Irritation,Annoyance,Violation of expectation -> Anger,1,
flutter/flutter,issue,950629187,2021-10-25 7:56:31,darshankawar,"@burhankhanzada
This question is better suited for support channels like StackOverflow or flutter's reddit page. Closing from here as this is more of a `how to` question, but this repo is for bugs and feature requests.","[USER]
This question is better suited for support channels like StackOverflow or flutter's reddit page. Closing from here as this is more of a `how to` question, but this repo is for bugs and feature requests.",1,0,0,0,0,0,Irritation,Annoyance,Violation of expectation -> Annoyance,,
flutter/flutter,issue,952764563,2021-10-27 10:15:43,maheshmnj,"Hi @pulstar these warning messages correspond to the respective plugins/packages, that use a deprecated api, The right place to report these warnings would be in their respective repositories.

> but I have experienced some errors when building a release. I did extensive research but found nothing about it.

if you feel the error is caused due to the issue in the framework feel free to file a new issue with exact details and steps to reproduce the issue.

> Does the Java version impact the number of supported devices in any way?

The number of supported devices depends on your application targetting the min SDK version.

Closing, As this doesn't seem to describe a bug or a feature request in the flutter framework, If you disagree feel free to write in the comments and I will reopen it.

Thank you.","Hi [USER] these warning messages correspond to the respective plugins/packages, that use a deprecated api, The right place to report these warnings would be in their respective repositories.

[BLOCK QUOTE].

if you feel the error is caused due to the issue in the framework feel free to file a new issue with exact details and steps to reproduce the issue.

[BLOCK QUOTE].

The number of supported devices depends on your application targetting the min SDK version.

Closing, As this doesn't seem to describe a bug or a feature request in the flutter framework, If you disagree feel free to write in the comments and I will reopen it.

Thank you.",1,0,0,0,0,0,Irritation,,Mild irritation,,
flutter/flutter,issue,952780583,2021-10-27 10:35:24,maheshmnj,"Hi @lebaloc, Thanks for filing the issue.
> I want to move the cursor to second line of the hint text so that the padding will be reduced. Is there any way to do this? Thank you in advance.
Please try asking such questions on StackOverflow, The goal of the issue tracker is to track bugs and feature requests in the flutter framework.
Closing as this isn't an issue with flutter itself if you disagree feel free to write in the comments and I will reopen it.
Thank you.","Hi [USER] Thanks for filing the issue.

[BLOCK QUOTE].

Please try asking such questions on StackOverflow, The goal of the issue tracker is to track bugs and feature requests in the flutter framework.

Closing as this isn't an issue with flutter itself if you disagree feel free to write in the comments and I will reopen it.

Thank you.",1,0,0,0,0,0,Irritation,annoyance,,,
flutter/flutter,issue,953000455,2021-10-27 14:42:35,stuartmorgan,"> Hello, I'm sorry to be persistent but was wondering if there is any updates on this issue.

Nobody is actively working on this issue, so there are no updates. If there were updates, you would see them here, so it's not necessary to ask.

> Let me know if I can help you somehow.

Anyone interested in investigating this further is certainly welcome to do so.","[BLOCK QUOTE].

Nobody is actively working on this issue, so there are no updates. If there were updates, you would see them here, so it's not necessary to ask.

[BLOCK QUOTE].

Anyone interested in investigating this further is certainly welcome to do so.",1,0,0,0,0,0,Irritation,annoyance,,,
Microsoft/TypeScript,issue,953574609,2021-10-28 7:27:30,vitustockholm,"tried to turn off this error but still vs code makes it again and again again, just dont want to change vs code, but have this annoying thing error TS6053: File 'index.ts' not found.","tried to turn off this error but still vs code makes it again and again again, just dont want to change vs code, but have this annoying thing error TS6053: File 'index.ts' not found.",1,0,0,0,0,0,Irritation,annoyance,,,
flutter/flutter,issue,954622478,2021-10-29 10:12:48,darshankawar,"@kartikmalhotra
Your question is better suited for support channels like StackOverflow, so please ask the same there.
Closing from here as this isn't a bug or feature request.","[USER]
Your question is better suited for support channels like StackOverflow, so please ask the same there.
Closing from here as this isn't a bug or feature request.",1,0,0,0,0,0,Irritation,Annoyance,Violation of expectation -> Annoyance,,
webpack/webpack,issue,956088565,2021-11-01 9:56:02,alexander-akait,"Thank you for creating this issue. However, issues need to follow one of our templates so that we can clearly understand your particular circumstances.

Please help us help you by recreating the issue using one of our templates.

Please fill out all fields, we can't help you without it","Thank you for creating this issue. However, issues need to follow one of our templates so that we can clearly understand your particular circumstances.

Please help us help you by recreating the issue using one of our templates.

Please fill out all fields, we can't help you without it",1,0,0,0,0,0,Irritation,annoyance,,1,
flutter/flutter,issue,959880474,2021-11-03 19:41:12,stuartmorgan,"> I am running out of ideas, can you please help me to figure it out which package might be causing the problem?

Please see flutter.dev/community for links to other resources where you can get help with your own projects; the issue tracker is specifically for bug reports and feature requests in Flutter itself, and can't provide support for project-level issue.","[BLOCK QUOTE].

Please see flutter.dev/community for links to other resources where you can get help with your own projects; the issue tracker is specifically for bug reports and feature requests in Flutter itself, and can't provide support for project-level issue.",1,0,0,0,0,0,Irritation,Annoyance,Violation of expectation -> Annoyance,,
Microsoft/TypeScript,pull_request,653148464,2021-06-17 0:50:28,amcasey,"I'm not sure I see the advantage, since it's not closing over anything.","I'm not sure I see the advantage, since it's not closing over anything.",1,0,0,0,0,0,Disapproval,-,Annoyance/Disagreement,,
flutter/flutter,issue,947440525,2021-10-20 8:24:06,fctorial,"@darshankawar I know about the workarounds. In these cases, adding alignment to the outer container causes the apps to render as expected. But the issue is that the widget are behaving in a way that doesn't match their documentation.","[USER] I know about the workarounds. In these cases, adding alignment to the outer container causes the apps to render as expected. But the issue is that the widget are behaving in a way that doesn't match their documentation.",1,0,0,0,0,0,Exasperation,Frustration,"Annoyance, Frustration",,
angular/angular,issue,937115980,2021-10-06 20:54:18,jrista,"As far as I can tell, regardless of whether the stream is typed to allow undefined or not, `async` always expands the type to include undefined and null.
I am not sure what might be possible here. I do believe that matching the async type to the stream type would be best, but if that is not possible, then I feel that `T | undefined` is better that `T | null` for `AsyncPipe` return type, ultimately it is the narrower type in the end.
I honestly cannot speak to I internal implementation factors here...I don't know what restrictions other angular code may impose here. All I do know, is all my components with inputs are now completely polluted with nulls I don't want and are not appropriate, and as a result I have lost some of the benefits of typescript strict mode.","As far as I can tell, regardless of whether the stream is typed to allow undefined or not, `async` always expands the type to include undefined and null.
I am not sure what might be possible here. I do believe that matching the async type to the stream type would be best, but if that is not possible, then I feel that `T | undefined` is better that `T | null` for `AsyncPipe` return type, ultimately it is the narrower type in the end.
I honestly cannot speak to I internal implementation factors here...I don't know what restrictions other angular code may impose here. All I do know, is all my components with inputs are now completely polluted with nulls I don't want and are not appropriate, and as a result I have lost some of the benefits of typescript strict mode.",1,0,0,0,0,0,Rage,Bitterness,,,
Microsoft/TypeScript,issue,939221420,2021-10-09 4:09:15,DetachHead,why was my issue marked as a duplicate of the newer one lol,why was my issue marked as a duplicate of the newer one lol,1,0,0,0,0,0,Rage,Anger,Mocking -> Anger,,
webpack/webpack,issue,859539722,2021-06-11 12:16:23,bastimeyer,"Your suggestion does not work and no asset file is being emitted by the generator. See my demo-changes and the build log:
- https://github.com/bastimeyer/webpack-load-module-asset/commit/307c62a90b13abba6d53fa2cf923c02d56bb1509
- https://github.com/bastimeyer/webpack-load-module-asset/runs/2802577559?check_suite_focus=true#step:5:7

My intention of this issue thread is not seeking for help or asking a question, but reporting a bug/regression in Webpack 5 as it has deprecated the `{file,raw,url}-loader`s in favor of native asset modules and currently it's not possible to load assets from within a loader (while loading them from regular imports works - of course).

Also, special syntax should not be needed for this, because otherwise it's a breaking change, and this is not documented. And if this is indeed needed, then how is a loader supposed to know when a certain request is an asset and when not? This is not the job of the loader but the module rules configuration and webpack resolving it correctly.

----

I haven't found any documentation in regards to this request syntax and thus took a look at the code and found the responsible parts in the `resolve` hook of the `NormalModuleFactory`.
- https://github.com/webpack/webpack/blob/6a4cb8e39d717ef3d710eaebd3db31accf229dec/lib/NormalModuleFactory.js#L353-L374
- https://github.com/webpack/webpack/blob/6a4cb8e39d717ef3d710eaebd3db31accf229dec/lib/NormalModuleFactory.js#L506-L514

While setting breakpoints and debugging through this code, it looks like a simple type override, but unfortunately it doesn't do anything in this case. The `this.ruleSet.exec` call from above which is supposed to find the rule where the asset type is defined (I think) doesn't return anything either.","Your suggestion does not work and no asset file is being emitted by the generator. See my demo-changes and the build log:
- [URL]
- [URL]

My intention of this issue thread is not seeking for help or asking a question, but reporting a bug/regression in Webpack 5 as it has deprecated the `{file,raw,url}-loader`s in favor of native asset modules and currently it's not possible to load assets from within a loader (while loading them from regular imports works - of course).

Also, special syntax should not be needed for this, because otherwise it's a breaking change, and this is not documented. And if this is indeed needed, then how is a loader supposed to know when a certain request is an asset and when not? This is not the job of the loader but the module rules configuration and webpack resolving it correctly.

----

I haven't found any documentation in regards to this request syntax and thus took a look at the code and found the responsible parts in the `resolve` hook of the `NormalModuleFactory`.
- https://github.com/webpack/webpack/blob/6a4cb8e39d717ef3d710eaebd3db31accf229dec/lib/NormalModuleFactory.js#L353-L374
- [URL]

While setting breakpoints and debugging through this code, it looks like a simple type override, but unfortunately it doesn't do anything in this case. The `this.ruleSet.exec` call from above which is supposed to find the rule where the asset type is defined (I think) doesn't return anything either.",1,0,0,0,0,0,Rage,Outrage,Outrage,,
webpack/webpack,pull_request,93827082,2016-12-25 10:25:52,vladimir-tikhonov,I really don't like this approach. Maybe someone can suggest something better?,I really don't like this approach. Maybe someone can suggest something better?,1,0,0,0,0,0,Rage,Dislike,Disapproval,,1
flutter/flutter,issue,961201498,2021-11-04 16:19:46,dev-ltk,"This issue only happens in android, neither ios nor web.

It is an annoying problem, especially you are working with other non alphabetic languages. It is a big problem if your text has to be aligned with other elements. It is aesthetically not acceptable.

You can fix it by setting a fixed height in TextStyle as a walkaround, but there is no universal value that you can use to fix the problem for a particular language at all places in your app. You have to try and error to find an acceptable value. Imagine your app is reasonably big and supports multiple languages.

Someone has sorted out the root cause in this article. (https://cdmana.com/2021/08/20210805144911026o.html)
Although it is poorly written (pretty sure it is from google translate), it clearly states it is a problem with the flutter engine.

The author has submitted a pull request to fix it. (https://github.com/flutter/engine/pull/27278)
Unfortunately, it has been rejected.

Can Flutter team give a push to fix it?

It should be an issue to be fixed ASAP and now there is already an available solution to this. I cannot see the point of holding it up for another year. This is an open issue since 2019.","This issue only happens in android, neither ios nor web.

It is an annoying problem, especially you are working with other non alphabetic languages. It is a big problem if your text has to be aligned with other elements. It is aesthetically not acceptable.

You can fix it by setting a fixed height in TextStyle as a walkaround, but there is no universal value that you can use to fix the problem for a particular language at all places in your app. You have to try and error to find an acceptable value. Imagine your app is reasonably big and supports multiple languages.

Someone has sorted out the root cause in this article. ([URL]
Although it is poorly written (pretty sure it is from google translate), it clearly states it is a problem with the flutter engine.

The author has submitted a pull request to fix it. ([URL]
Unfortunately, it has been rejected.

Can Flutter team give a push to fix it?

It should be an issue to be fixed ASAP and now there is already an available solution to this. I cannot see the point of holding it up for another year. This is an open issue since 2019.",1,0,0,0,0,0,Rage,Anger,"Frustration, Anger, Annoyance",,
webpack/webpack,pull_request,103417879,2017-02-28 10:07:46,sokra,That's not ok. Fix your quotes.,That's not ok. Fix your quotes.,1,0,0,0,0,0,Rage,Anger,Anger,,
webpack/webpack,pull_request,106084390,2017-03-15 4:33:54,timse,"yeah I would refactor the whole thing. Its currently quite hard to wrap your head around whats happening.

Seeing the perf increase it might be worth investing some time to implement Set/Map throughout webpack though :0","yeah I would refactor the whole thing. Its currently quite hard to wrap your head around whats happening.

Seeing the perf increase it might be worth investing some time to implement Set/Map throughout webpack though :0",1,0,0,0,0,0,Rage,Dislike,Dislike (current setup),,
webpack/webpack,pull_request,161389256,2018-01-14 6:55:18,reergymerej,"This is ugly and doesn't quite match the other code, but it was the only thing I could find to make both the linters happy.","This is ugly and doesn't quite match the other code, but it was the only thing I could find to make both the linters happy.",1,0,0,0,0,0,Rage,Anger,Unhappy about the code -> Anger,,
webpack/webpack,pull_request,169085594,2018-02-19 14:09:59,sokra,Either remove or include these lines. Don't leave code in comments.,Either remove or include these lines. Don't leave code in comments.,1,0,0,0,0,0,Rage,Dislike,Dislike,,
webpack/webpack,pull_request,444767599,2020-06-24 9:31:58,sokra,this should not work,this should not work,1,0,0,0,0,0,Rage,Anger,Anger,,
Microsoft/TypeScript,pull_request,499962528,2020-10-06 1:49:46,amcasey,Seems like it would be ironic to blow the stack doing this and unrolling the recursion looks trivial in this case.,Seems like it would be ironic to blow the stack doing this and unrolling the recursion looks trivial in this case.,1,0,0,0,0,0,Rage,Bitterness,Bitterness,,
Microsoft/TypeScript,pull_request,542502640,2020-12-14 16:03:45,sandersn,"Actually, I think I'll make this optional and skip resolving links if it's not provided. I wasn't happy about requiring it, and [resolved] link info is not something everybody needs all that frequently.","Actually, I think I'll make this optional and skip resolving links if it's not provided. I wasn't happy about requiring it, and [resolved] link info is not something everybody needs all that frequently.",1,0,0,0,0,0,Rage,dislike,,,
Microsoft/TypeScript,pull_request,553836947,2021-01-08 9:35:40,FauxFaux,"That test is indeed bad under isolatedModules:true.
I do not understand any of the other methods you referenced, so I am not intending to make any further changes to this PR.","That test is indeed bad under isolatedModules:true.
I do not understand any of the other methods you referenced, so I am not intending to make any further changes to this PR.",1,0,0,0,0,0,Rage,dislike,,,1
Microsoft/TypeScript,pull_request,555418615,2021-01-12 0:08:58,DanielRosenwasser,I hate phrasing these recursive relationships.,I hate phrasing these recursive relationships.,1,0,0,0,0,0,Rage,Hate,Hate,,
Microsoft/TypeScript,pull_request,558641651,2021-01-15 23:07:00,sandersn,"```
const errorHandler = (s: string) => `invalid color ${s}`
```
now creates a unwanted template literal type 🙄","[TRIPLE QUOTE].
now creates a unwanted template literal type 🙄",1,0,0,0,0,0,Rage,dislike,,,
Microsoft/TypeScript,pull_request,587820028,2021-03-04 20:57:49,armanio123,I hate this ones. Fixed.,I hate this ones. Fixed.,1,0,0,0,0,0,Rage,Hate,Hate,,
Microsoft/TypeScript,pull_request,637095612,2021-05-21 17:41:32,amcasey,"Eh, why not?","Eh, why not?",1,0,0,0,0,0,Rage,Anger,Anger,,
flutter/flutter,pull_request,645778936,2021-06-04 18:41:39,LongCatIsLooong,"I think ultimately this depends on what kind of selection control you're using, so it's not really platform-dependant. Even in `TextField`'s implementation you can override `textSelectionControl` so it's still up to the developer.

Anyways IMO we should deprecate this callback and let the `TextSelectionControl` implementation decides how the handles should be built and what interactions it should support. Currently it does not have enough information (as it doesn't have access to the `EditableTextState` that builds the selection overlay).","I think ultimately this depends on what kind of selection control you're using, so it's not really platform-dependant. Even in `TextField`'s implementation you can override `textSelectionControl` so it's still up to the developer.

Anyways IMO we should deprecate this callback and let the `TextSelectionControl` implementation decides how the handles should be built and what interactions it should support. Currently it does not have enough information (as it doesn't have access to the `EditableTextState` that builds the selection overlay).",1,0,0,0,0,0,Rage,dislike,,,
flutter/flutter,pull_request,648393172,2021-06-09 14:54:37,shihaohong,"Is this change necessary? If not, please revert","Is this change necessary? If not, please revert",1,0,0,0,0,0,Rage,dislike,,,
angular/angular,pull_request,665758802,2021-07-07 23:00:49,josephperrott,Not a huge preference. Lets leave it this way and worst case we find its annoying to have the complete link and we can remove it or change it,Not a huge preference. Lets leave it this way and worst case we find its annoying to have the complete link and we can remove it or change it,1,0,0,0,0,0,Rage,dislike,,,
Microsoft/TypeScript,pull_request,671564674,2021-07-16 23:09:41,amcasey,"I also think it's ridiculous that some hosts expose it as a function, but I'm not sure how comfortable I am with ignoring that.","I also think it's ridiculous that some hosts expose it as a function, but I'm not sure how comfortable I am with ignoring that.",1,0,0,0,0,0,Rage,-,Anger,,
webpack/webpack,pull_request,718879442,2021-09-29 20:57:24,markjm,"Dont quite understand this, so not sure if this is required","Dont quite understand this, so not sure if this is required",1,0,0,0,0,0,Rage,Dislike,Disliking,,
Microsoft/TypeScript,pull_request,724512753,2021-10-07 20:33:54,weswigham,"Technically I don't have to smuggle it out at all - I could always rehydrate it by rechecking the conditions on the finally selected child; but saving it off like this results in the least amount of repeated comparisons, so I chose to just save it off here. If you want to blame anything, blame the silly preceding token case - because if it, there's no truly clean structure possible for this code, imo, since it creates this odd alternative condition and hard bail in what's otherwise a straightforward traversal. I'd prefer if we didn't need it, honestly.","Technically I don't have to smuggle it out at all - I could always rehydrate it by rechecking the conditions on the finally selected child; but saving it off like this results in the least amount of repeated comparisons, so I chose to just save it off here. If you want to blame anything, blame the silly preceding token case - because if it, there's no truly clean structure possible for this code, imo, since it creates this odd alternative condition and hard bail in what's otherwise a straightforward traversal. I'd prefer if we didn't need it, honestly.",1,0,0,0,0,0,Rage,-,Rage (towards the precedings),,
flutter/flutter,pull_request,737855202,2021-10-27 21:20:06,jmagman,"This looks pretty squished, do you have your line lengths set to 120?","This looks pretty squished, do you have your line lengths set to 120?",1,0,0,0,0,0,Rage,dislike,,,
webpack/webpack,issue,796705240,2021-03-11 12:35:54,alexander-akait,"I don't know there is the problem, please provide reproducible test repo and step to reproduce, otherwise won't fix, sorry","I don't know there is the problem, please provide reproducible test repo and step to reproduce, otherwise won't fix, sorry",1,0,0,0,0,0,Rage,Dislike,Dislike (for not providing enough info),,
webpack/webpack,issue,797457631,2021-03-12 12:22:41,alexander-akait,"Sorry I can't help you, won't fix for me, I can’t guess and unfortunately I don’t have time for that, if you need help try to reduce your app and provide example of the problem","Sorry I can't help you, won't fix for me, I can’t guess and unfortunately I don’t have time for that, if you need help try to reduce your app and provide example of the problem",1,0,0,0,0,0,Rage,Hostility,Hostility,,1
Microsoft/TypeScript,issue,895623301,2021-08-09 23:41:40,weswigham,"....Welp, you've jinxed it - I restarted by insiders editor to enable tsserver debugging again and now I can't repro it no matter how fast I type.","....Welp, you've jinxed it - I restarted by insiders editor to enable tsserver debugging again and now I can't repro it no matter how fast I type.",1,0,0,0,0,0,Rage,Hostility,Hostility,,
angular/angular,issue,902565139,2021-08-20 9:31:09,gabrielnvian,How is this still not fixed?,How is this still not fixed?,1,0,0,0,0,0,Rage,Anger,Anger,,
Microsoft/TypeScript,issue,907322213,2021-08-27 16:23:47,andrewbranch,"Can you show an example of why you'd use a pattern like this in real life? It doesn't seem useful to apply an array spread to an array _literal_, but I'm sure I'm missing something.","Can you show an example of why you'd use a pattern like this in real life? It doesn't seem useful to apply an array spread to an array _literal_, but I'm sure I'm missing something.",1,0,0,0,0,0,Rage,Dislike,Dislike,,
Microsoft/TypeScript,issue,919083803,2021-09-14 12:02:21,djfm,"Unbelievable how TS devs are stubborn on this.
On Tue, Sep 14, 2021, 11:33 Daniel Kuschny ***@***.***> wrote:
> I also just stumbled over this issue and as usual I find the
> justifications of ""working as intended"" as really questionable. There are
> various settings in the compiler which steer the module system. If I set ""module"":
> ""commonjs"" my typescript import statements are rewritten to require.
> There is also esModuleInterop which adds some extensions around the
> module imports.
>
> While I agree that maybe the default behavior should be in the way that
> TypeScript leaves everything untouched, I also would say that it
> should/must be a TypeScript compiler setting to handle the mentioned use
> cases. I wanted to use TypeScript to create a small command line tool,
> which I can use in my GitHub Actions Workflow (without really making a
> reusable action) and it just does not work because the TypeScript output is
> not compatible with Node.js. Node.js seems to be usually a first class
> citizen in TS and here some very high level rules on the design goals
> (which IMO only partially apply here) prevent many people to use TS in such
> an obvious chain as running the compiled output in Node.js.
>
> Maybe we have better chances with the Node.js guys to extend the module
> resolution algorithm
> <https://nodejs.org/dist/latest-v14.x/docs/api/esm.html#esm_resolution_algorithm>
> .
>
> —
> You are receiving this because you were mentioned.
> Reply to this email directly, view it on GitHub
> <https://github.com/microsoft/TypeScript/issues/40878#issuecomment-918983144>,
> or unsubscribe
> <https://github.com/notifications/unsubscribe-auth/AALESEYHJXMEELW4LUUB43DUB4JIFANCNFSM4SA23LJQ>
> .
>","Unbelievable how TS devs are stubborn on this.
On Tue, Sep 14, 2021, 11:33 Daniel Kuschny ***@***.***> wrote:
[BLOCK QUOTE].",1,0,0,0,0,0,Rage,Anger,Anger,,
angular/angular,issue,939298840,2021-10-09 13:38:32,petebacondarwin,"@aikidave - is this something you still want? How can we prioritise this work over other? If it is just a nice to have and not really necessary, then I would prefer to close this.","[USER] - is this something you still want? How can we prioritise this work over other? If it is just a nice to have and not really necessary, then I would prefer to close this.",1,0,0,0,0,0,Rage,Dislike,Dislike,1,
flutter/flutter,issue,947931216,2021-10-20 18:31:51,Hu1buerger,"Hell no.

Yeah it was using a f...ing row instead of a column.....","Hell no.

Yeah it was using a f...ing row instead of a column.....",1,0,0,0,0,0,Rage,,,,
Microsoft/TypeScript,issue,949069112,2021-10-21 23:13:34,pushkine,"> This is working as intended I don't understand how that is intended, or why `typeof` is necessary. Using `const enum` means `CharCode` is not an object in runtime, referring to it using `typeof` as if it were a runtime object makes no sense.","[BLOCK QUOTE].
I don't understand how that is intended, or why `typeof` is necessary. Using `const enum` means `CharCode` is not an object in runtime, referring to it using `typeof` as if it were a runtime object makes no sense.",1,0,0,0,0,0,Rage,Anger,Anger,,
webpack/webpack,issue,952764502,2021-10-27 10:15:39,alexander-akait,"Please do not open issues until we finish https://github.com/webpack/webpack-dev-server/pull/3972, there are no problems with webpack",Please do not open issues until we finish [URL] there are no problems with webpack,1,0,0,0,0,0,Rage,Ferocity,,,
Microsoft/TypeScript,issue,955023614,2021-10-29 20:17:30,fatcerberus,"I don't think TS even has a way, internally, to track the correlation between the two values here. The compiler just sees an expression of the form `x + y` where `x` and `y` are independent terms of type `string | number` (because it doesn't know which type `par` is) and errors accordingly.
Also, please follow the issue template next time.","I don't think TS even has a way, internally, to track the correlation between the two values here. The compiler just sees an expression of the form `x + y` where `x` and `y` are independent terms of type `string | number` (because it doesn't know which type `par` is) and errors accordingly.
Also, please follow the issue template next time.",1,0,0,0,0,0,Rage,Ferocity,Ferocity,,
Microsoft/TypeScript,issue,957898638,2021-11-02 16:14:09,jcalz,"I think hostility/arrogance must be in the eye of the beholder, but it’s probably more productive at this point for me to bow out of this conversation and leave the issue in the hands of those whose behavior I hope you’ll find more palatable. Good luck to you!","I think hostility/arrogance must be in the eye of the beholder, but it’s probably more productive at this point for me to bow out of this conversation and leave the issue in the hands of those whose behavior I hope you’ll find more palatable. Good luck to you!",1,0,0,0,0,0,Rage,Anger,Anger,,
angular/angular,issue,958927432,2021-11-03 11:06:39,mtuzinskiy,Not fixed since 2016? Seriously?,Not fixed since 2016? Seriously?,1,0,0,0,0,0,Rage,Anger,Anger,,
webpack/webpack,pull_request,161791875,2018-01-16 15:29:32,ooflorent,Should I remove `will be removed soon`? I feel like it's a bit to much.,Should I remove `will be removed soon`? I feel like it's a bit to much.,1,0,0,0,0,0,Rage,Dislike,Not liking -> Dislike,,
Microsoft/TypeScript,pull_request,577022246,2021-02-16 17:54:14,RyanCavanaugh,Please revert. This isn't a typo.,Please revert. This isn't a typo.,1,0,0,0,0,0,Disapproval,,Disagreement about the typo -> Disapproval,,
flutter/flutter,issue,954241920,2021-10-28 21:36:37,gspencergoog,"I feel like in order to address a memory usage issue, we need to be comparing the same application implemented with Flutter and the thing you want to compare it to, with the details of the memory usage statistics (how much is resident, etc.).

A simple measurement and ""I think it's too big"" isn't going to get us to any actionable issues, even if we agree with you. Telling us that some subsystem (fonts, i18n, images, etc.) uses more memory than expected is closer to something actionable, but we'd still need to know what the goal was and what it was begin compared to.","I feel like in order to address a memory usage issue, we need to be comparing the same application implemented with Flutter and the thing you want to compare it to, with the details of the memory usage statistics (how much is resident, etc.).

A simple measurement and ""I think it's too big"" isn't going to get us to any actionable issues, even if we agree with you. Telling us that some subsystem (fonts, i18n, images, etc.) uses more memory than expected is closer to something actionable, but we'd still need to know what the goal was and what it was begin compared to.",1,0,0,0,0,0,Irritation,,None,,
angular/angular,issue,883376886,2021-07-20 13:05:45,JoostK,What is the actual error logged? Are there interceptors active? Please share a runnable reproduction of the issue as otherwise this isn't actionable for us.,What is the actual error logged? Are there interceptors active? Please share a runnable reproduction of the issue as otherwise this isn't actionable for us.,1,0,0,0,0,0,Irritaion,Annoyance,Mild irritation for not providing reproduction,,
angular/angular,issue,912952924,2021-09-04 10:51:13,alan-agius4,Unfortunately without a reproduction it's hard to tell what is happening.,Unfortunately without a reproduction it's hard to tell what is happening.,1,0,0,0,0,0,Irritaion,,Irritaion for nor providing reproduction,,
angular/angular,issue,921523287,2021-09-17 6:03:52,JoostK,"Without a reproduction we're unable to help you here, unfortunately. Can you provide a Github repo with reproduction?","Without a reproduction we're unable to help you here, unfortunately. Can you provide a Github repo with reproduction?",1,0,0,0,0,0,Irritaion,,Irritaion for nor providing reproduction,,
webpack/webpack,issue,796733359,2021-03-11 13:25:17,alexander-akait,"Can you provide stack or something more, playing guessing is bad practice","Can you provide stack or something more, playing guessing is bad practice",1,0,0,0,0,0,Irritaion,Annoyance,Annoyance about not providing some samples,,
Microsoft/TypeScript,issue,902350845,2021-08-20 0:56:54,mjbvz,"Please share a valid, self contained code sample that demonstrates the problems","Please share a valid, self contained code sample that demonstrates the problems",1,0,0,0,0,0,Irritaion,Annoyance,Mild annoyance for not proving sample code,1,