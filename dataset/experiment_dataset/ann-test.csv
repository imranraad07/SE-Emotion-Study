repo,type,id,created_at,user,comment,modified_comment,Anger,Love,Fear,Joy,Sadness,Surprise,Emotion 2,Emotion 3,Comment
flutter/flutter,issue,949058424,2021-10-21 22:49:44,yjbanov,"Assuming this is not an issue any more. Please reopen, if this is still reproducible.","Assuming this is not an issue any more. Please reopen, if this is still reproducible.",0,0,0,0,0,0,None,,None
webpack/webpack,pull_request,121870320,2017-06-14 7:15:18,sokra,I guess it's because when creating the module reasons the chunk graph is not created and `module._chunks` is null/empty.,I guess it's because when creating the module reasons the chunk graph is not created and `module._chunks` is null/empty.,0,0,0,0,0,0,None,,None
webpack/webpack,pull_request,156956746,2017-12-14 14:25:57,sokra,It's ok. You don't have to change it.,It's ok. You don't have to change it.,0,0,0,0,0,0,None,,None
flutter/flutter,pull_request,644409171,2021-06-03 0:51:44,jonahwilliams,"I didn't look at what it would take to remove this timeout/delay, but I did make it much smaller","I didn't look at what it would take to remove this timeout/delay, but I did make it much smaller",0,0,0,0,0,0,None,,
flutter/flutter,pull_request,657568251,2021-06-24 1:49:42,dnfield,I've reverted this change since it's not needed anymore - this has gone back to being a debug static thing.,I've reverted this change since it's not needed anymore - this has gone back to being a debug static thing.,0,0,0,0,0,0,None,,
flutter/flutter,pull_request,660196149,2021-06-29 0:22:45,gspencergoog,"I agree it's odd, but I think the reason is that this test is fragile: it seems to look at the reloaded code, which includes the test code itself, so if I modify the test, it modifies the line numbers in this test.

So, adding seven lines at the top of this file altered these values by seven lines.","I agree it's odd, but I think the reason is that this test is fragile: it seems to look at the reloaded code, which includes the test code itself, so if I modify the test, it modifies the line numbers in this test.

So, adding seven lines at the top of this file altered these values by seven lines.",0,0,0,0,0,0,None,,
angular/angular,pull_request,664549743,2021-07-06 13:21:44,petebacondarwin,Although I think it is probably good practice to always add `override` to all concrete methods that implement abstract base methods.,Although I think it is probably good practice to always add `override` to all concrete methods that implement abstract base methods.,0,0,0,0,0,0,None,,
angular/angular,pull_request,679513242,2021-07-29 21:59:28,dario-piotrowicz,I was mistaken! :sweat_smile:,I was mistaken! :sweat_smile:,0,0,0,0,0,0,None,,
angular/angular,pull_request,692307110,2021-08-19 16:38:36,shlasouski,Yes it's absolutely the same test) You asked to add test with the action. So I decided to duplicate this one.,Yes it's absolutely the same test) You asked to add test with the action. So I decided to duplicate this one.,0,0,0,0,0,0,None,,
angular/angular,pull_request,721377123,2021-10-04 13:42:23,gkalpak,`Array.from(filesPerGroup.values())` is an array of arrays. The `.concat()` is for flattening it :grin:,`Array.from(filesPerGroup.values())` is an array of arrays. The `.concat()` is for flattening it :grin:,0,0,0,0,0,0,None,,
webpack/webpack,pull_request,724552743,2021-10-07 21:40:00,markjm,"removed, so outdated now. New changes are also backward compatible","removed, so outdated now. New changes are also backward compatible",0,0,0,0,0,0,None,,
webpack/webpack,issue,912526425,2021-09-03 13:08:42,alexander-akait,"But we can't fix it here, because vue-cli should update dev server","But we can't fix it here, because vue-cli should update dev server",0,0,0,0,0,0,None,,
webpack/webpack,issue,920382816,2021-09-15 21:13:48,vankop,Closing because of inactivity. Feel free to report new issue with reproducible repo.,Closing because of inactivity. Feel free to report new issue with reproducible repo.,0,0,0,0,0,0,None,,
flutter/flutter,issue,944899238,2021-10-16 11:11:27,stuartmorgan,The guidance we can provide its what we put in the error message; only the plugin's maintainer can update it.,The guidance we can provide its what we put in the error message; only the plugin's maintainer can update it.,0,0,0,0,0,0,None,,
flutter/flutter,issue,947358853,2021-10-20 6:11:09,xyun52,"@stuartmorgan
Have to wait a few years","[USER]
Have to wait a few years",0,0,0,0,0,0,None,,
Microsoft/TypeScript,issue,949081322,2021-10-21 23:43:11,ahejlsberg,"I think I can say with a high degree of certainty that whatever is going on in @amcasey's example is unrelated. I removed all of the logic having to do with assignability to conditional types (i.e. both #30639 and this PR), and the example _still_ blows up with an instantiation depth error.","I think I can say with a high degree of certainty that whatever is going on in [USER] example is unrelated. I removed all of the logic having to do with assignability to conditional types (i.e. both #30639 and this PR), and the example _still_ blows up with an instantiation depth error.",0,0,0,0,0,0,None,,
Microsoft/TypeScript,issue,949083272,2021-10-21 23:49:16,sandersn,"The excessive stack depth in react-hook-form happens during type parameter inference, but that's all I know right now.","The excessive stack depth in react-hook-form happens during type parameter inference, but that's all I know right now.",0,0,0,0,0,0,None,,
webpack/webpack,pull_request,94292816,2017-01-02 4:20:29,Jessidhia,"Not just that; not wrapping would make the compiler very, very unhappy if there was more than one `let oldValue` inside the switch :)

The scope block here is the switch itself; the `case` are just like `goto` labels. A similar trap exists with C.","Not just that; not wrapping would make the compiler very, very unhappy if there was more than one `let oldValue` inside the switch :) The scope block here is the switch itself; the `case` are just like `goto` labels. A similar trap exists with C.",0,0,0,0,0,0,None,,
flutter/flutter,issue,961310638,2021-11-04 18:31:43,gspencergoog,"@fctorial or @darshankawar can you provide some more detail about the current and expected behavior? If you can, a small video or gif of what you expect to see vs what you are seeing?

I suspect that the reason here is not that the movement causes it to be ignored, but the timing: it might be interpreted as a long click if you hold the button down, and if there's no long click handler on the button then it does nothing.

If that's the case, we should probably investigate what should happen in that case so as to still allow long click detection, but send a regular click if there's no long click handler (which is how I _think_ it currently works, but I'm not sure).","[USER] or [USER] can you provide some more detail about the current and expected behavior? If you can, a small video or gif of what you expect to see vs what you are seeing?

I suspect that the reason here is not that the movement causes it to be ignored, but the timing: it might be interpreted as a long click if you hold the button down, and if there's no long click handler on the button then it does nothing.

If that's the case, we should probably investigate what should happen in that case so as to still allow long click detection, but send a regular click if there's no long click handler (which is how I _think_ it currently works, but I'm not sure).",0,0,0,0,0,0,None,,
flutter/flutter,issue,947450928,2021-10-20 8:38:01,kest-cloud,Pls Close. I figured that out already. Thank you,Pls Close. I figured that out already. Thank you,0,0,0,0,0,0,None,,
webpack/webpack,pull_request,94312015,2017-01-02 11:50:18,sokra,"Could you check if this method is used?

I think it's unused and we can remove it...",Could you check if this method is used? I think it's unused and we can remove it...,0,0,0,0,0,0,None,-,None
Microsoft/TypeScript,pull_request,575636997,2021-02-13 8:00:22,a-tarasyuk,"@DanielRosenwasser I agree that this is `questionable`, I can remove support for object destructuring and leave only array destructuring. What do you think? ","[USER] I agree that this is `questionable`, I can remove support for object destructuring and leave only array destructuring. What do you think?",0,0,0,0,0,0,None,-,None
webpack/webpack,issue,939932146,2021-10-11 11:14:54,alexander-akait,No... Can you provide example?,No... Can you provide example?,0,0,0,0,0,0,None,-,None
webpack/webpack,pull_request,127892506,2017-07-18 6:39:14,probablyup,"It does, but the prototype is empty and concat is an immutable method so it's okay.","It does, but the prototype is empty and concat is an immutable method so it's okay.",0,0,0,0,0,0,None,-,None
Microsoft/TypeScript,issue,943647545,2021-10-14 19:12:22,DanielRosenwasser,"In any case, it's a bug that this one didn't work, right?

```diff
 ""exports"": {
     ""."": {
     ""import"": {
         ""node"": ""./index.mjs"",
         ""default"": ""./dist/vue.runtime.esm-bundler.js""
+        ""types"": ""./dist/vue.d.ts""
     },
     ""require"": ""./index.js"",
     },
 }
```","In any case, it's a bug that this one didn't work, right? 

[TRIPLE QUOTE].",0,0,0,0,0,0,None,-,None
Microsoft/TypeScript,pull_request,533830991,2020-12-02 1:17:01,sheetalkamat,This is how logger was designed way back so any change here would be breaking. (esp because msg is suppose to be public method),This is how logger was designed way back so any change here would be breaking. (esp because msg is suppose to be public method),0,0,0,0,0,0,None,-,None
webpack/webpack,pull_request,109109706,2017-03-31 8:16:47,sokra,"These two properties are not used in the webpack codebase itself, but may be used by plugins.

Don't remove them.","These two properties are not used in the webpack codebase itself, but may be used by plugins.

Don't remove them.",0,0,0,0,0,0,None,,None
webpack/webpack,pull_request,176222755,2018-03-21 20:12:56,ooflorent,No I don't have one. The purpose of these 2 alternatives is to have an object with a `null` prototype. Lookups on it would be faster since it doesn't require traversing the proto chain.,No I don't have one. The purpose of these 2 alternatives is to have an object with a `null` prototype. Lookups on it would be faster since it doesn't require traversing the proto chain.,0,0,0,0,0,0,None,,None
webpack/webpack,pull_request,176223360,2018-03-21 20:15:04,shellscape,"I have no issue with using the same format. The only reason I chose this format is that it happens to be the same that Firefox uses. Otherwise, there is no standard for this.","I have no issue with using the same format. The only reason I chose this format is that it happens to be the same that Firefox uses. Otherwise, there is no standard for this.",0,0,0,0,0,0,None,,None
Microsoft/TypeScript,pull_request,460336981,2020-07-25 0:11:30,sheetalkamat,"1. We want this to happen irrespective of augmenting that means any time we import the properties from object/function should be error so this might not happen at augmentation time.
2. Will there be some kind of edge case where in valid scenario return globalfunctionType property symbol. That is what if getTypeOfSymbol(targetSymbol) is globalFunctionType or globalObjectType","1. We want this to happen irrespective of augmenting that means any time we import the properties from object/function should be error so this might not happen at augmentation time.
2. Will there be some kind of edge case where in valid scenario return globalfunctionType property symbol. That is what if getTypeOfSymbol(targetSymbol) is globalFunctionType or globalObjectType",0,0,0,0,0,0,None,,None
Microsoft/TypeScript,pull_request,492276527,2020-09-21 18:53:26,DanielRosenwasser,"As you can see below, this forces you to reparse. You already have the semantic structure, reuse that.","As you can see below, this forces you to reparse. You already have the semantic structure, reuse that.",0,0,0,0,0,0,None,,None
Microsoft/TypeScript,pull_request,536096487,2020-12-04 13:23:59,Zzzen,"😏 Actually, it's the result of `bestDistance - 1` turned into `bestDistance`. `bestDistance - 1` can be replaced with `bestDistance - 0.1`, but it is very fragile since the minimum of distance could be changed to other values like `0.05` in the future.","😏 Actually, it's the result of `bestDistance - 1` turned into `bestDistance`. `bestDistance - 1` can be replaced with `bestDistance - 0.1`, but it is very fragile since the minimum of distance could be changed to other values like `0.05` in the future.",0,0,0,0,0,0,None,,None
webpack/webpack,pull_request,547236132,2020-12-22 11:55:38,alexander-akait,"Please do not touch logic, only types, otherwise it will not merged, I do mistake, it should be `{}`","Please do not touch logic, only types, otherwise it will not merged, I do mistake, it should be `{}`",0,0,0,0,0,0,None,,None
Microsoft/TypeScript,pull_request,564892278,2021-01-26 22:57:57,sheetalkamat,I dont think we should be doing this as part of program creation.. We should do it only if and when we need it as module resolution is costly,I dont think we should be doing this as part of program creation.. We should do it only if and when we need it as module resolution is costly,0,0,0,0,0,0,None,,None
angular/angular,pull_request,628914206,2021-05-09 16:40:50,petebacondarwin,No need to add a new parameter here. The `config` parameter already contains the `devDependencies` that you need.,No need to add a new parameter here. The `config` parameter already contains the `devDependencies` that you need.,0,0,0,0,0,0,None,,None
Microsoft/TypeScript,pull_request,630618031,2021-05-12 0:09:03,sandersn,"No, it's easier to let the parser accept `async` like any other identifier, and just exclude the single incorrect case in the grammar checks in the checker. The parser would have to decide on a node to return in the error case, and if it *weren't* `Identifier` then the checker and emitter would have to handle that error case.","No, it's easier to let the parser accept `async` like any other identifier, and just exclude the single incorrect case in the grammar checks in the checker. The parser would have to decide on a node to return in the error case, and if it *weren't* `Identifier` then the checker and emitter would have to handle that error case.",0,0,0,0,0,0,None,,None
flutter/flutter,pull_request,655566860,2021-06-21 17:16:00,shihaohong,"Can you add some documentation for these parameters above? I'm thinking line 2322 where this currently exists:
```dart
/// Optional strings for the [helpText], [cancelText], and [confirmText] can be
/// provided to override the default values.
```","Can you add some documentation for these parameters above? I'm thinking line 2322 where this currently exists:
[TRIPLE QUOTE].",0,0,0,0,0,0,None,,None
angular/angular,pull_request,667367169,2021-07-10 17:59:31,gkalpak,Please put this below line 5 (together with the other non-app imports) :pray:,Please put this below line 5 (together with the other non-app imports) :pray:,0,0,0,0,0,0,None,,None
flutter/flutter,pull_request,669909132,2021-07-14 19:54:13,HansMuller,All of the factory constructors should specify what features of the default FAB they are overriding.,All of the factory constructors should specify what features of the default FAB they are overriding.,0,0,0,0,0,0,None,,None
flutter/flutter,pull_request,687187399,2021-08-11 20:59:15,Hixie,"That's fair, but at some level that's to be expected. There's never going to be a brief page that provides all the context, because there's too much context to be able to do it briefly. So we could mention that someone using Flutter will be able to provide the same experience for all versions of iOS, but then how about mentioning that on macOS desktop, we provide text field accessibility without using a private API, unlike Electron? There's so _many_ things that are worth mentioning that if you did mention them all, nobody would read it all, and so you'd guarantee some stuff would be missed anyway.","That's fair, but at some level that's to be expected. There's never going to be a brief page that provides all the context, because there's too much context to be able to do it briefly. So we could mention that someone using Flutter will be able to provide the same experience for all versions of iOS, but then how about mentioning that on macOS desktop, we provide text field accessibility without using a private API, unlike Electron? There's so _many_ things that are worth mentioning that if you did mention them all, nobody would read it all, and so you'd guarantee some stuff would be missed anyway.",0,0,0,0,0,0,None,,None
angular/angular,pull_request,687988964,2021-08-12 18:31:26,atscott,"Agreed, this should be an error.","Agreed, this should be an error.",0,0,0,0,0,0,None,,None
flutter/flutter,pull_request,688262169,2021-08-13 5:56:07,jmagman,"This isn't related to the name change, but I want to pull it over from https://github.com/flutter/flutter/pull/60408 as well.","This isn't related to the name change, but I want to pull it over from [URL] as well.",0,0,0,0,0,0,None,,None
Microsoft/TypeScript,pull_request,703928811,2021-09-08 0:01:00,andrewbranch,"I don’t think there’s a great way without restructuring a lot of calling code. If the node being checked is an `ImportClause`, it has to have a `name` in order to get to this function, or else it wouldn’t have been an alias at all (it would have been a side effect import like `import ""module""`). IOW, when `ImportClause` has a symbol, it is the alias represented by its `name`.","I don’t think there’s a great way without restructuring a lot of calling code. If the node being checked is an `ImportClause`, it has to have a `name` in order to get to this function, or else it wouldn’t have been an alias at all (it would have been a side effect import like `import ""module""`). IOW, when `ImportClause` has a symbol, it is the alias represented by its `name`.",0,0,0,0,0,0,None,,None
flutter/flutter,pull_request,721580107,2021-10-04 17:41:13,HansMuller,"This isn't quite right: if `decoration!.labelStyle` resolves to null, then use the resolved value of `themeData.inputDecorationTheme.labelStyle`:

```dart
TextStyle _getInlineStyle(ThemeData themeData) {
 final TextStyle? style = MaterialStateProperty.resolveAs(decoration!.labelStyle, materialState)
 ?? MaterialStateProperty.resolveAs(themeData.inputDecorationTheme.labelStyle, materialState);

 if (style == null) {
 return themeData.textTheme.subtitle1!.merge(widget.baseStyle)
 .copyWith(color: decoration!.enabled ? themeData.hintColor : themeData.disabledColor);
 }

 return themeData.textTheme.subtitle1!.merge(style.merge(widget.baseStyle));
}
```","This isn't quite right: if `decoration!.labelStyle` resolves to null, then use the resolved value of `themeData.inputDecorationTheme.labelStyle`:

[TRIPLE QUOTE].",0,0,0,0,0,0,None,,None
angular/angular,issue,878510515,2021-07-12 18:47:42,webmandman,I've never shared console logs is there a meaningful way of exporting it? or does the HAR log also have console logs?,I've never shared console logs is there a meaningful way of exporting it? or does the HAR log also have console logs?,0,0,0,0,0,0,None,,None
webpack/webpack,issue,886811520,2021-07-26 15:38:45,hhimanshu,There is a Github Action demonstrating this issue at https://github.com/hhimanshu/ts-react-components-lib/pull/7/checks?check_run_id=3163107139,There is a Github Action demonstrating this issue at [URL],0,0,0,0,0,0,None,,None
angular/angular,issue,888484641,2021-07-28 17:22:38,survirtual,"Or give the pipe some kind of output parameter which gets automatically passed back into the pipe transform function without any additional template syntax. The output parameter is added to the change detection tree, and when it gets modified, the transform is re-run.
I could go on but I feel like there are several plausible mechanisms with minimal / no impact outside of this specific use case.","Or give the pipe some kind of output parameter which gets automatically passed back into the pipe transform function without any additional template syntax. The output parameter is added to the change detection tree, and when it gets modified, the transform is re-run.
I could go on but I feel like there are several plausible mechanisms with minimal / no impact outside of this specific use case.",0,0,0,0,0,0,None,,None
Microsoft/TypeScript,issue,926237053,2021-09-23 23:32:10,andrewbranch,"Debatable, but IMO there’s nothing wrong with just showing the hint on every function.","Debatable, but IMO there’s nothing wrong with just showing the hint on every function.",0,0,0,0,0,0,None,,None
flutter/flutter,issue,947062368,2021-10-19 20:02:18,aleripe,I'm waiting too...,I'm waiting too...,0,0,0,0,0,0,None,,None
flutter/flutter,issue,948646265,2021-10-21 13:59:19,andyduke,"I faced this problem too. In the Crashlytics log, I see such a trace, but it is not clear from it where the problem begins:
```
Non-fatal Exception: io.flutter.plugins.firebase.crashlytics.FlutterError: Unsupported operation: Infinity or NaN toInt. Error thrown Instance of 'ErrorDescription'.
       at _Double.round(_Double.java)
       at RenderSliverFixedExtentBoxAdaptor.getMinChildIndexForScrollOffset(RenderSliverFixedExtentBoxAdaptor.java:70)
       at RenderSliverFixedExtentBoxAdaptor.performLayout(RenderSliverFixedExtentBoxAdaptor.java:192)
       at RenderObject.layout(RenderObject.java:1858)
       at RenderSliverEdgeInsetsPadding.performLayout(RenderSliverEdgeInsetsPadding.java:137)
       at _RenderSliverFractionalPadding.performLayout(_RenderSliverFractionalPadding.java:167)
       at RenderObject.layout(RenderObject.java:1858)
       at RenderViewportBase.layoutChildSequence(RenderViewportBase.java:510)
       at RenderViewport._attemptLayout(RenderViewport.java:1580)
       at RenderViewport.performLayout(RenderViewport.java:1489)
       at RenderObject._layoutWithoutResize(RenderObject.java:1713)
       at PipelineOwner.flushLayout(PipelineOwner.java:885)
       at RendererBinding.drawFrame(RendererBinding.java:453)
       at WidgetsBinding.drawFrame(WidgetsBinding.java:883)
       at RendererBinding._handlePersistentFrameCallback(RendererBinding.java:319)
       at SchedulerBinding._invokeFrameCallback(SchedulerBinding.java:1143)
       at SchedulerBinding.handleDrawFrame(SchedulerBinding.java:1080)
       at SchedulerBinding._handleDrawFrame(SchedulerBinding.java:996)
```
The application was created with Flutter 2.5.2.

It is likely that this is the same problem as here https://github.com/flutter/flutter/issues/73498
","I faced this problem too. In the Crashlytics log, I see such a trace, but it is not clear from it where the problem begins:
[TRIPLE QUOTE].
The application was created with Flutter 2.5.2.

It is likely that this is the same problem as here [URL]",0,0,0,0,0,0,None,,None
Microsoft/TypeScript,pull_request,637253014,2021-05-21 21:52:35,OliverJAsh,I'm sure there was a good reason not to allow extractions for functions which aren't declarations…,I'm sure there was a good reason not to allow extractions for functions which aren't declarations…,1,0,0,0,0,0,Disapproval,-,Sounds like not in favor of sth -> Disapproval
flutter/flutter,issue,946883350,2021-10-19 16:15:49,chinmaygarde,"> The reason is that the navigation channel is not a typical channel and it won't buffer messages messages that are sent before handlers are set

@gaaclarke Can't we setup a handshake protocol to determine channel availability? What happens if the application is waiting for a channel message but doesn't actually care to render a frame? I don't think we should use timeouts in this way ([or at all](https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo#never-check-if-a-port-is-available-before-using-it-never-add-timeouts-and-other-race-conditions)).","[BLOCK QUOTE]. 

[USER] Can't we setup a handshake protocol to determine channel availability? What happens if the application is waiting for a channel message but doesn't actually care to render a frame? I don't think we should use timeouts in this way ([or at all]([URL]).",1,0,0,0,0,0,Disapproval,-,Disagreement -> Disapproval
angular/angular,issue,885281725,2021-07-22 22:41:04,DanielKucal,"I disagree, JIT/AOT doesn't make any difference here, it's the IVY / View Engine thing that is relevant. Just disable IVY in the demo and it will work: https://stackblitz.com/edit/angular-ivy-iembcw?file=src%2Fapp%2Fapp.component.html
Moreover, I have not been given any workaround - how to make the code that was working with View Engine make to work with IVY?","I disagree, JIT/AOT doesn't make any difference here, it's the IVY / View Engine thing that is relevant. Just disable IVY in the demo and it will work: [URL] Moreover, I have not been given any workaround - how to make the code that was working with View Engine make to work with IVY?",1,0,0,0,0,0,Disapproval,-,Disagreement -> Disapproval
webpack/webpack,issue,799457425,2021-03-15 14:19:16,vladar,"No, those are actually different bugs (they hit different codepaths). Fixing one won't fix the other. That's why I've opened two issues. Also, they have quite different steps to reproduce.","No, those are actually different bugs (they hit different codepaths). Fixing one won't fix the other. That's why I've opened two issues. Also, they have quite different steps to reproduce.",1,0,0,0,0,0,Disapproval,-,Disagreement (over same or different issue) -> Disapproval
webpack/webpack,pull_request,110512555,2017-04-08 7:25:14,sokra,The callback doesn't make sense here.,The callback doesn't make sense here.,1,0,0,0,0,0,Disapproval,,Disapproval
webpack/webpack,pull_request,186760581,2018-05-08 15:03:55,Connormiha,"```js
this.patterns = [];
```
This line is needless, because it overwritten bellow.","[TRIPLE QUOTE].
This line is needless, because it overwritten bellow.",1,0,0,0,0,0,Disapproval,,Disapproval
webpack/webpack,issue,919041736,2021-09-14 10:57:37,alexander-akait,"Bad idea to use `cjs.cjs`, there are another module with the same name","Bad idea to use `cjs.cjs`, there are another module with the same name",1,0,0,0,0,0,Disapproval,,Disapproval
webpack/webpack,pull_request,197074254,2018-06-21 9:50:11,sokra,This comment doesn't make sense here. It need to be before `const moduleFactory`,This comment doesn't make sense here. It need to be before `const moduleFactory`,1,0,0,0,0,0,Disapproval,,Disapproval
webpack/webpack,issue,804114113,2021-03-22 14:38:45,sokra,"Sorry I can't merge this PR.

A while ago I merged a lot PRs adding unit tests, but it turned out that this was a big mistake.
Unit tests might be helpful while writing the code, but adding them afterwart has no benefit in my opinion.
They only make refactoring more difficult and doesn't find any new bugs.

That's also why we excluded unit tests from contributing to code coverage.

If you want to contribute to test coverage, please add integration tests instead.","Sorry I can't merge this PR.

A while ago I merged a lot PRs adding unit tests, but it turned out that this was a big mistake.
Unit tests might be helpful while writing the code, but adding them afterwart has no benefit in my opinion.
They only make refactoring more difficult and doesn't find any new bugs.

That's also why we excluded unit tests from contributing to code coverage.

If you want to contribute to test coverage, please add integration tests instead.",1,0,0,0,0,0,Disapproval,-,Disapproval
Microsoft/TypeScript,pull_request,682947142,2021-08-04 20:45:55,elibarzilay,Bah. Wasn't supposed to add anything -- it was a debugging leftover...,Bah. Wasn't supposed to add anything -- it was a debugging leftover...,1,0,0,0,0,0,Disapproval,-,Disapproval
webpack/webpack,pull_request,106782122,2017-03-18 14:35:25,sokra,I don't think you need changes outside the BannerPlugin. Remove this line.,I don't think you need changes outside the BannerPlugin. Remove this line.,1,0,0,0,0,0,Disapproval,,
webpack/webpack,pull_request,193725456,2018-06-07 12:20:26,sokra,Remove this comment. I don't think it make sense to have this on by default.,Remove this comment. I don't think it make sense to have this on by default.,1,0,0,0,0,0,Disapproval,,
webpack/webpack,pull_request,453689942,2020-07-13 14:27:32,alexander-akait,"Make sense, but sounds terrible :smile:","Make sense, but sounds terrible :smile:",1,0,0,0,0,0,Disapproval,,
flutter/flutter,pull_request,665721295,2021-07-07 21:35:14,HansMuller,I don't think this paragraph is needed.,I don't think this paragraph is needed.,1,0,0,0,0,0,Disapproval,,
angular/angular,pull_request,671720449,2021-07-17 17:05:13,dario-piotrowicz,the form is not really related to the list we want to animate,the form is not really related to the list we want to animate,1,0,0,0,0,0,Disapproval,,
angular/angular,pull_request,690625447,2021-08-17 18:35:43,crisbeto,Also this is incorrect.,Also this is incorrect.,1,0,0,0,0,0,Disapproval,,
angular/angular,pull_request,703851152,2021-09-07 21:28:29,atscott,"Hmm, this one's a tough call. I feel like it should either be left the same or removed completely. If left the same, it shows that there are two ways to bind to `highlightColor` that are equivalent. This change makes it the same as the line above and I don't see any reason to have two lines that are showing the same thing.","Hmm, this one's a tough call. I feel like it should either be left the same or removed completely. If left the same, it shows that there are two ways to bind to `highlightColor` that are equivalent. This change makes it the same as the line above and I don't see any reason to have two lines that are showing the same thing.",1,0,0,0,0,0,Disapproval,,
flutter/flutter,pull_request,714377439,2021-09-22 23:25:24,HansMuller,This isn't true anymore.,This isn't true anymore.,1,0,0,0,0,0,Disapproval,,
flutter/flutter,pull_request,724774445,2021-10-08 7:40:31,domesticmouse,"I don't understand the problem this PR is fixing.

I do not agree with changing `Android Studio` to `Android-Studio`.","I don't understand the problem this PR is fixing.

I do not agree with changing `Android Studio` to `Android-Studio`.",1,0,0,0,0,0,Disapproval,,
Microsoft/TypeScript,issue,899917745,2021-08-17 1:07:59,niieani,"I'm sorry @RyanCavanaugh, I'm having trouble comprehending your example. In my eyes, it further demonstrates that the issue I described exists, i.e. `assertion(0, withArgs)` is illegal. I understand that resolving `In` and `Out` is undecidable (because it recurses infinitely), however, my claim here is that at least the tuple/overload assignment _should be legal_, because both functions may be called only with an equivalent set of arguments. In other words:
```ts
// this is ok:
assertion(0, assertion);
// this is also ok:
withArgs(0, withArgs);
// and this SHOULD be okay, but isn't:
withArgs(0, assertion);
// the other way SHOULD also be okay (your example):
assertion(0, withArgs)
```","I'm sorry [USER] I'm having trouble comprehending your example. In my eyes, it further demonstrates that the issue I described exists, i.e. `assertion(0, withArgs)` is illegal. I understand that resolving `In` and `Out` is undecidable (because it recurses infinitely), however, my claim here is that at least the tuple/overload assignment _should be legal_, because both functions may be called only with an equivalent set of arguments. In other words:
[TRIPLE QUOTE].",1,0,0,0,0,0,Disapproval,,
Microsoft/TypeScript,issue,940092072,2021-10-11 14:39:50,fatcerberus,"> This is a crash
Uh... no it's not? Nor is it a bug. It's just an error you didn't expect.","[BLOCK QUOTE].
Uh... no it's not? Nor is it a bug. It's just an error you didn't expect.",1,0,0,0,0,0,Disapproval,,
webpack/webpack,issue,797078303,2021-03-11 22:00:09,terpimost,"Guys, I'm very confused by this situation, documentation, examples and workarounds. I'm on Webpack 5.
I do appreciate work that Webpack team does and would happily donate money if somebody could put clarity in this.
It is so frustrating that I'm happy to pay just to get an answer.
There is [example](https://github.com/webpack/webpack/tree/master/examples/worker) of how Webpack can understand that we are importing a worker .
That helps us to not create a separate entry point - ok. But it doesn't demonstrate how worker and not worker would share module from a separate chunk. It looks like webpack 5 can't do that, correct? Is there a suggested way on how to do that?
In the example https://github.com/webpack/webpack/tree/master/examples/worker we have `chat-worker` which imports history from `chat-module`, while `example.js` creates a worker from `chat-worker`. The resulted bundle is 2 files 'main.js' and 'chat.js': ![image](https://user-images.githubusercontent.com/1903309/110858803-8399f400-8288-11eb-99fc-958720d18ad6.png)
but there is no code shared between chat-worker.js and example.js!
_fibonacci is kind of the same case..._ Lets add import of `chat-module` into the `example.js` like this:
```
import { history as historyChat } from './chat-module'
console.log('history=',historyChat)
```
And result of such bundle is this:
![image](https://user-images.githubusercontent.com/1903309/110859083-e55a5e00-8288-11eb-999a-8392757121ea.png)
`chat-module.js` appears twice in our bundle: inside `main.js` and inside `chat.js`.
So please can somebody give a clear answer on how can I get the result like this:
- `main.js` imports `chat-module.js` from a chunk like `chat-module-chunk.js`
- `chat-worker.js` imports `chat-module.js` from a chunk like `chat-module-chunk.js`
- `main.js` uses `chat-worker.js` and staff works :)
Now imagine a situation when `main.js` imports 5 different modules including soething from npm, while worker.js includes 5 of the same modules. What is the webpack.config.js magic should be written to put those 5 modules in one single chunk? Not all of those modules are from npm, some from my project, they are from different folders. All my attempts of chunk splitting optimization don't produce workable app. Right now I have to live with chunks which has huge portion of module duplicates because worker imports bunch of staff and the main app imports same staff.
Do I have to change all imports to dynamic? Do I need to do that only in the worker or I have to do that in both places? and after ask webpack to split only async chunks?
Which functions should I use for that? How I should direct webpack to produce particular modules I want into a single chunk?
**Update**
From my current understanding webpack would figure out chunks automatically only if we import same modules dynamically:
`const { fibonacci } = await import(""./fibonacci"")`
If we do so in the worker and in the main app, fibonacci module would be in a separate file.
Is that correct?
But why do we have to do that not only in the worker but also in the main app? Why can't we do `await import()` in the worker while have static `import` in the main app and webpack would understand that?","Guys, I'm very confused by this situation, documentation, examples and workarounds. I'm on Webpack 5.
I do appreciate work that Webpack team does and would happily donate money if somebody could put clarity in this.
It is so frustrating that I'm happy to pay just to get an answer.
There is [example]([URL]) of how Webpack can understand that we are importing a worker .
That helps us to not create a separate entry point - ok. But it doesn't demonstrate how worker and not worker would share module from a separate chunk. It looks like webpack 5 can't do that, correct? Is there a suggested way on how to do that?
In the example [URL] we have `chat-worker` which imports history from `chat-module`, while `example.js` creates a worker from `chat-worker`. The resulted bundle is 2 files 'main.js' and 'chat.js': [URL]
but there is no code shared between chat-worker.js and example.js!
_fibonacci is kind of the same case..._ Lets add import of `chat-module` into the `example.js` like this:

[TRIPLE QUOTE]

And result of such bundle is this: [URL]

`chat-module.js` appears twice in our bundle: inside `main.js` and inside `chat.js`.
So please can somebody give a clear answer on how can I get the result like this:
- `main.js` imports `chat-module.js` from a chunk like `chat-module-chunk.js`
- `chat-worker.js` imports `chat-module.js` from a chunk like `chat-module-chunk.js`
- `main.js` uses `chat-worker.js` and staff works :)
Now imagine a situation when `main.js` imports 5 different modules including soething from npm, while worker.js includes 5 of the same modules. What is the webpack.config.js magic should be written to put those 5 modules in one single chunk? Not all of those modules are from npm, some from my project, they are from different folders. All my attempts of chunk splitting optimization don't produce workable app. Right now I have to live with chunks which has huge portion of module duplicates because worker imports bunch of staff and the main app imports same staff.
Do I have to change all imports to dynamic? Do I need to do that only in the worker or I have to do that in both places? and after ask webpack to split only async chunks?
Which functions should I use for that? How I should direct webpack to produce particular modules I want into a single chunk?
**Update**
From my current understanding webpack would figure out chunks automatically only if we import same modules dynamically:
`const { fibonacci } = await import(""./fibonacci"")`
If we do so in the worker and in the main app, fibonacci module would be in a separate file.
Is that correct?
But why do we have to do that not only in the worker but also in the main app? Why can't we do `await import()` in the worker while have static `import` in the main app and webpack would understand that?",1,0,0,0,0,0,Exasperation,Frustration,Frustration
Microsoft/TypeScript,pull_request,730153701,2021-10-15 22:24:02,gabritto,"From what I've seen so far in our codebase, other node properties that are there for error reporting only just have a comment saying so 😕","From what I've seen so far in our codebase, other node properties that are there for error reporting only just have a comment saying so 😕",1,0,0,0,0,0,Exasperation,Frustration,😕 -> Frustration
flutter/flutter,issue,947059519,2021-10-19 19:58:02,stevenzhang10133,"Any updates on this? I'm implementing a flutter application with barcode scanners, the soft keyboard on screen is really annoying.","Any updates on this? I'm implementing a flutter application with barcode scanners, the soft keyboard on screen is really annoying.",1,0,0,0,0,0,Exasperation,Frustration,Frustration
flutter/flutter,issue,950524355,2021-10-25 4:47:43,dotupNET,"Any news? The workaround ebove do not work.

```Launching lib/src/dotup_flutter_simulator_examples/main.dart on Linux in debug mode...
/snap/flutter/current/usr/bin/ld: warning: /usr/lib/gcc/x86_64-linux-gnu/11/../../../x86_64-linux-gnu/crt1.o: unsupported GNU_PROPERTY_TYPE (5) type: 0xc0008002
libGL error: MESA-LOADER: failed to open swrast: /lib/x86_64-linux-gnu/libpthread.so.0: version `GLIBC_PRIVATE' not found (required by /snap/flutter/current/usr/lib/x86_64-linux-gnu/dri/../../../../lib/x86_64-linux-gnu/librt.so.1) (search paths /snap/flutter/current/usr/lib/x86_64-linux-gnu/dri, suffix _dri)
libGL error: failed to load driver: swrast
** (dotup_flutter_private_examples:11474): WARNING **: 06:44:46.550: Failed to start Flutter renderer: GL-Kontext kann nicht erstellt werden
[xcb] Unknown sequence number while processing queue
[xcb] Most likely this is a multi-threaded client and XInitThreads has not been called
[xcb] Aborting, sorry about that.
dotup_flutter_private_examples: ../../src/xcb_io.c:269: poll_for_event: Zusicherung »!xcb_xlib_threads_sequence_lost« nicht erfüllt.
Error waiting for a debug connection: The log reader stopped unexpectedly.
Error launching application on Linux.
Exited (sigterm)
```
Is this a snap related issue?

Doctor said:
```flutter doctor -v
[✓] Flutter (Channel stable, 2.5.3, on Ubuntu 21.10 5.13.0-20-generic, locale de_DE.UTF-8)
    • Flutter version 2.5.3 at /home/pullrich/snap/flutter/common/flutter
    • Upstream repository https://github.com/flutter/flutter.git
    • Framework revision 18116933e7 (vor 9 Tagen), 2021-10-15 10:46:35 -0700
    • Engine revision d3ea636dc5
    • Dart version 2.14.4

[✓] Android toolchain - develop for Android devices (Android SDK version 31.0.0)
    • Android SDK at /home/pullrich/Android/Sdk
    • Platform android-31, build-tools 31.0.0
    • Java binary at: /snap/android-studio/115/android-studio/jre/bin/java
    • Java version OpenJDK Runtime Environment (build 11.0.10+0-b96-7249189)
    • All Android licenses accepted.

[✓] Chrome - develop for the web
    • Chrome at google-chrome

[✓] Linux toolchain - develop for Linux desktop
    • clang version 6.0.0-1ubuntu2 (tags/RELEASE_600/final)
    • cmake version 3.10.2
    • ninja version 1.8.2
    • pkg-config version 0.29.1

[✓] Android Studio (version 2020.3)
    • Android Studio at /snap/android-studio/115/android-studio
    • Flutter plugin can be installed from:
      🔨 https://plugins.jetbrains.com/plugin/9212-flutter
    • Dart plugin can be installed from:
      🔨 https://plugins.jetbrains.com/plugin/6351-dart
    • Java version OpenJDK Runtime Environment (build 11.0.10+0-b96-7249189)

[✓] VS Code
    • VS Code at /snap/code/current
    • Flutter extension version 3.27.0

[✓] Connected device (2 available)
    • Linux (desktop) • linux  • linux-x64      • Ubuntu 21.10 5.13.0-20-generic
    • Chrome (web)    • chrome • web-javascript • Google Chrome 80.0.3987.149

```","Any news? The workaround ebove do not work.

[TRIPLE QUOTE].
Is this a snap related issue?

Doctor said:
[TRIPLE QUOTE].",1,0,0,0,0,0,Exasperation,Frustration,Frustration
flutter/flutter,issue,945084673,2021-10-17 10:03:50,Doppelklick,"> Camera plugin is causing the ANR as I can see this on my play console
> Input dispatching timed out (e241af4 org.ubitech.attendance/org.ubitech.attendance.MainActivityWithoutBGService (server) is not responding. Waited 10000ms for MotionEvent)
same problem here
@ubitechdevelopers did you solve it?","[BLOCK QUOTE].
same problem here
@ubitechdevelopers did you solve it?",1,0,0,0,0,0,Exasperation,frustration,
flutter/flutter,pull_request,650628959,2021-06-14 3:19:04,bernaferrari,question: is this the correct approach (will it ever be '')?,question: is this the correct approach (will it ever be '')?,1,0,0,0,0,0,Exasperation,frustration,
angular/angular,issue,913812877,2021-09-06 18:59:31,Totati,What does this do with Angular? You should ask this on stackoverflow.com,What does this do with Angular? You should ask this on stackoverflow.com,1,0,0,0,0,0,Irritaion,Annoyance,
webpack/webpack,issue,878130590,2021-07-12 9:41:32,alexander-akait,@echofriend Please provide reproducible example,[USER] Please provide reproducible example,1,0,0,0,0,0,Irritaion,Annoyance,Mild irritation for not providing exmaples
webpack/webpack,issue,846407390,2021-05-22 13:19:21,alexander-akait,"No bugs here again, you have overlapping in rules, so it works as expected","No bugs here again, you have overlapping in rules, so it works as expected",1,0,0,0,0,0,Irritation,Annoyance,Annoyance
webpack/webpack,issue,859716530,2021-06-11 16:56:49,privatenumber,"As suspected, you didn't follow the specific recommendation [here](https://github.com/webpack/webpack/issues/13372#issuecomment-841598405).
This issue is about [`compiler.intermediateFileSystem = memoryFs`](https://gist.github.com/dmnsgn/4214e9419161c37372ede8c48045ecad#file-run-js-L107) not [working expectedly](https://github.com/webpack/webpack/issues/13372#issuecomment-840125734).","As suspected, you didn't follow the specific recommendation [here]([URL]). 
This issue is about [`compiler.intermediateFileSystem = memoryFs`]([URL]).
 not [working expectedly]([URL]).",1,0,0,0,0,0,Irritation,-,Irritant (for not following recommendation)
Microsoft/TypeScript,issue,912236348,2021-09-03 4:00:50,thetutlage,"I am not saying Yarn 2 is bad. If you zoom out a little bit, then it is so hard to know which trend to follow and which one to ignore.

Let's imagine, the TypeScript team adds a flag to support YarnPnP. Then another tool comes and makes the same argument (the we are better or faster) and then TypeScript cannot say no, as they have already committed in the direction of adding flags.

I have seen this trend a lot less in other more mature ecosystems in comparison to JavaScript

--- 

Also, the arguments should not be considered against something or someone. Yarn is a fantastic tool, created by great people. I am just talking about the idea of adding flags in general","I am not saying Yarn 2 is bad. If you zoom out a little bit, then it is so hard to know which trend to follow and which one to ignore.

Let's imagine, the TypeScript team adds a flag to support YarnPnP. Then another tool comes and makes the same argument (the we are better or faster) and then TypeScript cannot say no, as they have already committed in the direction of adding flags.

I have seen this trend a lot less in other more mature ecosystems in comparison to JavaScript

--- 

Also, the arguments should not be considered against something or someone. Yarn is a fantastic tool, created by great people. I am just talking about the idea of adding flags in general",1,0,0,0,0,0,Irritation,Annoyance,Annoyance (regarding the flags)
Microsoft/TypeScript,pull_request,566522096,2021-01-29 1:35:52,weswigham,"This change is pretty much single-handedly responsible for the .js emit changes in this PR. `Symbol.iterator` and it's ilk aren't ""simple copyable expressions"" since, technically, accessing it could produce side effects (like any other property access). Now... at some point, we added `Identifier`s to `isSimpleCopiableExpression`'s domain (which isn't technically safe, since the identifier may get reassigned between the copied references), so maybe property accesses which only consist of `Identifier`s wouldn't be terribly unreasonable, either. 🤷","This change is pretty much single-handedly responsible for the .js emit changes in this PR. `Symbol.iterator` and it's ilk aren't ""simple copyable expressions"" since, technically, accessing it could produce side effects (like any other property access). Now... at some point, we added `Identifier`s to `isSimpleCopiableExpression`'s domain (which isn't technically safe, since the identifier may get reassigned between the copied references), so maybe property accesses which only consist of `Identifier`s wouldn't be terribly unreasonable, either. 🤷",1,0,0,0,0,0,Irritation,Annoyance,Annoyance
angular/angular,pull_request,622074335,2021-04-28 11:13:58,gkalpak,Does this file really belong to this PR? It seems unrelated 😕,Does this file really belong to this PR? It seems unrelated 😕,1,0,0,0,0,0,Irritation,Annoyance,Annoyance
flutter/flutter,issue,953632693,2021-10-28 8:38:45,mamuseferha,"Hi @misici234, this isn't a flutter framework issue, kindly file the issue here: https://github.com/rafaelsetragni/awesome_notifications/issues

Closing this as it is not a flutter issue.","Hi [USER] this isn't a flutter framework issue, kindly file the issue here: [URL]

Closing this as it is not a flutter issue.",1,0,0,0,0,0,Irritation,Annoyance,Annoyance
Microsoft/TypeScript,issue,955116781,2021-10-30 0:52:33,BobFrankston,"I should add that the reason this is so annoying is the cascading effect of telling me to install tslib and then warning me about settings when I'm trying to get other work done. And then adding injury by not giving me a ""click on this to avoid this message"" button with it all seeming to be tsc related. A very bad UX.","I should add that the reason this is so annoying is the cascading effect of telling me to install tslib and then warning me about settings when I'm trying to get other work done. And then adding injury by not giving me a ""click on this to avoid this message"" button with it all seeming to be tsc related. A very bad UX.",1,0,0,0,0,0,Irritation,Annoyance,Annoyance
flutter/flutter,issue,957359634,2021-11-02 11:39:14,stuartmorgan,"Issues with third-party plugins need to be reported to their developers.

You should verify with the developers that the Firebase background handler is designed to allow calling plugin methods (e.g., isn't using an isolate).","Issues with third-party plugins need to be reported to their developers.

You should verify with the developers that the Firebase background handler is designed to allow calling plugin methods (e.g., isn't using an isolate).",1,0,0,0,0,0,Irritation,Annoyance,Annoyance
Microsoft/TypeScript,issue,899885864,2021-08-16 23:36:46,RyanCavanaugh,"To expedite the triage process, we need everyone to follow the issue template and instructions.
When you clicked ""Create New Issue"", the issue form was pre-populated with a template and some instructions. We need you to read those instructions *completely*, follow them, and then fill in *all* the fields in that template.
We are not able to assist with issues that don't follow the template instructions as they represent a significantly larger amount of work compared to issues which are correctly specified. Thank you for understanding.","To expedite the triage process, we need everyone to follow the issue template and instructions.
When you clicked ""Create New Issue"", the issue form was pre-populated with a template and some instructions. We need you to read those instructions *completely*, follow them, and then fill in *all* the fields in that template.
We are not able to assist with issues that don't follow the template instructions as they represent a significantly larger amount of work compared to issues which are correctly specified. Thank you for understanding.",1,0,0,0,0,0,Irritation,Annoyance,Annoyance (for not following the process)
flutter/flutter,pull_request,683687420,2021-08-05 18:19:44,HansMuller,"takeover => dispose

I understand what you mean by ""takeover"" however it doesn't hurt to be a little more explicit","takeover => dispose

I understand what you mean by ""takeover"" however it doesn't hurt to be a little more explicit",1,0,0,0,0,0,Irritation,Annoyance,Annoyance (over not explanation)
flutter/flutter,issue,949447861,2021-10-22 9:26:04,darshankawar,"@charmoan
Please don't open issue using an issue comment from other issues. If you are facing an issue, please use `new issue` [template](https://github.com/flutter/flutter/issues/new?assignees=&labels=&template=2_bug.md&title=) and provide atleast some of the information asked in it, so that we can properly address the issue.
Closing from here, as no information is provided.","[USER]
Please don't open issue using an issue comment from other issues. If you are facing an issue, please use `new issue` [template]([URL] and provide atleast some of the information asked in it, so that we can properly address the issue.
Closing from here, as no information is provided.",1,0,0,0,0,0,Irritation,Annoyance,Irritated
angular/angular,pull_request,628258049,2021-05-07 14:33:00,petebacondarwin,I blame the autoformatter.,I blame the autoformatter.,1,0,0,0,0,0,Irritation,,Irritation
angular/angular,issue,958395369,2021-11-02 23:22:56,IgorMinar,"Yes. We need to add this test coverage. It's just not ""urgent"". 😐","Yes. We need to add this test coverage. It's just not ""urgent"". 😐",1,0,0,0,0,0,Irritation,,Irritation
webpack/webpack,pull_request,132025439,2017-08-08 20:39:24,TrySound,And here dumb template literal,And here dumb template literal,1,0,0,0,0,0,Irritation,Annoyance,
webpack/webpack,issue,778164465,2021-02-12 12:22:43,alexander-akait,"No need to like it, because the problem on your side, you emit two files (as you can see in the error), it can lead to the problems, but you ignore our issue template so I can't help you, respect time of other developers. The problem can be in a plugin or a loader. The problem can be with invalid usage of assets modules, maybe you real do multiple request which have different casing. Nobody knows.

If you provide how you can reproduce your problem I will show your the problem place and how to fix it.","No need to like it, because the problem on your side, you emit two files (as you can see in the error), it can lead to the problems, but you ignore our issue template so I can't help you, respect time of other developers. The problem can be in a plugin or a loader. The problem can be with invalid usage of assets modules, maybe you real do multiple request which have different casing. Nobody knows.

If you provide how you can reproduce your problem I will show your the problem place and how to fix it.",1,0,0,0,0,0,Irritation,annoyance,
webpack/webpack,issue,797587283,2021-03-12 16:05:44,alexander-akait,Bug without example I can't help,Bug without example I can't help,1,0,0,0,0,0,Irritation,annoyance,
webpack/webpack,issue,821852912,2021-04-17 16:53:05,KaseiHaku,"oh my god, explanation of official documents waste eight hours of me, Why isn't there a case to explain this","oh my god, explanation of official documents waste eight hours of me, Why isn't there a case to explain this",1,0,0,0,0,0,Irritation,annoyance,
webpack/webpack,issue,875342986,2021-07-07 7:02:59,Bikeman868,"Sorry, but this is really dumb. Why would developers want BOM in the middle
of their output when it makes the Javascript unparsable and therefore
unusable.
BOM only makes sense as the first few bytes of a file as stored on disk. It
never makes sense to include BOM in the middle of a file.
This is utter nonsense. If you just don't want to fix it, then just say
that you don't want to fix it. Making up some bogus excuse just makes you
look stupid.
On Mon, Jun 28, 2021 at 3:49 AM Alexander Akait ***@***.***>
wrote:
> Closed #13642 <https://github.com/webpack/webpack/issues/13642>.
>
> —
> You are receiving this because you authored the thread.
> Reply to this email directly, view it on GitHub
> <https://github.com/webpack/webpack/issues/13642#event-4946654278>, or
> unsubscribe
> <https://github.com/notifications/unsubscribe-auth/ABLKRG2F6YJ54MQ7V4URBYLTVBHTDANCNFSM47LYDKSA>
> .
>","Sorry, but this is really dumb. Why would developers want BOM in the middle
of their output when it makes the Javascript unparsable and therefore
unusable.
BOM only makes sense as the first few bytes of a file as stored on disk. It
never makes sense to include BOM in the middle of a file.
This is utter nonsense. If you just don't want to fix it, then just say
that you don't want to fix it. Making up some bogus excuse just makes you
look stupid.
On Mon, Jun 28, 2021 at 3:49 AM Alexander Akait ***@***.***>
wrote:
[BLOCK QUOTE].",1,0,0,0,0,0,Irritation,annoyance,
webpack/webpack,issue,878132440,2021-07-12 9:44:23,alexander-akait,"Please respect time of other developers, we don't know your version/code/configuration/etc, so it is impossible to help","Please respect time of other developers, we don't know your version/code/configuration/etc, so it is impossible to help",1,0,0,0,0,0,Irritation,annoyance,
webpack/webpack,issue,880855658,2021-07-15 16:46:48,alexander-akait,"I don't know why it is hard to use the issue template and provide example how we can reproduce, this will not only make your life easier, but also reduce the time spent trying to guess, and will also save your nerves","I don't know why it is hard to use the issue template and provide example how we can reproduce, this will not only make your life easier, but also reduce the time spent trying to guess, and will also save your nerves",1,0,0,0,0,0,Irritation,annoyance,
angular/angular,issue,883197139,2021-07-20 8:17:18,alvipeo,"Well, if you tried it you'd know.","Well, if you tried it you'd know.",1,0,0,0,0,0,Irritation,annoyance,
webpack/webpack,issue,898442054,2021-08-13 13:02:17,alexander-akait,"Same problem with the same plugin, it is related","Same problem with the same plugin, it is related",1,0,0,0,0,0,Irritation,Annoyance,
webpack/webpack,issue,911494409,2021-09-02 10:12:11,karolyi,"Not sure I understood your answer, much less the reason why you closed this so abruptly.

Would you please elaborate.","Not sure I understood your answer, much less the reason why you closed this so abruptly.

Would you please elaborate.",1,0,0,0,0,0,Irritation,Annoyance,
Microsoft/TypeScript,issue,918861933,2021-09-14 6:52:04,jiriKralovec,"> The recommendation here is to use a public readonly getter and a private/protected backing field.
> > Accessors are symetrical with properties in the type system. anything we do will need to be manifested in the type and expressible on properties. Adding new access modifiers to enable private_set/public_get would increase the complexity of the language and the learning curve, and the value gained from this would not match the added complexity.
I am sorry but this is a rubbish reason. Typescript includes features like private constructors, yet you say that the complexity of different getters/setters is too high and steepens the learning curve. Like somebody mentioned here, `it is hard to make` should not be an argument against a standard in most modern programming languages. Your suggestion to use private/protected is not really helpful either - it makes the code less readable and it adds complexity to it.","[BLOCK QUOTE].
I am sorry but this is a rubbish reason. Typescript includes features like private constructors, yet you say that the complexity of different getters/setters is too high and steepens the learning curve. Like somebody mentioned here, `it is hard to make` should not be an argument against a standard in most modern programming languages. Your suggestion to use private/protected is not really helpful either - it makes the code less readable and it adds complexity to it.",1,0,0,0,0,0,Irritation,Annoyance,
Microsoft/TypeScript,issue,922011519,2021-09-17 18:54:18,andrewbranch,"Hi, thanks for your contribution, but we can't review this because you didn’t follow the contributing instructions in [CONTRIBUTING.md](https://github.com/microsoft/TypeScript/blob/main/CONTRIBUTING.md) or in the PR template:
> Please verify that:
> * [ ] There is an associated issue in the `Backlog` milestone (**required**)
> * [ ] Code is up-to-date with the `main` branch
> * [ ] You've successfully run `gulp runtests` locally
> * [ ] There are new or updated unit tests validating the change","Hi, thanks for your contribution, but we can't review this because you didn’t follow the contributing instructions in [CONTRIBUTING.md]([URL] or in the PR template:
[BLOCK QUOTE].",1,0,0,0,0,0,Irritation,Annoyance,
Microsoft/TypeScript,issue,927812911,2021-09-27 12:12:10,MartinJohns,"https://github.com/microsoft/TypeScript/issues/44336#issuecomment-859070807
You know better than not to fill out the issue template. 🤨","[URL]
You know better than not to fill out the issue template. 🤨",1,0,0,0,0,0,Irritation,Annoyance,
flutter/flutter,issue,945179472,2021-10-17 19:18:02,sm2017,It's anoying me specifically when I want to set it as default value in constructors,It's anoying me specifically when I want to set it as default value in constructors,1,0,0,0,0,0,Irritation,Annoyance,
flutter/flutter,issue,945921257,2021-10-18 15:56:24,stuartmorgan,"Please see flutter.dev/community for pointers to other resources intended for general discussion.

Closing as this is neither a bug report nor feature request for Flutter.","Please see flutter.dev/community for pointers to other resources intended for general discussion.

Closing as this is neither a bug report nor feature request for Flutter.",1,0,0,0,0,0,Irritation,Annoyance,
flutter/flutter,issue,949609573,2021-10-22 13:00:52,darshankawar,@chunfengyao Please provide a complete minimal reproducible code sample that we can directly use or a sample github repo that we can clone.,[USER] Please provide a complete minimal reproducible code sample that we can directly use or a sample github repo that we can clone.,1,0,0,0,0,0,Irritation,Annoyance,
flutter/flutter,issue,954708465,2021-10-29 12:37:11,maheshmnj,"@briankariuki In that case I would advise you to please file a separate issue with the exact steps and logs to reproduce the issue. Because this issue is about existing apps.

Thanks","[USER] In that case I would advise you to please file a separate issue with the exact steps and logs to reproduce the issue. Because this issue is about existing apps.

Thanks",1,0,0,0,0,0,Irritation,Annoyance,
flutter/flutter,issue,957190414,2021-11-02 8:15:19,mamuseferha,"Hi @mevos19
I noticed you used Provider plugin in the sample code. For the issue to be workable, it needs to be reproducible with a [minimal complete reproducible code sample](https://stackoverflow.com/help/minimal-reproducible-example) that doesn’t include 3rd party plugins or complex production code and is properly formatted. Please provide such sample.
Thank you","Hi [USER]
I noticed you used Provider plugin in the sample code. For the issue to be workable, it needs to be reproducible with a [minimal complete reproducible code sample]([URL] that doesn’t include 3rd party plugins or complex production code and is properly formatted. Please provide such sample.
Thank you",1,0,0,0,0,0,Irritation,Annoyance,
webpack/webpack,issue,850856016,2021-05-29 15:59:32,akgupta0777,But this doesn't make sense you actually importing same module dynamically twice in two different javascript files.,But this doesn't make sense you actually importing same module dynamically twice in two different javascript files.,1,0,0,0,0,0,Irritation,Annoyance,
angular/angular,issue,878627732,2021-07-12 22:04:18,webmandman,I added that and re-served the app but still having the same issue.,I added that and re-served the app but still having the same issue.,1,0,0,0,0,0,Irritation,Annoyance,
Microsoft/TypeScript,pull_request,379862876,2020-02-15 23:35:39,JoshuaKGoldberg,😡. Introduced issue thanks to merge conflicts. Will fix...,😡. Introduced issue thanks to merge conflicts. Will fix...,1,0,0,0,0,0,Rage,Anger,Angry
Microsoft/TypeScript,issue,934124997,2021-10-05 7:03:10,msklvsk,Brilliant arguments but I’m afraid nobody is listening. What would it take to bring this to TS team attention again? a petition of some sort?,Brilliant arguments but I’m afraid nobody is listening. What would it take to bring this to TS team attention again? a petition of some sort?,1,0,0,0,0,0,Rage,Fury,Fury -> Anger
Microsoft/TypeScript,issue,932785917,2021-10-02 17:10:51,thetutlage,"This is not the first issue where all this extension thing is causing confusion. One was already been shutdown by Microsoft https://github.com/microsoft/TypeScript/issues/42151
The best part is, out of ignorance the Typescript team thinks its them only who knows better and everyone else is stupid.
This will blow up as more people will start moving to ESM.","This is not the first issue where all this extension thing is causing confusion. One was already been shutdown by Microsoft [URL]
The best part is, out of ignorance the Typescript team thinks its them only who knows better and everyone else is stupid.
This will blow up as more people will start moving to ESM.",1,0,0,0,0,0,Rage,-,Rage
angular/angular,issue,943471475,2021-10-14 15:31:04,JoostK,Could you please share a minimum reproduction?,Could you please share a minimum reproduction?,1,0,0,0,0,0,Irritation,Annoyance,Mild irritation for not providing reproduction
angular/angular,issue,929008257,2021-09-28 9:14:56,sijakret,@waterplea can you provide an example?,[USER] can you provide an example?,1,0,0,0,0,0,Irritaion,Annoyance,Mild annoyance for not providing examples
angular/angular,issue,956549938,2021-11-01 20:06:19,dario-piotrowicz,"I see @AndrewKushnir that is too bad, thank you very much for the update and for running the presubmit  If I can help in any way please let me know :slightly_smiling_face:","I see [USER] that is too bad, thank you very much for the update and for running the presubmit  If I can help in any way please let me know :slightly_smiling_face:",0,1,0,0,0,0,Affection,Love,"Expressing graitude -> Love, Eagerness to help"
Microsoft/TypeScript,issue,895676714,2021-08-10 2:17:56,abetaev,"my bad, didn't look through closed ones.
thanks for the explanation.","my bad, didn't look through closed ones.
thanks for the explanation.",0,1,0,0,0,0,Affection,Love,Expressing graitude -> Love
flutter/flutter,pull_request,717804258,2021-09-28 17:24:09,justinmc,"This is a nice way to wrap up this logic, and good explanation in the comment above 👍 ","This is a nice way to wrap up this logic, and good explanation in the comment above 👍",0,1,0,0,0,0,Affection,Liking,Liking
angular/angular,issue,946629864,2021-10-19 11:28:09,willydee,"@petebacondarwin thanks a lot, that was indeed the problem. Onboarding as a first-time contributor wannabe is apparently not as trivial as expected...","[USER] thanks a lot, that was indeed the problem. Onboarding as a first-time contributor wannabe is apparently not as trivial as expected...",0,1,0,0,0,0,Affection,Love,Thankful -> Love
webpack/webpack,issue,857551496,2021-06-09 9:45:23,dennemark,"The solution via dependencies seems to work! I tried it with yarn within a yarn workspace environment and I did not experience any issues yet. So I see this issue as resolved.
Thanks a lot again @alexander-akait , your explanation was very helpful!","The solution via dependencies seems to work! I tried it with yarn within a yarn workspace environment and I did not experience any issues yet. So I see this issue as resolved. Thanks a lot again [USER] , your explanation was very helpful!",0,1,0,0,0,0,Affection,Love,Gratitude -> Love
angular/angular,issue,898477405,2021-08-13 13:59:43,IgorMinar,"@jnizet great point! Thank you. You are right that the testing components today rely on JIT. Usually not because they are dynamic but because you need the flexibility to declare them inline, usually within functions of a test file as your example shows.

With the right compiler and API modifications we should be able to support this with AOT (thanks to Ivy). This change could be rolled out with an automated migration so nobody has to rewrite their tests.

But as you bring up, this flexibility of testing components means that you could dynamically create a template or modify the component metadata (e.g. use string concat and interpolation to create a unique template for a bunch of components created within a loop that wraps an `it` or `describe`.

This is not the most common pattern but I'd be shocked if some codebases didn't rely on it. I currently don't have a solution for this one. Maybe the composition api could be it, but automated migration from unconstrained TS/JS code that generates a component to a component built using the composition API would be tricky and not 100% reliable.

I do appreciate bringing this up though. This is exactly the kind of feedback we are looking for.","[USER] great point! Thank you. You are right that the testing components today rely on JIT. Usually not because they are dynamic but because you need the flexibility to declare them inline, usually within functions of a test file as your example shows.

With the right compiler and API modifications we should be able to support this with AOT (thanks to Ivy). This change could be rolled out with an automated migration so nobody has to rewrite their tests.

But as you bring up, this flexibility of testing components means that you could dynamically create a template or modify the component metadata (e.g. use string concat and interpolation to create a unique template for a bunch of components created within a loop that wraps an `it` or `describe`.

This is not the most common pattern but I'd be shocked if some codebases didn't rely on it. I currently don't have a solution for this one. Maybe the composition api could be it, but automated migration from unconstrained TS/JS code that generates a component to a component built using the composition API would be tricky and not 100% reliable.

I do appreciate bringing this up though. This is exactly the kind of feedback we are looking for.",0,1,0,0,0,0,Affection,Love,Appreciate -> Grateful -> Love
flutter/flutter,pull_request,696173961,2021-08-25 23:12:53,justinmc,"I'm updating the docs to be more precise and getting rid of the macro, thanks for the suggestion.","I'm updating the docs to be more precise and getting rid of the macro, thanks for the suggestion.",0,1,0,0,0,0,Affection,Love,Appreciate -> Love
webpack/webpack,issue,881739711,2021-07-16 21:56:50,p3x-robot,"yes, jenkins build is successful. thanks for your hard work!","yes, jenkins build is successful. thanks for your hard work!",0,1,0,0,0,0,Affection,Love,Appreciate -> Love
angular/angular,issue,909634074,2021-08-31 21:01:16,dario-piotrowicz,"@petebacondarwin thanks so very much for the approval :smile:
if possible I would love it if @gkalpak could also have another look if possible as he did help a lot in this PR and also I believe he hasn't checked out some of the latest fixes I made :slightly_smiling_face: ( George, if you're just sick of this PR that's fine too, it has been going for a bit :sweat_smile: )","[USER] thanks so very much for the approval :smile:
if possible I would love it if [USER] could also have another look if possible as he did help a lot in this PR and also I believe he hasn't checked out some of the latest fixes I made :slightly_smiling_face: ( George, if you're just sick of this PR that's fine too, it has been going for a bit :sweat_smile: )",0,1,0,0,0,0,Affection,Love,Appreciate -> Love
angular/angular,issue,918961066,2021-09-14 9:06:42,maplion,"@gmaughan This looks promising.  I'll try it out, thank you!","[USER] This looks promising.  I'll try it out, thank you!",0,1,0,0,0,0,Affection,Love,Appreciate -> Love
angular/angular,issue,902198425,2021-08-19 19:54:17,JoostK,If it's unclear what the benefits are then I think closing the PR is the right thing to do at this time. Thanks again for looking into this though! Your contributions have been tremendous 💯,If it's unclear what the benefits are then I think closing the PR is the right thing to do at this time. Thanks again for looking into this though! Your contributions have been tremendous 💯,0,1,0,0,0,0,Affection,Love,Appreciate -> Love
webpack/webpack,issue,864954763,2021-06-21 11:22:13,karlhorky,"No worries, thanks for this!","No worries, thanks for this!",0,1,0,0,0,0,Affection,Love,Appreciate -> Love
webpack/webpack,pull_request,218156913,2018-09-17 17:25:40,RubenVerborgh,"Right, I didn't, as this was originally just a config change :smile:
Thanks for the guidance, will fix.","Right, I didn't, as this was originally just a config change :smile:
Thanks for the guidance, will fix.",0,1,0,0,0,0,Affection,Love,Appreciating -> Love
angular/angular,issue,880169397,2021-07-14 19:59:10,dario-piotrowicz,"PS: I am fan of yours, I love your content out there! :smiley:","PS: I am fan of yours, I love your content out there! :smiley:",0,1,0,0,0,0,Affection,Fondness,Fondness
webpack/webpack,issue,883528050,2021-07-20 16:26:53,dispalt,"And, just confirmed it is totally fixed, wow, thank you @sokra!","And, just confirmed it is totally fixed, wow, thank you [USER]",0,1,0,0,0,0,Affection,Love,Grateful -> Love
Microsoft/TypeScript,issue,943294122,2021-10-14 12:08:17,vilic,"That seems to have fixed the problem, thanks!","That seems to have fixed the problem, thanks!",0,1,0,0,0,0,Affection,Love,Gratitude -> Love
Microsoft/TypeScript,issue,924299099,2021-09-21 19:02:57,FilipeBeck,I liked this suggestion. I think the philosophy of language shouldn't be that uncompromising. We already have `enum` and `namespace` that are outside the rule.,I liked this suggestion. I think the philosophy of language shouldn't be that uncompromising. We already have `enum` and `namespace` that are outside the rule.,0,1,0,0,0,0,Affection,Love,Liking
webpack/webpack,issue,881607953,2021-07-16 17:34:20,p3x-robot,"thanks very much! take care, have a nice weekend!","thanks very much! take care, have a nice weekend!",0,1,0,0,0,0,Affection,Love,Love
Microsoft/TypeScript,issue,915346747,2021-09-08 15:35:34,hi-ogawa,Awesome! Thank you two for the code review and triaging my first PR!,Awesome! Thank you two for the code review and triaging my first PR!,0,1,0,0,0,0,Affection,Love,Love
Microsoft/TypeScript,pull_request,713915307,2021-09-22 12:58:58,hahmadia,Aw thank you so much! I really appreciate that insightful explanation 😄 I now better understand what `assumeTrue` means. Super helpful !!,Aw thank you so much! I really appreciate that insightful explanation 😄 I now better understand what `assumeTrue` means. Super helpful !!,0,1,0,0,0,0,Affection,Love,Thankful
angular/angular,issue,926764796,2021-09-24 16:29:15,alan-agius4,Thanks for your contribution.,Thanks for your contribution.,0,1,0,0,0,0,Affection,Love,Thankful
webpack/webpack,issue,956332608,2021-11-01 15:28:15,vpukhanov,"Thanks so much, this works great 🤗","Thanks so much, this works great 🤗",0,1,0,0,0,0,Affection,Love,Thankful
angular/angular,pull_request,676965014,2021-07-26 21:43:23,dario-piotrowicz,"awesome, I will do that then! thanks a lot! :slightly_smiling_face:","awesome, I will do that then! thanks a lot! :slightly_smiling_face:",0,1,0,0,0,0,Affection,love,Expressing gratitude -> Love
angular/angular,pull_request,692888395,2021-08-20 11:57:30,dario-piotrowicz,:man_facepalming: thanks for noticing this,:man_facepalming: thanks for noticing this,0,1,0,0,0,0,Affection,love,Expressing gratitude -> Love
angular/angular,issue,879458308,2021-07-13 22:56:30,mgechev,Just updated the guide. Thanks for the catch!,Just updated the guide. Thanks for the catch!,0,1,0,0,0,0,Affection,love,Expressing gratitude -> Love
angular/angular,issue,880939197,2021-07-15 19:00:02,petebacondarwin,Thanks! And thank you for taking time to think about this stuff. It is important that we try our best to get it right.,Thanks! And thank you for taking time to think about this stuff. It is important that we try our best to get it right.,0,1,0,0,0,0,Affection,love,Expressing gratitude -> Love
Microsoft/TypeScript,issue,906880454,2021-08-27 2:38:24,Dragonizedpizza,"I didn't know about this, thanks for the help!","I didn't know about this, thanks for the help!",0,1,0,0,0,0,Affection,love,Expressing gratitude -> Love
Microsoft/TypeScript,issue,924292403,2021-09-21 18:55:53,gregbacchus,"Oh ok. Thanks for the explanation. I see that now. I had imagined that if you imported `foo`, you would always transform. If you don't want the extension, don't import. That makes it very straight forward.","Oh ok. Thanks for the explanation. I see that now. I had imagined that if you imported `foo`, you would always transform. If you don't want the extension, don't import. That makes it very straight forward.",0,1,0,0,0,0,Affection,love,Expressing gratitude -> Love
webpack/webpack,issue,940078319,2021-10-11 14:22:28,oles,"Thanks for the tip, @RiZKiT - indeed, it does!

I'm still missing the tabular view as shown [here](https://github.com/webpack/webpack/issues/11716#issuecomment-822779870) though!","Thanks for the tip, [USER] - indeed, it does!

I'm still missing the tabular view as shown [here]([URL] though!",0,1,0,0,0,0,Affection,love,Expressing gratitude -> Love
angular/angular,issue,952994083,2021-10-27 14:35:46,petebacondarwin,🎉 thank you @gkalpak for your determination and brilliance in finding a resolution to this really really annoying issue.,🎉 thank you [USER] for your determination and brilliance in finding a resolution to this really really annoying issue.,0,1,0,0,0,0,Affection,love,Expressing gratitude -> Love
flutter/flutter,issue,956680842,2021-11-01 21:50:22,rydmike,"Wow, thanks @guidezpl! For us that reads ThemeData a lot this is really useful and nice! 💙","Wow, thanks [USER] For us that reads ThemeData a lot this is really useful and nice! 💙",0,1,0,0,0,0,Affection,love,Expressing gratitude -> Love
flutter/flutter,pull_request,648733907,2021-06-09 22:49:04,Piinks,"Awesome! This looks good. Is there a test validating this? There should be a test that verifies we don't end up duplicating a currently showing snackbar when we push a banner, and vice versa in order to validate this logic and make sure we don't regress later. I think once we have that, this is ready to land! 🎉","Awesome! This looks good. Is there a test validating this? There should be a test that verifies we don't end up duplicating a currently showing snackbar when we push a banner, and vice versa in order to validate this logic and make sure we don't regress later. I think once we have that, this is ready to land! 🎉",0,1,0,0,0,0,Affection,Love,
angular/angular,issue,890880185,2021-08-02 9:36:05,gkalpak,"You really don't need to apologize, @dario-piotrowicz. You are doing an amazing job tackling non-trivial problems all over the place 🏋️

##
Regarding the `legacy-unit-tests-saucelabs` job failure: It looks like a flake. I have restarted the job, but don't worry about it for now.","You really don't need to apologize, [USER] You are doing an amazing job tackling non-trivial problems all over the place 🏋️

##
Regarding the `legacy-unit-tests-saucelabs` job failure: It looks like a flake. I have restarted the job, but don't worry about it for now.",0,1,0,0,0,0,Affection,Love,
webpack/webpack,issue,892774210,2021-08-04 15:54:07,deviant310,"God, I really need this feature!","God, I really need this feature!",0,1,0,0,0,0,Longing,-,Longing
flutter/flutter,pull_request,714377866,2021-09-22 23:26:32,HansMuller,It would be nice if one could vary the iconTheme or labelTextStyle based on MaterialState.hovered. It would be OK to leave that out of this PR though.,It would be nice if one could vary the iconTheme or labelTextStyle based on MaterialState.hovered. It would be OK to leave that out of this PR though.,0,1,0,0,0,0,Longing,-,Longing
flutter/flutter,pull_request,741519830,2021-11-02 23:01:30,HansMuller,"It would be nice if color and colorScheme were colorScheme.primary and colorScheme.primaryVariant. We want to encourage developers to use the color scheme.

If this function was defined within the build method, you could refer to two additional local color variables that were based on the colorScheme (like odd,evenItemColor).","It would be nice if color and colorScheme were colorScheme.primary and colorScheme.primaryVariant. We want to encourage developers to use the color scheme.

If this function was defined within the build method, you could refer to two additional local color variables that were based on the colorScheme (like odd,evenItemColor).",0,1,0,0,0,0,Longing,-,would be nice -> Longing
angular/angular,issue,872256203,2021-07-01 13:39:21,aavelyn,"Is there any news on this? I think this is highly relevant for component-based architecture with inputs which can arrive and change at any time. In my case it's almost always to trigger some api call once all input values are present and then whenever either one changes.

My solution is to use two or more local `BehaviorSubjects` and a `combineLatest` to accomplish this behavior.
`BehaviorSubject` for use cases where I need to access its current value synchronously, otherwise a `ReplaySubject(1)` is also fine.

```html
<some-cmp [itemid]=""activeItemId$ | async"" [userId]=""activeUserId$ | async""></some-cmp>
```

```js
@Input() set itemId (id){this.itemId$.next(id)};
@Input() set userId (id){this.userId$.next(id)};

itemId$ = new BehaviourSubject$(null);
userId$ = new BehaviourSubbject$(null);

ngOnInt(){
 combineLatest([
 this.itemId$.pipe(filter(item=>!!item)),
 this.userId$.pipe(filter(item=>!!item))
 ]).pipe(
 debounceTime(10),
 switchMap(...)
 ).subscribe(...)
}
```","Is there any news on this? I think this is highly relevant for component-based architecture with inputs which can arrive and change at any time. In my case it's almost always to trigger some api call once all input values are present and then whenever either one changes.

My solution is to use two or more local `BehaviorSubjects` and a `combineLatest` to accomplish this behavior.
`BehaviorSubject` for use cases where I need to access its current value synchronously, otherwise a `ReplaySubject(1)` is also fine.

[TRIPLE QUOTE].

[TRIPLE QUOTE].",0,1,0,0,0,0,Longing,,Longing (for an update)
angular/angular,pull_request,730397911,2021-10-17 11:16:13,gkalpak,We should also have tests with multiple occurrences of different comments to ensure that all of them are removed.,We should also have tests with multiple occurrences of different comments to ensure that all of them are removed.,0,1,0,0,0,0,Longing,,Longing (to have tests)
flutter/flutter,pull_request,732078161,2021-10-19 17:09:02,Hixie,"would be good to have more information here, e.g. mentioning the argument that you're adding to make these fatal, what kind of thing could be a warning vs just ordinary output, how rare warnings should be, etc.","would be good to have more information here, e.g. mentioning the argument that you're adding to make these fatal, what kind of thing could be a warning vs just ordinary output, how rare warnings should be, etc.",0,1,0,0,0,0,Longing,,Longing
angular/angular,issue,929770672,2021-09-29 2:26:23,s4m0r4m4,"This would be so incredibly helpful. I'm currently running into an issue where there are collisions from a 3rd-party library, but it's not coming from my code so I have to figure out where the collision is coming from. Seeing file names and paths would be awesome!","This would be so incredibly helpful. I'm currently running into an issue where there are collisions from a 3rd-party library, but it's not coming from my code so I have to figure out where the collision is coming from. Seeing file names and paths would be awesome!",0,1,0,0,0,0,Lust,Desire,Wish/Desiring something
angular/angular,issue,886116181,2021-07-24 22:00:54,michaelfaith,Would love to have more documentation on this. Especially handling runtime localization and about building libraries with translations.,Would love to have more documentation on this. Especially handling runtime localization and about building libraries with translations.,0,1,0,0,0,0,Lust,Desire,Desire
webpack/webpack,pull_request,103427515,2017-02-28 10:54:42,sendilkumarn,"I am afraid that it is not possible, since we are using `=>` here the context will change. Either to remove `arrow` or to refer it via `another const/variable`","I am afraid that it is not possible, since we are using `=>` here the context will change. Either to remove `arrow` or to refer it via `another const/variable`",0,0,1,0,0,0,Horror,Fear,Afraid -> Fear
angular/angular,pull_request,600737153,2021-03-24 18:09:20,gkalpak,"Hm...I just realized that currently we don't support linenums when skipping prettify 😱
I think it is fine for now. Maybe log a warning if `getLinenums()` returns anything other than `false` with `language: 'none'`. (In the future, if the need arises, we can add support for linenums.)","Hm...I just realized that currently we don't support linenums when skipping prettify 😱
I think it is fine for now. Maybe log a warning if `getLinenums()` returns anything other than `false` with `language: 'none'`. (In the future, if the need arises, we can add support for linenums.)",0,0,1,0,0,0,Horror,Shock,Shocked (based on emoji)
flutter/flutter,issue,946417006,2021-10-19 6:52:25,danagbemava-nc,"My guess is no, since implementing such a feature can compromise the security of your app and also it could lead to your app being rejected from the store. 

You might think it's a good idea to implement it so it can be used for development, however, since this is a `work-around` you will not control, it'll be easy to forget about it which may lead to your app being rejected. ","My guess is no, since implementing such a feature can compromise the security of your app and also it could lead to your app being rejected from the store. 

You might think it's a good idea to implement it so it can be used for development, however, since this is a `work-around` you will not control, it'll be easy to forget about it which may lead to your app being rejected. ",0,0,1,0,0,0,Horror,Alarm,since implementing such a feature can compromise the security of your app and also it could lead to your app being rejected from the store -> Alarm -> Horror
Microsoft/TypeScript,pull_request,478686004,2020-08-27 20:47:02,DanielRosenwasser,"I have some fears that this won't catch stuff like
```ts
return funcFoo && funcBar && funcFoo(stuff) && funcBar(stuff)
```","I have some fears that this won't catch stuff like
[TRIPLE QUOTE].",0,0,1,0,0,0,Horror,Fear,Fear
Microsoft/TypeScript,issue,904025085,2021-08-23 18:52:49,MartinJohns,"> (e.g. `[...some, ...stuff, 'c', 'b', 'a'].at(-1)` could return `-1`)
Am I missing something here? How could this possibly return `-1`?","[BLOCK QUOTE].
Am I missing something here? How could this possibly return `-1`?",0,0,1,0,0,0,Horror,Shock,Shocked -> Fear
angular/angular,pull_request,710107177,2021-09-16 13:16:14,gkalpak,"And yes, there should be tests 😱 😱 😱","And yes, there should be tests 😱 😱 😱",0,0,1,0,0,0,Horror,Shock,Shocked (based on emoji)
Microsoft/TypeScript,issue,904946264,2021-08-24 20:19:23,andrewbranch,"Thanks! Now if you don’t mind, can you restate your actual behavior and expected behavior in terms of the file names and identifiers used in that repro? I had a little trouble following your hypothetical example.","Thanks! Now if you don’t mind, can you restate your actual behavior and expected behavior in terms of the file names and identifiers used in that repro? I had a little trouble following your hypothetical example.",0,0,1,0,0,0,Nervousness,Uneasiness,Uneasiness -> Fear
flutter/flutter,pull_request,717953293,2021-09-28 20:49:55,justinmc,"I worry about an over-reliance on Actions and Intents when I see ReplaceTextIntent, UpdateSelectionIntent, etc. used here.  Is there a use case for needing those things to be overridable?

What I'm worried about is the increased mental load that a developer working on this part of the codebase has to bear:

  1. I can't be certain who will respond to this Intent, or even whether or not the EditableTextState will receive it, without knowing what overriders are in the widget tree.
  2. These Intents can be invoked from anywhere with the relevant BuildContext.

Do these two features benefit this code in any way?","I worry about an over-reliance on Actions and Intents when I see ReplaceTextIntent, UpdateSelectionIntent, etc. used here.  Is there a use case for needing those things to be overridable?

What I'm worried about is the increased mental load that a developer working on this part of the codebase has to bear:

  1. I can't be certain who will respond to this Intent, or even whether or not the EditableTextState will receive it, without knowing what overriders are in the widget tree.
  2. These Intents can be invoked from anywhere with the relevant BuildContext.

Do these two features benefit this code in any way?",0,0,1,0,0,0,Nervousness,Worry,Worried -> Nervousness
Microsoft/TypeScript,issue,933720391,2021-10-04 17:58:37,FilipeBeck,"@fatcerberus Yes, with `immediate` covering the _used before assigned_ error, it makes more sense. My concern was whether `immediate` would not cover these scenarios.
","[USER] Yes, with `immediate` covering the _used before assigned_ error, it makes more sense. My concern was whether `immediate` would not cover these scenarios.",0,0,1,0,0,0,Nervousness,Worry,Concern
flutter/flutter,issue,948345405,2021-10-21 7:44:30,jiahaog,"Please correct me if I'm wrong – you are using something like https://flutter.dev/docs/development/add-to-app to embed Flutter as a module. In your test, you have a script or something to set up the app and transition to the Flutter screen, after which you want to have code on the host connect to and run the integration test. 

It's not possible to do so without some elaborate hacks. Integration Tests require test code to be built *into* the app under test. It sounds what you could do is create a placeholder Flutter app that hosts the flutter module that you're using, with some mocks to setup the app into a state suitable for testing. Otherwise, you're advised to look for something like https://pub.dev/packages/espresso to test the complete flow.","Please correct me if I'm wrong – you are using something like [URL] to embed Flutter as a module. In your test, you have a script or something to set up the app and transition to the Flutter screen, after which you want to have code on the host connect to and run the integration test. 

It's not possible to do so without some elaborate hacks. Integration Tests require test code to be built *into* the app under test. It sounds what you could do is create a placeholder Flutter app that hosts the flutter module that you're using, with some mocks to setup the app into a state suitable for testing. Otherwise, you're advised to look for something like [URL] to test the complete flow.",0,0,1,0,0,0,Nervousness,Worry,Concern (about the approach)
angular/angular,pull_request,664541822,2021-07-06 13:11:46,petebacondarwin,"So this is a little bit worrying. By making this abstract, the `noImplicitOverride` seems to have no effect on the method in the child class, which sort of defeats the purpose of this compiler setting right? I.e. if the base class removed the abstract method, there would be no indication to update the child class.","So this is a little bit worrying. By making this abstract, the `noImplicitOverride` seems to have no effect on the method in the child class, which sort of defeats the purpose of this compiler setting right? I.e. if the base class removed the abstract method, there would be no indication to update the child class.",0,0,1,0,0,0,Nervousness,Worry,Worried
angular/angular,pull_request,640916222,2021-05-27 19:42:47,josephperrott,My concern was about how we will have non-generated files which import the generated file. And I am worried that its going to make intellisense go crazy,My concern was about how we will have non-generated files which import the generated file. And I am worried that its going to make intellisense go crazy,0,0,1,0,0,0,Nervousness,Worry,Worry
webpack/webpack,issue,783788386,2021-02-23 0:55:23,jscheid,If your analysis is correct @zlk89 then it's breaking any app using SRI and long-term caching (regardless of whether it's using our plugin or some other way to add SRI) so there's little we can do about it...,If your analysis is correct [USER] then it's breaking any app using SRI and long-term caching (regardless of whether it's using our plugin or some other way to add SRI) so there's little we can do about it...,0,0,1,0,0,0,Nervousness,Worry,Worry
Microsoft/TypeScript,pull_request,637164426,2021-05-21 19:13:27,sheetalkamat,"Little concerned about adding and removing watches here.. since this cache is cleared between the open files it seems like we may need to create and remove and again create same kinds of watches over and over.. if there are no watches for that directory .. eg there are no closed script infos for that node_modules folder in any program or something, this may be costly on linux where every recursive directory watching needs to go traverse the directory and create watches since there is no native recurisve watching support...","Little concerned about adding and removing watches here.. since this cache is cleared between the open files it seems like we may need to create and remove and again create same kinds of watches over and over.. if there are no watches for that directory .. eg there are no closed script infos for that node_modules folder in any program or something, this may be costly on linux where every recursive directory watching needs to go traverse the directory and create watches since there is no native recurisve watching support...",0,0,1,0,0,0,Nervousness,Worry,Concern/Worry -> Fear
angular/angular,pull_request,680372454,2021-07-31 15:28:58,IgorMinar,Isn't this a breaking change? Can we get away with it?,Isn't this a breaking change? Can we get away with it?,0,0,1,0,0,0,Nervousness,Worry,Concern/Worry -> Fear
angular/angular,pull_request,717880432,2021-09-28 19:02:30,crisbeto,I guess my concern is that it sets a precedent where somebody could see it and think that it would be fine to use in `core`.,I guess my concern is that it sets a precedent where somebody could see it and think that it would be fine to use in `core`.,0,0,1,0,0,0,Nervousness,Worry,Concern/Worry -> Fear
flutter/flutter,pull_request,738589623,2021-10-28 17:04:29,LongCatIsLooong,https://logs.chromium.org/logs/flutter/buildbucket/cr-buildbucket/8832111037281214753/+/u/run_test.dart_for_web_tests_shard_and_subshard_2/test_stdout#L1916_3 it looks like a legitimate failure,[URL] it looks like a legitimate failure,0,0,1,0,0,0,Nervousness,Worry,Concern/Worry -> Fear
angular/angular,issue,900413308,2021-08-17 15:47:02,crisbeto,I'm still a little concerned that this is basically a one-time warning that can easily be missed by people when they're running the automated migration.,I'm still a little concerned that this is basically a one-time warning that can easily be missed by people when they're running the automated migration.,0,0,1,0,0,0,Nervousness,Worry,Concern/Worry -> Fear
angular/angular,issue,912926657,2021-09-04 7:28:14,th0r,My concern is that more new arrtibutes may appear in  html in the future which potentially may overlap with input names on your already existing components and it may break their behavior.,My concern is that more new arrtibutes may appear in  html in the future which potentially may overlap with input names on your already existing components and it may break their behavior.,0,0,1,0,0,0,Nervousness,Worry,Concern/Worry -> Fear
webpack/webpack,issue,812613958,2021-04-02 16:54:00,alexander-akait,"You should not apply `ModuleConcatenationPlugin` plugin directly, you need use `optimization` options, double usage `ModuleConcatenationPlugin` can break code","You should not apply `ModuleConcatenationPlugin` plugin directly, you need use `optimization` options, double usage `ModuleConcatenationPlugin` can break code",0,0,1,0,0,0,Nervousness,Worry,Concern/Worry -> Fear
flutter/flutter,issue,954581042,2021-10-29 9:11:20,dnfield,It should mean that it would have rejected the existing dill files and just started over from scratch. If not we would have to fix that.,It should mean that it would have rejected the existing dill files and just started over from scratch. If not we would have to fix that.,0,0,1,0,0,0,Nervousness,Worry,Concern/Worrying
flutter/flutter,issue,958138694,2021-11-02 20:23:18,jakemac53,"I am seeing this failure https://ci.chromium.org/ui/p/flutter/builders/try/Linux%20flutter_plugins/16597/overview which looks like a timeout, but I don't have any idea how to go about trying to diagnose that?

It appears to be timing out on a `flutter pub get` in the [android_intent](https://github.com/flutter/plugins/blob/master/packages/android_intent/pubspec.yaml) package?","I am seeing this failure [URL] which looks like a timeout, but I don't have any idea how to go about trying to diagnose that?

It appears to be timing out on a `flutter pub get` in the [android_intent]([URL] package?",0,0,1,0,0,0,Nervousness,Distress,Distress (about the failure)
Microsoft/TypeScript,issue,932519103,2021-10-01 20:09:58,andrewbranch,"FWIW I’ve always wanted this feature, but I’m not confident that a PR would get accepted and I would hate to see you burned by infinite bikeshedding as a first time contributor. If this feature is your passion, don’t let me stop you from implementing it, but be prepared that a PR for an “awaiting more feedback” issue may or may not ever get a proper review. If you are just looking to start contributing to TS anywhere, I would encourage you to search for “help wanted” and “good first issue” labels, where you’re much more likely to get support with a PR from start to finish.","FWIW I’ve always wanted this feature, but I’m not confident that a PR would get accepted and I would hate to see you burned by infinite bikeshedding as a first time contributor. If this feature is your passion, don’t let me stop you from implementing it, but be prepared that a PR for an “awaiting more feedback” issue may or may not ever get a proper review. If you are just looking to start contributing to TS anywhere, I would encourage you to search for “help wanted” and “good first issue” labels, where you’re much more likely to get support with a PR from start to finish.",0,0,1,0,0,0,Nervousness,Worry,Giving warning -> Concern -> Fear
flutter/flutter,pull_request,707599450,2021-09-13 18:55:49,HansMuller,Is this widget really providing enough value to break it out as a building block?,Is this widget really providing enough value to break it out as a building block?,0,0,1,0,0,0,Nervousness,,Nervousness
webpack/webpack,pull_request,159127019,2017-12-30 18:39:28,ooflorent,"I'm having a hard time doing this... Since previous methods were highly dynamic, I'm afraid of breaking anything...","I'm having a hard time doing this... Since previous methods were highly dynamic, I'm afraid of breaking anything...",0,0,1,0,0,0,Nervousness,"distress, worry",
Microsoft/TypeScript,pull_request,492221701,2020-09-21 17:17:19,andrewbranch,This one looks a little weird (there are some others like it in other tests too) 🤔,This one looks a little weird (there are some others like it in other tests too) 🤔,0,0,1,0,0,0,Nervousness,worry,
webpack/webpack,pull_request,506962928,2020-10-17 17:04:16,dudiharush,"Hi sokra and pastak,
I also encountered this problem. Are you going to fix it soon?","Hi sokra and pastak,
I also encountered this problem. Are you going to fix it soon?",0,0,1,0,0,0,Nervousness,worry,
Microsoft/TypeScript,pull_request,533012084,2020-12-01 1:26:07,sandersn,"I'm worried about the precision of 0.0000001. It's probably enough to make it 0.01, since that's smaller than 0.1.","I'm worried about the precision of 0.0000001. It's probably enough to make it 0.01, since that's smaller than 0.1.",0,0,1,0,0,0,Nervousness,worry,
angular/angular,pull_request,640182714,2021-05-26 23:19:10,IgorMinar,do you have to use `any`? it's always concerning when we give up on type safety and add new anys to the code base.,do you have to use `any`? it's always concerning when we give up on type safety and add new anys to the code base.,0,0,1,0,0,0,Nervousness,worry,
Microsoft/TypeScript,pull_request,643425611,2021-06-01 19:34:17,amcasey,"Specifically, I'm less confident in the second commit than the first. AFAICT, it could only return true if a recursive call to itself returned true and all of the recursive base cases returned false.","Specifically, I'm less confident in the second commit than the first. AFAICT, it could only return true if a recursive call to itself returned true and all of the recursive base cases returned false.",0,0,1,0,0,0,Nervousness,worry,
Microsoft/TypeScript,pull_request,670010894,2021-07-14 23:06:00,andrewbranch,"I don’t think this is a sufficient condition. This is a really weird case, because there actually is no symbol for `import.meta`, but because completions works with symbols, it creates a dummy symbol for it on line 1593 (and presumably the same crash happens with `new.target`). The least we can do is keep this kludge private to `completions.ts` and not ask the checker for the type of a completely made-up symbol with literally no context. The checker knows how to get the proper type for `import.meta` and `new.target` from a _node_, so I would suggest making `completions.ts` somehow aware that it needs to use a different method to get the type of these, and able to trace these dummy symbols back to the nodes they came from.","I don’t think this is a sufficient condition. This is a really weird case, because there actually is no symbol for `import.meta`, but because completions works with symbols, it creates a dummy symbol for it on line 1593 (and presumably the same crash happens with `new.target`). The least we can do is keep this kludge private to `completions.ts` and not ask the checker for the type of a completely made-up symbol with literally no context. The checker knows how to get the proper type for `import.meta` and `new.target` from a _node_, so I would suggest making `completions.ts` somehow aware that it needs to use a different method to get the type of these, and able to trace these dummy symbols back to the nodes they came from.",0,0,1,0,0,0,Nervousness,worry,
angular/angular,issue,878523587,2021-07-12 19:08:02,JoostK,"Hmm, that does not reveal anything useful I'm afraid. I'm a bit out of ideas but you may want to try adding `pathMatch: 'full'` to the empty route in the lazy module.","Hmm, that does not reveal anything useful I'm afraid. I'm a bit out of ideas but you may want to try adding `pathMatch: 'full'` to the empty route in the lazy module.",0,0,1,0,0,0,Nervousness,worry,
Microsoft/TypeScript,issue,901297945,2021-08-18 17:30:57,RyanCavanaugh,"There are two separable concerns here:
* Is *syntactically unreachable* code -- code which we can be certain cannot execute -- allowed? That is the only thing that `allowUnreachableCode` speaks to
* What should be done with *type unreachable* code -- code which the type system believes will not execute? That is the realm of `assertNever`
Keeping these concepts separate, rather than conflating them, is the simpler design.","There are two separable concerns here:
* Is *syntactically unreachable* code -- code which we can be certain cannot execute -- allowed? That is the only thing that `allowUnreachableCode` speaks to
* What should be done with *type unreachable* code -- code which the type system believes will not execute? That is the realm of `assertNever`
Keeping these concepts separate, rather than conflating them, is the simpler design.",0,0,1,0,0,0,Nervousness,worry,
angular/angular,issue,928049597,2021-09-27 16:28:01,KeatonTech,@FrederikSchlemmer Not that I know of. Still an open bug for my team,[USER] Not that I know of. Still an open bug for my team,0,0,1,0,0,0,Nervousness,worry,
Microsoft/TypeScript,issue,950371551,2021-10-24 18:26:18,ahejlsberg,"Yeah, that isn't right. The issue here is that we bypass caching of relations for small unions and intersections, but that bypass also causes us to loose a check for deeply nested types that would have stopped the recursion. It used to not matter, but after #41821 it does. We need to revise our logic such that we can bypass caching but still check for deep nesting.","Yeah, that isn't right. The issue here is that we bypass caching of relations for small unions and intersections, but that bypass also causes us to loose a check for deeply nested types that would have stopped the recursion. It used to not matter, but after #41821 it does. We need to revise our logic such that we can bypass caching but still check for deep nesting.",0,0,1,0,0,0,Nervousness,worry,
flutter/flutter,issue,953479661,2021-10-28 3:54:37,duyhungtnn,"> This has fixed on ios 15.1 & macOS Monterey 12

This problem is still happened on macOS Monterey 12.0.1","[BLOCK QUOTE].

This problem is still happened on macOS Monterey 12.0.1",0,0,1,0,0,0,Nervousness,worry,
flutter/flutter,issue,957201597,2021-11-02 8:25:48,dnfield,"It is really bad at maintaining a decent frame rate.
This optimization would likely not help a lot, but could help some. @goderbauer may still have traces","It is really bad at maintaining a decent frame rate.
This optimization would likely not help a lot, but could help some. [USER] may still have traces",0,0,1,0,0,0,Nervousness,worry,
Microsoft/TypeScript,pull_request,539150037,2020-12-09 9:35:07,DanielRosenwasser,"Also a breaking change, right?","Also a breaking change, right?",0,0,1,0,0,0,Nervousness,Worry,Worry about the chang
Microsoft/TypeScript,pull_request,350689381,2019-11-26 11:37:37,weswigham,"I'm not saying we don't want to enable this kind of thing, I'm just saying we have little interest in one-off PnP-specific things, when a more complete approach would render it redundant and allow for more use cases to be filled, and that this model, specifically, follows a pattern that we don't consider particularly usable (we should know, it is similar in setup to our existing ""language service plugin"" architecture that doesn't layer plugins easily, isn't easy to develop for, isn't particularly easy to use, isn't (well) documented, and and was rushed out to support a high pressure request from angular). We've had requests for custom resolver behavior for approximately forever, and would like to do right by those, and _not_ repeat the mistakes we've already made in a different context.","I'm not saying we don't want to enable this kind of thing, I'm just saying we have little interest in one-off PnP-specific things, when a more complete approach would render it redundant and allow for more use cases to be filled, and that this model, specifically, follows a pattern that we don't consider particularly usable (we should know, it is similar in setup to our existing ""language service plugin"" architecture that doesn't layer plugins easily, isn't easy to develop for, isn't particularly easy to use, isn't (well) documented, and and was rushed out to support a high pressure request from angular). We've had requests for custom resolver behavior for approximately forever, and would like to do right by those, and _not_ repeat the mistakes we've already made in a different context.",1,0,1,0,0,0,"Disapproval, Nervousness",worry,
flutter/flutter,issue,954717019,2021-10-29 12:49:43,LasseRosenow,"I myself also think that decoupling the material and also the cupertino library from the flutter framework would be a major benefit for the whole ecosystem. All the libraries get more and more complex just to support legacy m2 styling.. Also things like the m2 snackbar styling are still opt in because of that. 

It currently is quite painful to create a new flutter app, that uses all widgets in its modern styling, as you have to opt into so many things. And also having to fight with all the old m1 properties and major inconsistencies everywhere.

I think having a material library, that is versioned independent from flutter, enabling developers to update the flutter version of old maintenance projects without the need to handle breaking changes in the material library, would be a major benefit for everyone, as it not only would make the life of each maintainer much more easy, as breaking changes do happen over time, but also making the life of everyone else, who wants to have the modern styling so much easier, as the material library package could just have breaking changes following semver etc.

Altogether I would say, especially if we are trying to think long term, the benefits outweigh the costs by far.
So I would very much recommend to fix this rather soon then late, so that we don't have the same conversation again when materail4 arrives :)","I myself also think that decoupling the material and also the cupertino library from the flutter framework would be a major benefit for the whole ecosystem. All the libraries get more and more complex just to support legacy m2 styling.. Also things like the m2 snackbar styling are still opt in because of that. 

It currently is quite painful to create a new flutter app, that uses all widgets in its modern styling, as you have to opt into so many things. And also having to fight with all the old m1 properties and major inconsistencies everywhere.

I think having a material library, that is versioned independent from flutter, enabling developers to update the flutter version of old maintenance projects without the need to handle breaking changes in the material library, would be a major benefit for everyone, as it not only would make the life of each maintainer much more easy, as breaking changes do happen over time, but also making the life of everyone else, who wants to have the modern styling so much easier, as the material library package could just have breaking changes following semver etc.

Altogether I would say, especially if we are trying to think long term, the benefits outweigh the costs by far.
So I would very much recommend to fix this rather soon then late, so that we don't have the same conversation again when materail4 arrives :)",0,0,0,1,0,0,Optimism,Hope,Hopeful
flutter/flutter,pull_request,665593171,2021-07-07 17:58:10,justinmc,"Nice, this is more slick 👍","Nice, this is more slick 👍",0,0,0,1,0,0,Admiration,,Admiration
flutter/flutter,pull_request,738670144,2021-10-28 19:02:02,HansMuller,"The are allowed as identifiers and they're wonderfully short and clear, but OK.","The are allowed as identifiers and they're wonderfully short and clear, but OK.",0,0,0,1,0,0,Admiration,,Admire
angular/angular,pull_request,730474399,2021-10-17 20:47:23,dario-piotrowicz,"Ahhh, yeah I see what you did there :thinking:
Ok thanks a lot :smiley::+1:","Ahhh, yeah I see what you did there :thinking:
Ok thanks a lot :smiley::+1:",0,0,0,1,0,0,Admiration,,Admiring
webpack/webpack,pull_request,161936074,2018-01-17 1:31:48,reergymerej,I agree it is too much.  I was trying to satisfy all the variations in the related issues that came up.  I'll trim it down.,I agree it is too much. I was trying to satisfy all the variations in the related issues that came up. I'll trim it down.,0,0,0,1,0,0,Approval,-,Agreement -> Approval
angular/angular,pull_request,677613305,2021-07-27 16:27:51,zarend,"Bad link 🤦 , here's the correct link https://github.com/ivanwonder/angular/blob/9fbd42b81c5a52dd58fda10866955009008e6cc7/packages/language-service/ivy/test/completions_spec.ts#L232

And yes, I think you're right. The linked test should go to expression completion because it's an `EmptyExpression`, and this test should go to literal completion (i believe 🤞 ). We should keep both tests since they cover a different use case.","Bad link 🤦 , here's the correct link [URL] 

And yes, I think you're right. The linked test should go to expression completion because it's an `EmptyExpression`, and this test should go to literal completion (i believe 🤞 ). We should keep both tests since they cover a different use case.",0,0,0,1,0,0,Approval,-,Agreement -> Approval
Microsoft/TypeScript,pull_request,538857413,2020-12-08 22:31:33,mjbvz,Yes I think this makes sense. We currently don't use the top level symbol name at all,Yes I think this makes sense. We currently don't use the top level symbol name at all,0,0,0,1,0,0,Approval,-,Agreement
angular/angular,pull_request,704774129,2021-09-08 21:05:49,josmar-crwdstffng,"I think we are in agreement.
The doc author should be able to rely on a SME or the tech review (TR) stage to ensure the code example is accurate for the placement in the docs.","I think we are in agreement.
The doc author should be able to rely on a SME or the tech review (TR) stage to ensure the code example is accurate for the placement in the docs.",0,0,0,1,0,0,Approval,-,Agreement
Microsoft/TypeScript,issue,894777854,2021-08-08 10:44:19,olee,I fully agree with @GusBuonv and I think we should try to focus on the actual proposal which I agree would be really nice to have.,I fully agree with [USER] and I think we should try to focus on the actual proposal which I agree would be really nice to have.,0,0,0,1,0,0,Approval,-,Agreement
angular/angular,pull_request,634161745,2021-05-18 8:30:13,devversion,"Yeah, that would sound the most reasonable to me.","Yeah, that would sound the most reasonable to me.",0,0,0,1,0,0,Approval,,Agreement
angular/angular,pull_request,680622885,2021-08-02 2:57:15,JiaLiPassion,"Yes, you are right, I moved the code to comments.","Yes, you are right, I moved the code to comments.",0,0,0,1,0,0,Approval,,Agreement -> Approval
angular/angular,pull_request,699641154,2021-08-31 20:13:12,AndrewKushnir,"Good point, I'm ok keeping it like it's currently implemented. Since it's a part of the testing logic, it has no impact on bundle size, so this optimization is not important.","Good point, I'm ok keeping it like it's currently implemented. Since it's a part of the testing logic, it has no impact on bundle size, so this optimization is not important.",0,0,0,1,0,0,Approval,,Agreement -> Approval
webpack/webpack,pull_request,94509951,2017-01-04 0:06:16,TheLarkInn,Yeah. It feels a bit awkward but if it's okay we can :shipit:,Yeah. It feels a bit awkward but if it's okay we can :shipit:,0,0,0,1,0,0,Approval,-,Approval
webpack/webpack,pull_request,163492136,2018-01-24 9:27:36,sokra,"hmm.. yes, I only moved the code. When this code was written I considered unset module.type for backward-compatibility.","hmm.. yes, I only moved the code. When this code was written I considered unset module.type for backward-compatibility.",0,0,0,1,0,0,Approval,,agreement -> approval
Microsoft/TypeScript,pull_request,443773547,2020-06-22 19:18:46,orta,"Yeah, I agree! Moving","Yeah, I agree! Moving",0,0,0,1,0,0,Approval,,
Microsoft/TypeScript,pull_request,540571706,2020-12-10 23:17:23,andrewbranch,"Sorry, you answered that in the other location—36s to 10s 👍","Sorry, you answered that in the other location—36s to 10s 👍",0,0,0,1,0,0,Approval,,
Microsoft/TypeScript,pull_request,563925168,2021-01-25 17:54:17,sandersn,"Yes, I think this is a good change, because it's preserving the parent indent.","Yes, I think this is a good change, because it's preserving the parent indent.",0,0,0,1,0,0,Approval,,
Microsoft/TypeScript,pull_request,678659480,2021-07-28 21:18:55,dsherret,Good catch! Removed.,Good catch! Removed.,0,0,0,1,0,0,Approval,,
flutter/flutter,pull_request,698673323,2021-08-30 17:30:13,justinmc,Agreed. I cleaned this up a bit and added some comments.,Agreed. I cleaned this up a bit and added some comments.,0,0,0,1,0,0,Approval,,
flutter/flutter,issue,948278997,2021-10-21 5:50:18,jiahaog,Thanks for creating #89045 and #91981! We'd be happy to merge either of these PRs if the comments there have been addressed.,Thanks for creating #89045 and #91981! We'd be happy to merge either of these PRs if the comments there have been addressed.,0,0,0,1,0,0,Approval,,
webpack/webpack,pull_request,181573636,2018-04-15 7:53:57,sokra,"Anyway, the syntax change is fine.","Anyway, the syntax change is fine.",0,0,0,1,0,0,Approval,,
webpack/webpack,pull_request,184104073,2018-04-25 15:29:03,ooflorent,"Absolutely. But since it is the only case where it does not return a string, it is possible to bypass the call and hardcode the result.","Absolutely. But since it is the only case where it does not return a string, it is possible to bypass the call and hardcode the result.",0,0,0,1,0,0,Approval,,
flutter/flutter,pull_request,722511641,2021-10-05 18:34:14,justinmc,"> I'll keep the Intents for now but make them not overridable.

That sounds like a great compromise, thanks.  If we end up needing them to be overridable for your `TextInputClient` work, or someone opens an issue with a good use case or something, then I'm all for opening them up to overriding.

You're right about point no. 2, it is currently possible to look up the EditableTextState and call methods directly on it in a similar way to invoking these Actions.","[BLOCK QUOTE]. 

That sounds like a great compromise, thanks.  If we end up needing them to be overridable for your `TextInputClient` work, or someone opens an issue with a good use case or something, then I'm all for opening them up to overriding.

You're right about point no. 2, it is currently possible to look up the EditableTextState and call methods directly on it in a similar way to invoking these Actions.",0,0,0,1,0,0,"Approval, Zest",Excitement,"Excited, Agreement -> Approval"
angular/angular,pull_request,675815308,2021-07-23 19:16:10,AndrewKushnir,"Ok, thanks for additional info! I was thinking if it makes sense to put some of this info into the comment, so when it's the right time to fix that - there is a context available. Up to you whether it's worth adding that or not :)","Ok, thanks for additional info! I was thinking if it makes sense to put some of this info into the comment, so when it's the right time to fix that - there is a context available. Up to you whether it's worth adding that or not :)",0,0,0,1,0,0,Cheerfulness,Joy,Joy
angular/angular,pull_request,599586487,2021-03-23 13:51:37,kapunahelewong,"Are you planning on adding a note with the live example/download example link? Those are great! Oh! And that reminds me, remember to add your app to the example apps list. (Yay!!!🌈)","Are you planning on adding a note with the live example/download example link? Those are great! Oh! And that reminds me, remember to add your app to the example apps list. (Yay!!!🌈)",0,0,0,1,0,0,Cheerfulness,Happiness,Happy
webpack/webpack,pull_request,186059118,2018-05-04 11:49:37,byzyk,They are quite similar so I thought they can live in the same folder. But it's not a big deal I can create a separate case. Interesting that I did exactly that in the first place but then I thought why not together? 😃,They are quite similar so I thought they can live in the same folder. But it's not a big deal I can create a separate case. Interesting that I did exactly that in the first place but then I thought why not together? 😃,0,0,0,1,0,0,Cheerfulness,Happiness,Happy [based on emoji]
angular/angular,issue,920812499,2021-09-16 11:19:05,gkalpak,"> Unfortunately the new regex doesn't seem to do the trick, I am not too good with regexes but I think that it's because you can't capture the same text twice, so if you have a \""\"" the first "" will be read only once and will not be ""seen"" for the next check
Argh 😠 You're right 😞
OK, how about this:
```diff
function unescapeQuotes(str: string, isQuoted: boolean): string {
- return !isQuoted ? str : str.replace(/(?<=(?:^|[^\\])(?:\\\\)*)\\(['""])/g, '$1');
+ return !isQuoted ? str : str.replace(/((?:^|[^\\])(?:\\\\)*)\\(?=['""])/g, '$1');
}
```
It uses look-ahead (instead of look-behind) and thus should work everywhere (even on IE 😛).","[BLOCK QUOTE]. 

Argh 😠 You're right 😞 
OK, how about this: 
[TRIPLE QUOTE]. 
It uses look-ahead (instead of look-behind) and thus should work everywhere (even on IE 😛).",0,0,0,1,0,0,Cheerfulness,Joy,Joy
webpack/webpack,pull_request,118183745,2017-05-24 7:47:12,naholyr,"I don't know if it's true but 100% spec-compliant have it, MDN documents it, it smells like a standard you can safely count on ;) plus it's way faster than new Promise in all native implementations right now afaik","I don't know if it's true but 100% spec-compliant have it, MDN documents it, it smells like a standard you can safely count on ;) plus it's way faster than new Promise in all native implementations right now afaik",0,0,0,1,0,0,Cheerfulness,Joviality,;) (wink) emoticon -> Joviality
flutter/flutter,pull_request,666577053,2021-07-08 23:27:12,craiglabenz,"I do not like this name, but so far have struggled to come up with something very good. `controlsBuilder` was aptly named 😆 ","I do not like this name, but so far have struggled to come up with something very good. `controlsBuilder` was aptly named 😆",0,0,0,1,0,0,Cheerfulness,Amusement,Amused
angular/angular,pull_request,657493931,2021-06-23 22:08:44,dario-piotrowicz,"ah ok, great to hear! thanks! :smiley:","ah ok, great to hear! thanks! :smiley:",0,0,0,1,0,0,Cheerfulness,,Cheerfulness
angular/angular,pull_request,615446895,2021-04-18 20:04:08,JoostK,Yes and no 😁 The Babel plugin is available as an export from `@angular/compiler-cli/linker/babel` and that can be integrated into e.g. a custom Webpack build by registering the linker as a plugin for [`babel-loader`](https://webpack.js.org/loaders/babel-loader/). We're planning to add a new export for easier creation of the linker plugin.,Yes and no 😁 The Babel plugin is available as an export from `@angular/compiler-cli/linker/babel` and that can be integrated into e.g. a custom Webpack build by registering the linker as a plugin for [`babel-loader`]([URL] We're planning to add a new export for easier creation of the linker plugin.,0,0,0,1,0,0,Cheerfulness,Glee,Glee
flutter/flutter,pull_request,644163389,2021-06-02 17:09:05,HansMuller,That's attention to detail :-),That's attention to detail :-),0,0,0,1,0,0,Cheerfulness,Joy,Joy
angular/angular,pull_request,731287799,2021-10-18 20:20:57,dario-piotrowicz,"my idea was indeed to be very loose in the tests and basically just match that anything except spaces (and newlines and whatnot) and just test that aspect in a specific decidated test
(got inspiration from here: https://github.com/angular/angular/pull/42608#discussion_r677604804 :stuck_out_tongue_winking_eye: :heart_eyes:)
but it depends on what regexes we end up using I guess, I think you are suggesting that each type of comment can have different newlines etc. so we should indeed test that in the various tests?
I sort of liked the idea of here basically just testing the actual content of what we get and not caring about spacing whatsoever, but if you don't think it's the right approach (meaning that we can't just delegate it all to one or a small number of dedicated tests) I can be more strict in the various tests as you're suggesting :slightly_smiling_face: also if we're talking about strictness, would you reckon we can also try to match the exact number of spaces instead of using `*` or would that make the tests far too brittle?","my idea was indeed to be very loose in the tests and basically just match that anything except spaces (and newlines and whatnot) and just test that aspect in a specific decidated test
(got inspiration from here: [URL] :stuck_out_tongue_winking_eye: :heart_eyes:)
but it depends on what regexes we end up using I guess, I think you are suggesting that each type of comment can have different newlines etc. so we should indeed test that in the various tests?
I sort of liked the idea of here basically just testing the actual content of what we get and not caring about spacing whatsoever, but if you don't think it's the right approach (meaning that we can't just delegate it all to one or a small number of dedicated tests) I can be more strict in the various tests as you're suggesting :slightly_smiling_face: also if we're talking about strictness, would you reckon we can also try to match the exact number of spaces instead of using `*` or would that make the tests far too brittle?",0,0,0,1,0,0,Cheerfulness,Happiness,Overall positive/contentment sentiment -> Happy
webpack/webpack,pull_request,102399432,2017-02-22 7:39:16,sendilkumarn,"right 👍
I was confused and though that it was mutated below. Thanks 👍","right 👍
I was confused and though that it was mutated below. Thanks 👍",0,0,0,1,0,0,Cheerfulness,Satisfaction,Satisfied (by the explantion)
Microsoft/TypeScript,issue,900508165,2021-08-17 17:49:16,jimmywarting,"hmm, no. but that was a useful settings i have been looking for, thx
It solved the autocompletion when writing but it didn't solve the auto converter (quick fix) (turning cjs to esm)
importModuleSpecifierEnding should always be on when writing ESM modules","hmm, no. but that was a useful settings i have been looking for, thx
It solved the autocompletion when writing but it didn't solve the auto converter (quick fix) (turning cjs to esm)
importModuleSpecifierEnding should always be on when writing ESM modules",0,0,0,1,0,0,Cheerfulness,Delight,Useful settings -> Delight -> Cheerfulness
angular/angular,pull_request,719400900,2021-09-30 13:22:58,IgorMinar,awesome! I'm glad you know about this trick.,awesome! I'm glad you know about this trick.,0,0,0,1,0,0,Cheerfulness,happiness,
angular/angular,pull_request,721339145,2021-10-04 12:58:36,gkalpak,"Ha! I knew you would say that 😛
No, it's not necessary to use backticks. Happy to switch to string concatenation.","Ha! I knew you would say that 😛
No, it's not necessary to use backticks. Happy to switch to string concatenation.",0,0,0,1,0,0,Cheerfulness,amusement,
Microsoft/TypeScript,issue,934364646,2021-10-05 12:28:28,nkappler,"> And although it's been mentioned multiple times, I just want to quickly reiterate how this would *improve* type safety as the compiler would then force us to use optional chaining, as opposed to when `any` is used, and all bets are off.
I think you can't mention this often enough, as it outweighs all the counter-arguments in my opinion... 😅","[BLOCK QUOTE].
I think you can't mention this often enough, as it outweighs all the counter-arguments in my opinion... 😅",0,0,0,1,0,0,Cheerfulness,amusement,
flutter/flutter,issue,951260230,2021-10-25 19:58:34,CaseyHillers,"Sounds good.

In addition, we want to CP https://github.com/flutter/engine/pull/29213 (to hide the web engine framework tests on release branches)","Sounds good.

In addition, we want to CP [URL] (to hide the web engine framework tests on release branches)",0,0,0,1,0,0,Cheerfulness,Joy,
Microsoft/TypeScript,pull_request,477622875,2020-08-26 22:24:37,andrewbranch,It was a problem with the harness spreading away non-enumerable properties from `compilerOptions`. Fixed 👍,It was a problem with the harness spreading away non-enumerable properties from `compilerOptions`. Fixed 👍,0,0,0,1,0,0,Contentment,-,Content
Microsoft/TypeScript,pull_request,615400191,2021-04-18 13:34:43,tiagovtristao,"I did look into it initially, but wasn't sure whether it would be the best place to put it. However, I tried moving the code there, and it still works as expected, so I think it should be fine :-)","I did look into it initially, but wasn't sure whether it would be the best place to put it. However, I tried moving the code there, and it still works as expected, so I think it should be fine :-)",0,0,0,1,0,0,Contentment,-,"Content, Smiley emoticon"
Microsoft/TypeScript,pull_request,711354723,2021-09-17 21:14:30,armanio123,"I think I prefer that to show the shorthand it must be only `boolean` and braces for everything else. This is true for a type `boolean | string` for example, which will use braces as well.

Nonetheless, I think there's a argument for adding as little as possible, as in the case of if _any_ of the types is boolean. If you feel this is a better approach I'm don't mind changing it.","I think I prefer that to show the shorthand it must be only `boolean` and braces for everything else. This is true for a type `boolean | string` for example, which will use braces as well.

Nonetheless, I think there's a argument for adding as little as possible, as in the case of if _any_ of the types is boolean. If you feel this is a better approach I'm don't mind changing it.",0,0,0,1,0,0,Contentment,-,Contentment
angular/angular,issue,900670275,2021-08-17 22:21:46,anandtiwary,"Got it.. Thanks for your reply. This is my first PR to angular, so i am facing some tooling related issues. Let me fix those and upload a new commit.","Got it.. Thanks for your reply. This is my first PR to angular, so i am facing some tooling related issues. Let me fix those and upload a new commit.",0,0,0,1,0,0,Contentment,-,Contentment
angular/angular,pull_request,712921549,2021-09-21 10:49:44,gkalpak,"Fair enough :smiley:
How about:
```suggestion
To achieve this, the Angular service worker follows these guidelines:
```","Fair enough :smiley:
How about:
[TRIPLE QUOTE].",0,0,0,1,0,0,Contentment,,Contentment
angular/angular,pull_request,716071659,2021-09-25 17:02:53,devversion,"good point. Not sure if it's worth updating the VE code, but could probably do that instead of having the comment here 🤷‍♂️","good point. Not sure if it's worth updating the VE code, but could probably do that instead of having the comment here 🤷‍♂️",0,0,0,1,0,0,Contentment,,good point -> Contentment
Microsoft/TypeScript,pull_request,696040967,2021-08-25 19:12:37,amcasey,"I'm pretty sure it was drive-by. I assume your change doesn't introduce a new usage of realpath, so we should be fine.","I'm pretty sure it was drive-by. I assume your change doesn't introduce a new usage of realpath, so we should be fine.",0,0,0,1,0,0,Contentment,,so we should be fine -> Contentment
angular/angular,issue,939521570,2021-10-10 17:34:47,criskrzysiu,"I would say this is good expected behavior, If You want to validate if the input value is a numeric add a validator for it (custom or pattern with proper regex)","I would say this is good expected behavior, If You want to validate if the input value is a numeric add a validator for it (custom or pattern with proper regex)",0,0,0,1,0,0,Contentment,,
angular/angular,issue,891150456,2021-08-02 16:11:42,galczo5,"Ok, I'll need few more days, the results I got during manual tests with chrome performance profiles are very inconsistent.
In fact, I didn't reproduce the results from Friday.

I'm going to push the upgrade into our automatic performance tests. It'll take some time but should give us better results.
It's hard to believe that after few months of investigation it works as it should 😄

I'll let you know after the automatic tests end.","Ok, I'll need few more days, the results I got during manual tests with chrome performance profiles are very inconsistent.
In fact, I didn't reproduce the results from Friday.

I'm going to push the upgrade into our automatic performance tests. It'll take some time but should give us better results.
It's hard to believe that after few months of investigation it works as it should 😄

I'll let you know after the automatic tests end.",0,0,0,1,0,0,Contentment,,
Microsoft/TypeScript,pull_request,676986657,2021-07-26 22:29:58,andrewbranch,"That seems totally plausible to me; not sure if there’s some reason why it’s not implemented like that. I’d be open to that, but would want to bring in a couple other reviewers to help think about edge case implications of it.","That seems totally plausible to me; not sure if there’s some reason why it’s not implemented like that. I’d be open to that, but would want to bring in a couple other reviewers to help think about edge case implications of it.",0,0,0,1,0,0,Optimism,Eagerness,Eagerness
flutter/flutter,issue,950559742,2021-10-25 6:07:19,darshankawar,"@JesseCodeBones 
This currently seems to be a limitation of the framework to work properly with UiAutomatorViewer, as mentioned in the original linked [issue](https://github.com/flutter/flutter/issues/32062). I suggest you to share your findings in the linked issue for better tracking.

","[USER] This currently seems to be a limitation of the framework to work properly with UiAutomatorViewer, as mentioned in the original linked [issue]([URL] I suggest you to share your findings in the linked issue for better tracking.",0,0,0,1,0,0,Optimism,-,Optimistic
flutter/flutter,issue,948634666,2021-10-21 13:46:54,rami-a,"> > /cc @perclasson @rami-a for flutter_gallery
> 
> Any updates on this, can we resume Dart sdk rolls ?

I updated the tests repo to point to a newer gallery commit and I think/hope that solves the problem (as those properties are no longer referenced in that file at all now)","[BLOCK QUOTE]. 

I updated the tests repo to point to a newer gallery commit and I think/hope that solves the problem (as those properties are no longer referenced in that file at all now)",0,0,0,1,0,0,Optimism,Hope,Hope/Optimism
webpack/webpack,pull_request,548054130,2020-12-23 16:59:41,wh0,that might be useful to improve. but could you describe the perf impact of getting the source here? my expectation is that originalSource is a RawSource that already had the file in memory from when we parsed it in the first place,that might be useful to improve. but could you describe the perf impact of getting the source here? my expectation is that originalSource is a RawSource that already had the file in memory from when we parsed it in the first place,0,0,0,1,0,0,Optimism,Hope,Hopeful (to improve something)
webpack/webpack,issue,797505949,2021-03-12 13:57:23,roddypratt,"> Sorry, won't fix, without example we can't help you
Understood. Will try and make a minimal example.","[BLOCK QUOTE].
Understood. Will try and make a minimal example.",0,0,0,1,0,0,Optimism,Eagerness,Eagerness
angular/angular,issue,918949272,2021-09-14 8:52:04,petebacondarwin,@stefan-schweiger - we are currently working on a potential design that will be put out as an RFC in the not-too-distant future.,[USER] - we are currently working on a potential design that will be put out as an RFC in the not-too-distant future.,0,0,0,1,0,0,Optimism,Excitement,"Excitement, Optimism"
angular/angular,pull_request,723625587,2021-10-06 19:48:36,petebacondarwin,I assume that you will go through and tidy up all this commented out stuff before merging?,I assume that you will go through and tidy up all this commented out stuff before merging?,0,0,0,1,0,0,Optimism,Hope,Hope
Microsoft/TypeScript,pull_request,568241412,2021-02-02 0:39:47,rbuckton,"Unfortunately, this isn't enough to get the correct emit, but its the right start. I tinkered with your PR locally and I think I have a solution that builds off of what you've done here. Essentially, you need to move the `isCallChain` test out of the call to `updateCallExpression` and call `updateCallChain` in its own branch. In the new `updateCallChain` branch, you ""move"" the `?.` from the original call (i.e., `this.#x?.()`) to the new property access for `.call` needed to preserve the correct `this` (i.e., `_a?.call(this)`).

I can see if I can push an update to your PR with this change shortly.","Unfortunately, this isn't enough to get the correct emit, but its the right start. I tinkered with your PR locally and I think I have a solution that builds off of what you've done here. Essentially, you need to move the `isCallChain` test out of the call to `updateCallExpression` and call `updateCallChain` in its own branch. In the new `updateCallChain` branch, you ""move"" the `?.` from the original call (i.e., `this.#x?.()`) to the new property access for `.call` needed to preserve the correct `this` (i.e., `_a?.call(this)`).

I can see if I can push an update to your PR with this change shortly.",0,0,0,1,0,0,Optimism,Eagerness,
angular/angular,pull_request,721970150,2021-10-05 7:39:28,petebacondarwin,This was actually causing this test-case not to be executed!,This was actually causing this test-case not to be executed!,0,0,0,1,0,0,Relief,Relief,Relief
angular/angular,issue,877454860,2021-07-09 21:03:32,Nabeelhassan,"This issue was fix in https://github.com/angular/angular/pull/42701.
It can be closed now.","This issue was fix in [URL]
It can be closed now.",0,0,0,1,0,0,Relief,Relief,Relief
angular/angular,pull_request,657225871,2021-06-23 15:33:16,AndrewKushnir,You are right! I think it's ok to keep as it as it's a standard thing that we do across the repo. Thanks for the clarification.,You are right! I think it's ok to keep as it as it's a standard thing that we do across the repo. Thanks for the clarification.,0,0,0,1,0,0,Relief,,Relief
angular/angular,pull_request,742048484,2021-11-03 15:17:04,josmar-crwdstffng,"@petebacondarwin Thank you for the clarification.
I removed the redirect and the test for the redirect.
I will reach out to discuss this more as time permits.","[USER] Thank you for the clarification.
I removed the redirect and the test for the redirect.
I will reach out to discuss this more as time permits.",0,0,0,1,0,0,Relief,,Relief
webpack/webpack,issue,785457713,2021-02-24 23:17:31,PAkerstrand,Cheers! Just noticed the same bug myself,Cheers! Just noticed the same bug myself,0,0,0,1,0,0,Relief,,Relief
angular/angular,pull_request,497805162,2020-09-30 21:15:58,atscott,"You should either pass both the `id` and `ngRouterPageId` in here and modify the state inside the function or do both of them outside the function and not modify state here at all. The half and half nature is a bit awkward right now. I think the first option is nicer: 
```suggestion
  private setBrowserUrl(url: UrlTree, replaceUrl: boolean, routerIds: {navigationId: number, ngRouterPageId: number}, state: {[key: string]:
```","You should either pass both the `id` and `ngRouterPageId` in here and modify the state inside the function or do both of them outside the function and not modify state here at all. The half and half nature is a bit awkward right now. I think the first option is nicer: 
[TRIPLE QUOTE].",0,0,0,1,0,0,Zest,Enthusiasm,Enthusiasm (to help)
webpack/webpack,issue,902826193,2021-08-20 16:53:48,roninjin10,"@alexander-akait
This is awesome news! Could you link to the implementation or discussion of this feature?","[USER]
This is awesome news! Could you link to the implementation or discussion of this feature?",0,0,0,1,0,0,Zest,Excitement,Excitement
Microsoft/TypeScript,issue,919325378,2021-09-14 16:43:06,a-tarasyuk,@andrewbranch I think your review will be helpful 😄,[USER] I think your review will be helpful 😄,0,0,0,1,0,0,Zest,Excitement,Excitement
Microsoft/TypeScript,issue,937034549,2021-10-06 20:06:57,JacobLey,"I made a similar comment in the recreation README but worth mentioning here.
My usage of `yargs` is simply because it is the first package I ran into with this issue while testing out 4.5 beta. It is a very popular package so I suspect this issue could/would pop up for many users when 4.5 is officially released.
If my diagnosis is correct, this is by no means an issue with `yargs` itself, and could be recreated with any other package that:
1) Uses package.json `exports` field
2) Exports a file under some path (not just root/index)
3) Does not include native typings and relies on something like @types","I made a similar comment in the recreation README but worth mentioning here.
My usage of `yargs` is simply because it is the first package I ran into with this issue while testing out 4.5 beta. It is a very popular package so I suspect this issue could/would pop up for many users when 4.5 is officially released.
If my diagnosis is correct, this is by no means an issue with `yargs` itself, and could be recreated with any other package that:
1) Uses package.json `exports` field
2) Exports a file under some path (not just root/index)
3) Does not include native typings and relies on something like [USER]",0,0,0,1,0,0,Zest,Zeal,Zeal
webpack/webpack,pull_request,247166036,2019-01-11 16:00:46,glenjamin,"Personally I'd extract this into a variable or a local helper function - or maybe just add a comment, so it's clear that the reason for this is to check for case sensitivity on the filesystem","Personally I'd extract this into a variable or a local helper function - or maybe just add a comment, so it's clear that the reason for this is to check for case sensitivity on the filesystem",0,0,0,1,0,0,Zest,enthusiasm,trying to help by offering an opinion
Microsoft/TypeScript,pull_request,645206496,2021-06-04 0:08:53,amcasey,"To share it across more than one affected file, it would have to be on the state. I'm going to try updating it in parallel with `seenAffectedFiles`.","To share it across more than one affected file, it would have to be on the state. I'm going to try updating it in parallel with `seenAffectedFiles`.",0,0,0,1,0,0,Zest,enthusiasm,
Microsoft/TypeScript,pull_request,714376542,2021-09-22 23:22:48,andrewbranch,"I was initially tempted to do something overly clever for this, but I suspected that some sort of state machine would be harder to read/understand than collapsing the state into a horrible nest of if/else blocks. But I'm open to suggestions on how to make this more elegant (looking at you @sandersn)","I was initially tempted to do something overly clever for this, but I suspected that some sort of state machine would be harder to read/understand than collapsing the state into a horrible nest of if/else blocks. But I'm open to suggestions on how to make this more elegant (looking at you [USER]",0,0,0,1,0,0,Zest,enthusiasm,
flutter/flutter,pull_request,716885741,2021-09-27 17:07:54,justinmc,"Would it be any cleaner if this method were added to [TextLayoutMetrics](https://github.com/flutter/flutter/blob/master/packages/flutter/lib/src/services/text_layout_metrics.dart)?

The goal of that class is to simplify things by providing a read-only interface instead of the full RenderEditable. You probably have to use RenderEditable anyway though, so maybe it's not worth it here. Just wanted to bring it up.","Would it be any cleaner if this method were added to [TextLayoutMetrics]([URL]

The goal of that class is to simplify things by providing a read-only interface instead of the full RenderEditable. You probably have to use RenderEditable anyway though, so maybe it's not worth it here. Just wanted to bring it up.",0,0,0,1,0,0,Zest,enthusiasm,
webpack/webpack,issue,855192149,2021-06-05 6:22:59,XiaofengXie16,"@MaxusAdmin No problem, I am glad I can help.","[USER] No problem, I am glad I can help.",0,0,0,1,0,0,Zest,enthusiasm,
webpack/webpack,issue,864956198,2021-06-21 11:24:33,karlhorky,"Oh nice!! I've seen that syntax floating around, wanting to try it for a while 🙌","Oh nice!! I've seen that syntax floating around, wanting to try it for a while 🙌",0,0,0,1,0,0,Zest,enthusiasm,
angular/angular,issue,899508459,2021-08-16 13:24:54,spike-rabbit,"Sorry for my long response time. Here is my suggestion for the API modifications:
I would add a new field to NgUpdate:
`potentialUpdateAvailalbe: Observable<PotentialUpdateAvailableEvent>` .
This should meet the `a new version has been detected to exist (but is not available to use yet)` and `a new version starts downloading` event. At least for me it looks there is no need to differentiate as downloading starts immediately after the potential update was detected.
Same is for `a new version finishes downloading` which is basically the same as `a new version is available to be activated`.
**Regarding @TheParad0X comment:**
I guess sticking to Promises is fine here as Observables would require a call to `.subscribe()`. But I can agree on adding a meaningful return value. I would prefer a signature like this:
`checkForUpdate(): Promise<UpdateAvailableEvent | NoUpdateAvailableEvent | UpdateFailedEvent>`. Throwing an error in case of failure would force applications to catch it which would be definitely a breaking change.
And for `activateUpdate` it could look like this: `activateUpdate(): Promise<UpdateActivatedEvent | ActivationFailedEvent>`.
TBH I am not sure if returning the events is the best way here. If an error is thrown in case of failure, returning a `boolean` value would be possible as well.
@gkalpak WDYT?","Sorry for my long response time. Here is my suggestion for the API modifications:
I would add a new field to NgUpdate:
`potentialUpdateAvailalbe: Observable<PotentialUpdateAvailableEvent>` .
This should meet the `a new version has been detected to exist (but is not available to use yet)` and `a new version starts downloading` event. At least for me it looks there is no need to differentiate as downloading starts immediately after the potential update was detected.
Same is for `a new version finishes downloading` which is basically the same as `a new version is available to be activated`.
**Regarding [USER] comment:**
I guess sticking to Promises is fine here as Observables would require a call to `.subscribe()`. But I can agree on adding a meaningful return value. I would prefer a signature like this:
`checkForUpdate(): Promise<UpdateAvailableEvent | NoUpdateAvailableEvent | UpdateFailedEvent>`. Throwing an error in case of failure would force applications to catch it which would be definitely a breaking change.
And for `activateUpdate` it could look like this: `activateUpdate(): Promise<UpdateActivatedEvent | ActivationFailedEvent>`.
TBH I am not sure if returning the events is the best way here. If an error is thrown in case of failure, returning a `boolean` value would be possible as well.
@gkalpak WDYT?",0,0,0,1,0,0,Zest,enthusiasm,
angular/angular,issue,908719849,2021-08-30 21:41:03,gkalpak,"I certainly won't get to it any time soon, so feel free to submit a PR :wink: I'll be happy to review and help with questions.","I certainly won't get to it any time soon, so feel free to submit a PR :wink: I'll be happy to review and help with questions.",0,0,0,1,0,0,Zest,enthusiasm,
angular/angular,issue,924047643,2021-09-21 14:31:54,aikidave,"Thank you, @aran-nakayama! My team is looking into this!","Thank you, [USER] My team is looking into this!",0,0,0,1,0,0,Zest,enthusiasm,
flutter/flutter,issue,951777341,2021-10-26 9:58:55,mvanbeusekom,"Perfect thank you, I know enough to start testing. I will keep you up to date on my findings.","Perfect thank you, I know enough to start testing. I will keep you up to date on my findings.",0,0,0,1,0,0,Zest,enthusiasm,
flutter/flutter,issue,952407485,2021-10-26 23:29:41,Hixie,"@obitodarky it looks like you didn't have a chance to get back and investigate the issues mentioned above. I'm going to close this PR since it's not ready for review, but we are in general very interested in contributions so if you ever get back to it please don't hesitate to submit a new PR! Thanks!","[USER] it looks like you didn't have a chance to get back and investigate the issues mentioned above. I'm going to close this PR since it's not ready for review, but we are in general very interested in contributions so if you ever get back to it please don't hesitate to submit a new PR! Thanks!",0,0,0,1,0,0,Zest,enthusiasm,
angular/angular,issue,952947872,2021-10-27 13:46:35,iRealNirmal,"@petebacondarwin can you assign this ticket to me, I can help in this.","[USER] can you assign this ticket to me, I can help in this.",0,0,0,1,0,0,Zest,enthusiasm,
Microsoft/TypeScript,pull_request,739537325,2021-10-29 21:20:43,gabritto,"that's awesome, I've been needing this for a while","that's awesome, I've been needing this for a while",0,0,0,1,0,0,Zest,excitement,
flutter/flutter,pull_request,685326480,2021-08-09 16:04:30,Piinks,"I've had a think over the weekend and I have another idea for opting in.

@cedvdb thanks for the input! I think the goal is to give folks time to migrate to the new default first before making the final switch.","I've had a think over the weekend and I have another idea for opting in.

@cedvdb thanks for the input! I think the goal is to give folks time to migrate to the new default first before making the final switch.",0,0,0,1,0,0,Zest,ENTHUSIASM,
Microsoft/TypeScript,issue,926755938,2021-09-24 16:15:11,delucis,"I’m not trying to be difficult here — I do get that this is kind of supported and I’m just pushing for a slightly cleaner/simpler/more shareable way of doing this, so I totally get if there’s no bandwidth for something like this.","I’m not trying to be difficult here — I do get that this is kind of supported and I’m just pushing for a slightly cleaner/simpler/more shareable way of doing this, so I totally get if there’s no bandwidth for something like this.",0,0,0,1,0,0,"Zest
",Enthusiasm,Enthusiasm
angular/angular,pull_request,712202685,2021-09-20 14:08:27,aikidave,"I have a plan to do some additional work on these topics; your efforts are making that work much easier, @dario-piotrowicz !

As the merge conflict caused you to revert these sentences back to their original form, I'm fine if we leave them as is. Let's not have perfect be the enemy of good!","I have a plan to do some additional work on these topics; your efforts are making that work much easier, [USER] ! 

As the merge conflict caused you to revert these sentences back to their original form, I'm fine if we leave them as is. Let's not have perfect be the enemy of good!",0,0,0,1,0,0,"Zest
",Enthusiasm,Happy/Enthusiasm
angular/angular,issue,895954471,2021-08-10 11:34:06,asemikolenov,"Adding this component in bootstrap is my stupid mistake. I remove CheckComponent from this example, and it is worked! Thanks!","Adding this component in bootstrap is my stupid mistake. I remove CheckComponent from this example, and it is worked! Thanks!",0,1,0,1,0,0,"Affection, Relief",Love,"Expressing graitude -> Love, Relief"
flutter/flutter,issue,954259800,2021-10-28 22:03:38,maks,"Apologies, I should have been more specific with my comment. What I meant to say is that Flutter plugins (and even pure Dart packages) using FFI are in need of being able to detect a hot-restart as much as plugin's using platform channels.

Given this is a development-time only issue, I would be happy with as simple a mechanism as possible. 

The effect I'm trying to fix is that I'm making use of a native library (eg. C, Rust, etc) which holds one or more resources (eg. sockets, bluetooth, audio etc) which need to be released on stop. On Linux desktop as an example, this happens if the hosting OS process is destroyed during debugging when the Flutter app is stopped, but does not happen during a hot-restart. I have to be honest and admit I don't know the details of what happens during a Dart hot-restart, but it seems to be that the running Isolate(s?) is killed and then started again? Any how, the effect is that Dart side references to the native library are lost, while the native library continues to run, potentially on its own thread(s).

To fix the above, I would request having some sort of lifecycle sync callback that can be registered by an app to be called prior to hot-restart taking place. This would allow me as the app author the chance to call any required `close()/destroy()/stop()`, etc on native libraries (or for that matter platform channel plugins) that I'm using to have them cleanup their resource usage. This then doesn't impact or require changes from existing native libraries as they would be expected to already be providing some sort of cleanup resources API and platform channel plugins do not need to be aware of this API, its just something a plugin user knows to make use of in order 

I know this can potentially block hot-restart but as the app author I will have had to explicitly regsiter for this callback and then do something to block that callback completing so thats on me as the app author, plus I've already experienced existing bugs that cause hot-restarts to stall so its not something that would block dev work, but it would at least give app authors that are making use of such native libraries and platform channel plugins the effective use of hot-restart again.

Ideally I would expect this being done upstream in Dart because hot-restart is a Dart mechanism and there is an already [an issue for it](https://github.com/dart-lang/sdk/issues/42679) but I understand that pure Dart usage is a niche usage compared to Flutter so I would be happy just for a Flutter specific implementation.","Apologies, I should have been more specific with my comment. What I meant to say is that Flutter plugins (and even pure Dart packages) using FFI are in need of being able to detect a hot-restart as much as plugin's using platform channels.

Given this is a development-time only issue, I would be happy with as simple a mechanism as possible. 

The effect I'm trying to fix is that I'm making use of a native library (eg. C, Rust, etc) which holds one or more resources (eg. sockets, bluetooth, audio etc) which need to be released on stop. On Linux desktop as an example, this happens if the hosting OS process is destroyed during debugging when the Flutter app is stopped, but does not happen during a hot-restart. I have to be honest and admit I don't know the details of what happens during a Dart hot-restart, but it seems to be that the running Isolate(s?) is killed and then started again? Any how, the effect is that Dart side references to the native library are lost, while the native library continues to run, potentially on its own thread(s).

To fix the above, I would request having some sort of lifecycle sync callback that can be registered by an app to be called prior to hot-restart taking place. This would allow me as the app author the chance to call any required `close()/destroy()/stop()`, etc on native libraries (or for that matter platform channel plugins) that I'm using to have them cleanup their resource usage. This then doesn't impact or require changes from existing native libraries as they would be expected to already be providing some sort of cleanup resources API and platform channel plugins do not need to be aware of this API, its just something a plugin user knows to make use of in order 

I know this can potentially block hot-restart but as the app author I will have had to explicitly regsiter for this callback and then do something to block that callback completing so thats on me as the app author, plus I've already experienced existing bugs that cause hot-restarts to stall so its not something that would block dev work, but it would at least give app authors that are making use of such native libraries and platform channel plugins the effective use of hot-restart again.

Ideally I would expect this being done upstream in Dart because hot-restart is a Dart mechanism and there is an already [an issue for it](https://github.com/dart-lang/sdk/issues/42679) but I understand that pure Dart usage is a niche usage compared to Flutter so I would be happy just for a Flutter specific implementation.",0,0,1,1,0,0,"Optimism, Nervousness","Worry, Hope","Worrying/Concern, Optimism"
flutter/flutter,issue,944895023,2021-10-16 10:35:55,Jamminroot,"Hey guys, any update on this problem? Or is it still not triaged\prioritized? Wondering because not just this is a concerning problem for anyone who actually develops desktop application with Flutter, but also a major fun killer - knowing that your app will end up draining quite a lot of RAM is really discouraging","Hey guys, any update on this problem? Or is it still not triaged\prioritized? Wondering because not just this is a concerning problem for anyone who actually develops desktop application with Flutter, but also a major fun killer - knowing that your app will end up draining quite a lot of RAM is really discouraging",0,0,0,0,1,0,Disappointment,-,Discouraging -> Sad
webpack/webpack,issue,781475801,2021-02-18 16:39:38,alexander-akait,"@jasongrout yep, bug :disappointed: Feel free to send a fix","[USER] yep, bug :disappointed: Feel free to send a fix",0,0,0,0,1,0,Disappoinment,,
webpack/webpack,pull_request,162276817,2018-01-18 8:39:01,sokra,"Still not happy with this. To make the warning cache correctly, it has to be in `module.warnings`, but I will try changing it myself.","Still not happy with this. To make the warning cache correctly, it has to be in `module.warnings`, but I will try changing it myself.",0,0,0,0,1,0,Disappoinment,,
webpack/webpack,issue,880859726,2021-07-15 16:52:58,alexander-akait,"unfortunately there can be many problems here, I cannot help without repo :disappointed:","unfortunately there can be many problems here, I cannot help without repo :disappointed:",0,0,0,0,1,0,Disappoinment,,
webpack/webpack,issue,881899653,2021-07-17 13:31:28,alexander-akait,"Let's close, temporary reverted :disappointed: will be added late again","Let's close, temporary reverted :disappointed: will be added late again",0,0,0,0,1,0,Disappoinment,,
angular/angular,issue,902964228,2021-08-20 21:21:07,dario-piotrowicz,"@gkalpak here we are! :smile: :tada:
But actually.... eslint seems to not handling very well the large amount of files to check here, and it is so much slower than tslint in this instance... whilst this check takes tslint around 40 seconds on my machine, eslint takes around 4 minutes.... :disappointed:
(and you can see I am ignoring all possible files except the ts ones)
This is rather unfortunate... but I guess it would still make sense to move away from the deprecates tslint.... what do you think?","[USER] here we are! :smile: :tada:
But actually.... eslint seems to not handling very well the large amount of files to check here, and it is so much slower than tslint in this instance... whilst this check takes tslint around 40 seconds on my machine, eslint takes around 4 minutes.... :disappointed:
(and you can see I am ignoring all possible files except the ts ones)
This is rather unfortunate... but I guess it would still make sense to move away from the deprecates tslint.... what do you think?",0,0,0,0,1,0,Disappoinment,,
webpack/webpack,issue,853732431,2021-06-03 9:34:19,Lunok,"> 
> 
> Try to remove:
> 
> ```
> .addRule([{
> 
> }])
> ```
> 
> You can't have empty rule

Thank you for your answer, this parameter was just a test, i forgot to remove it in my post. It doesn't fix the problem. I will open a new topic in the webpack-encore repo.","[BLOCK QUOTE]. 

Thank you for your answer, this parameter was just a test, i forgot to remove it in my post. It doesn't fix the problem. I will open a new topic in the webpack-encore repo.",0,0,0,0,1,0,Disappointment,-,Disappointment
angular/angular,issue,877513580,2021-07-09 23:53:31,DmitryEfimenko,"well, that's very disappointing","well, that's very disappointing",0,0,0,0,1,0,Disappointment,-,Disappointment
angular/angular,issue,877601095,2021-07-10 9:00:54,fxck,"Well, that's a disappointing decision. I don't at all agree with the reasoning, you **already** coupled Angular with rxjs years ago and kinda left those actually utilizing it in the middle of the road, refusing to address the pain points for years until finally giving up altogether.

I'm not moving away from Angular, I'm way too deep in, but man, it's sad to see what has become of this framework (and I've been here since the early alphas!), the excitement is all but gone. I can't remember the last release that actually improved developer quality of life. I really hope that at some point Angular will at least provide enough extension points to properly integrate features such as this one without having to resolve to hackarounds.","Well, that's a disappointing decision. I don't at all agree with the reasoning, you **already** coupled Angular with rxjs years ago and kinda left those actually utilizing it in the middle of the road, refusing to address the pain points for years until finally giving up altogether.

I'm not moving away from Angular, I'm way too deep in, but man, it's sad to see what has become of this framework (and I've been here since the early alphas!), the excitement is all but gone. I can't remember the last release that actually improved developer quality of life. I really hope that at some point Angular will at least provide enough extension points to properly integrate features such as this one without having to resolve to hackarounds.",0,0,0,0,1,0,Disappointment,,Disappointed
webpack/webpack,issue,799353751,2021-03-15 11:44:24,alexander-akait,"@sokra I accidentally rewrite your changes using `force`, sorry :disappointed:","[USER] I accidentally rewrite your changes using `force`, sorry :disappointed:",0,0,0,0,1,0,Disappointment,,Disappointment
webpack/webpack,issue,846514267,2021-05-23 6:53:02,nazar-pc,"Apparently a breaking change in `webpack-dev-server`, which is still in beta :disappointed:","Apparently a breaking change in `webpack-dev-server`, which is still in beta :disappointed:",0,0,0,0,1,0,Disappointment,,Disappointment
angular/angular,issue,881922682,2021-07-17 16:27:11,JoostK,This doesn't reproduce for me anymore (in v12),This doesn't reproduce for me anymore (in v12),0,0,0,0,1,0,Disappointment,,Disappointment
angular/angular,pull_request,719501069,2021-09-30 15:04:54,devversion,for some reason clang-format wants it that way 😞 I'm extracting the input into a variable to make this more readable.,for some reason clang-format wants it that way 😞 I'm extracting the input into a variable to make this more readable.,0,0,0,0,1,0,Disappointment,displeasure,
angular/angular,issue,881783714,2021-07-17 0:27:40,alxhub,"I don't think we want to expose Angular's management of styles as a public API, unfortunately.","I don't think we want to expose Angular's management of styles as a public API, unfortunately.",0,0,0,0,1,0,Disappointment,,
Microsoft/TypeScript,issue,942594430,2021-10-13 18:23:49,mjbvz,Closing this due to lack of additional feedback since it was opened,Closing this due to lack of additional feedback since it was opened,0,0,0,0,1,0,Disappointment,,
webpack/webpack,issue,859244125,2021-06-11 3:55:43,ceokemuscorp,I already see what I did wrong.,I already see what I did wrong.,0,0,0,0,1,0,Neglect,-,Humility -> Neglect
Microsoft/TypeScript,issue,940149931,2021-10-11 15:52:57,HarsheetKakar,"I was actually working on it, sorry I forgot to mention that earlier","I was actually working on it, sorry I forgot to mention that earlier",0,0,0,0,1,0,Neglect,,Neglect
angular/angular,issue,924203784,2021-09-21 17:30:45,ad-el,Thank you for your reply. So did I an implementation mistake and is it not a bug? Is it possible to lazy load many modules by other lazy loaded module?,Thank you for your reply. So did I an implementation mistake and is it not a bug? Is it possible to lazy load many modules by other lazy loaded module?,0,0,0,0,1,0,Neglect,,Neglect
angular/angular,pull_request,691563103,2021-08-18 20:00:23,dario-piotrowicz,"ahhh ok.... sorry I wasn't sure what OOC stood for and thought it was Out Of Context, in a sense like ""what are you doing? you shouldn't do stuff like that!"" :sweat_smile: (google didn't help as that was one of the first results I got :sweat_smile:)
I finally got that it stands for Out Of Curiosity (sorry, not sure how I totally got my wires crossed :sweat_smile: )
When I see your ""OOC""s now I won't have to be scared anymore! :rofl:","ahhh ok.... sorry I wasn't sure what OOC stood for and thought it was Out Of Context, in a sense like ""what are you doing? you shouldn't do stuff like that!"" :sweat_smile: (google didn't help as that was one of the first results I got :sweat_smile:)
I finally got that it stands for Out Of Curiosity (sorry, not sure how I totally got my wires crossed :sweat_smile: )
When I see your ""OOC""s now I won't have to be scared anymore! :rofl:",0,0,0,0,1,0,Neglect,Embarrassment,Sorrow -> Sad
Microsoft/TypeScript,issue,904080551,2021-08-23 20:03:16,DanielRosenwasser,Even that was a little bit off - the real example should use a heterogeneous array and not discuss literal types. I guess taking notes during the discussion can throw me off a bit. 😅,Even that was a little bit off - the real example should use a heterogeneous array and not discuss literal types. I guess taking notes during the discussion can throw me off a bit. 😅,0,0,0,0,1,0,Neglect,embarassment,
angular/angular,pull_request,694289939,2021-08-23 20:35:19,dario-piotrowicz,"damn, sorry I missed the last line of your comment, and indeed thought I fixed this one! sorry!!!!! :bow:","damn, sorry I missed the last line of your comment, and indeed thought I fixed this one! sorry!!!!! :bow:",0,0,0,0,1,0,Neglect,"embarassment, guilt",
flutter/flutter,pull_request,715806314,2021-09-24 17:57:54,rami-a,"Sorry, I forgot to use the 80 chars in my own suggestion, should be:

```suggestion
 /// If the elevation is 0, the [Scaffold]'s body will be pushed down by the
 /// MaterialBanner when used with [ScaffoldMessenger].
```","Sorry, I forgot to use the 80 chars in my own suggestion, should be:

[TRIPLE QUOTE].",0,0,0,0,1,0,Neglect,,
webpack/webpack,issue,857618908,2021-06-09 11:33:34,xccjk,"Sorry, forgot to provide babel configuration information

.babelrc

```
{
 ""presets"": [""@babel/preset-env"", ""@babel/preset-react""],
 ""plugins"": [
 ""@babel/plugin-transform-runtime"",
 ""@babel/plugin-proposal-object-rest-spread"",
 ""@babel/plugin-syntax-dynamic-import"",
 [""@babel/plugin-proposal-decorators"", { ""legacy"": true }],
 ""@babel/plugin-proposal-class-properties"",
 ""@babel/plugin-proposal-optional-chaining"",
 ""@babel/plugin-proposal-nullish-coalescing-operator"",
 ""lodash"",
 [
 ""import"",
 {
 ""libraryName"": ""antd"",
 ""libraryDirectory"":""es"",
 // ""style"": ""css""
 ""style"": true
 }
 ]
 ]
}

```","Sorry, forgot to provide babel configuration information

.babelrc

[TRIPLE QUOTE].",0,0,0,0,1,0,Neglect,,
webpack/webpack,pull_request,179120668,2018-04-04 12:26:50,sokra,"Good idea, but sadly we can't use any dependency, since the setup script runs before dependencies are installed.","Good idea, but sadly we can't use any dependency, since the setup script runs before dependencies are installed.",0,0,0,0,1,0,Sadness,Melancholy,Melancholy
flutter/flutter,pull_request,662638379,2021-07-01 23:01:40,LongCatIsLooong,Ah sorry I thought `ScaleUpdateDetails` was constructed in `_update` nvm.,Ah sorry I thought `ScaleUpdateDetails` was constructed in `_update` nvm.,0,0,0,0,1,0,Sadness,Sorrow,Sad
Microsoft/TypeScript,issue,900881965,2021-08-18 7:21:05,Odonno,"Sorry, I made a mistake when writing my previous message. Trying to import the `<Footer />` component using `CTRL`+`.` shortcut.","Sorry, I made a mistake when writing my previous message. Trying to import the `<Footer />` component using `CTRL`+`.` shortcut.",0,0,0,0,1,0,Sadness,Sorrow,Sad
flutter/flutter,issue,956861248,2021-11-01 23:18:58,RobertHeim,"Unfortunately, we have reports that the proposed workaround does not work on all samsungs. So we have a higher demand on a solution for the core issue.","Unfortunately, we have reports that the proposed workaround does not work on all samsungs. So we have a higher demand on a solution for the core issue.",0,0,0,0,1,0,Sadness,Sorrow,Sad
angular/angular,pull_request,708565798,2021-09-14 19:24:09,dario-piotrowicz,"yes.... sorry I honestly was unsure what to do about those... because the can be before a line staring at a certain column and ending after a line ending with a different one...
I think I'll just put them with the same number of spaces regarding on the next/previous line.... does that sound ok? :sweat:","yes.... sorry I honestly was unsure what to do about those... because the can be before a line staring at a certain column and ending after a line ending with a different one...
I think I'll just put them with the same number of spaces regarding on the next/previous line.... does that sound ok? :sweat:",0,0,0,0,1,0,Sadness,Sorrow,Sorry -> Sad
flutter/flutter,issue,948617527,2021-10-21 13:27:37,Aulig,"> 
> 
> > But I haven't tested that. Or is that what you already tried Alex?
> 
> @Aulig correct, I tried a number of variations including adding the `.setAllowFileAccess(true)` as a chained call to the `webViewBuilder` (as your snippet shows). If I downgrade back to `1.0.7` (the version I was at before trying to upgrade to `2.1.1`) the fix works.
> 
> I'll have to bump the version 1 by 1 to try and identify the specific bump of the `webview_flutter` package that broke this fix unless anybody else has ideas..

I see, that's unfortunate. I think I forked off version 2.0.2, which works for me. So you can start your search there if you'd like. Good luck!","> [BLOCK QUOTE].

I see, that's unfortunate. I think I forked off version 2.0.2, which works for me. So you can start your search there if you'd like. Good luck!",0,0,0,0,1,0,Sadness,Sorrow,Unfortunate -> Sad
angular/angular,pull_request,676961343,2021-07-26 21:36:17,dario-piotrowicz,PS: who and why decided to allow keyframes to be strings??? :sob:,PS: who and why decided to allow keyframes to be strings??? :sob:,0,0,0,0,1,0,Sadness,,:sob: -> Crying -> Sad
webpack/webpack,pull_request,174042796,2018-03-13 8:14:10,sokra,Let's ignore this for now and take care of this when finished the other problems.,Let's ignore this for now and take care of this when finished the other problems.,0,0,0,0,1,0,Sadness,Defeat,Defeat (regarding sth)
angular/angular,issue,918947322,2021-09-14 8:49:37,stefan-schweiger,Is this still on the horizon for Angular 13? I haven't seen any PR related to this as of yet and nothing in the current next releases.,Is this still on the horizon for Angular 13? I haven't seen any PR related to this as of yet and nothing in the current next releases.,0,0,0,0,1,0,Sadness,Despair,Despair
flutter/flutter,issue,951763456,2021-10-26 9:39:54,ya332,"Patiently waiting for any updates..

One idea that I had was to add AdSense to an empty HTML page and then add Flutter app to the html page. Would that work? Or would the html page get rejected due to lack of content because AdSense would ignore the Flutter app?","Patiently waiting for any updates..

One idea that I had was to add AdSense to an empty HTML page and then add Flutter app to the html page. Would that work? Or would the html page get rejected due to lack of content because AdSense would ignore the Flutter app?",0,0,0,0,1,0,Sadness,Despair,Despair
webpack/webpack,pull_request,177303565,2018-03-27 4:11:32,ronkorving,"Doh. Sorry for wasting your time.
I will update now, and move on to the test suite. That may take a few days as I'm quite busy atm, but I'll get there.","Doh. Sorry for wasting your time.
I will update now, and move on to the test suite. That may take a few days as I'm quite busy atm, but I'll get there.",0,0,0,0,1,0,Sadness,,Sadness
flutter/flutter,pull_request,643205227,2021-06-01 15:19:29,jonahwilliams,"I don't really understand this test. isn't ""Your example app code"" the phrase you want to see?","I don't really understand this test. isn't ""Your example app code"" the phrase you want to see?",0,0,0,0,1,0,Sadness,,Sadness
Microsoft/TypeScript,pull_request,688404293,2021-08-13 10:14:49,elibarzilay,Bah! Sorry -- fixed. (Dusty keyboard...),Bah! Sorry -- fixed. (Dusty keyboard...),0,0,0,0,1,0,Sadness,,Sadness
Microsoft/TypeScript,pull_request,734835543,2021-10-22 20:49:22,DanielRosenwasser,"We don't try to infer type predicate signatures - users always have to write them out deliberately, and can't rely on contextual types.
But even if we did rely on contextual types, we have another issue with class members not using them https://github.com/microsoft/TypeScript/issues/23911 😢","We don't try to infer type predicate signatures - users always have to write them out deliberately, and can't rely on contextual types.
But even if we did rely on contextual types, we have another issue with class members not using them [URL] 😢",0,0,0,0,1,0,Sadness,,Sadness
angular/angular,issue,877560568,2021-07-10 4:12:16,satanTime,You broke my heart,You broke my heart,0,0,0,0,1,0,Sadness,,Sadness
angular/angular,issue,953249434,2021-10-27 19:37:42,JoostK,Unfortunately this was pulled from v12 due to CI breakages and is not actually in 12.2.12; #43965 is pending for v12.,Unfortunately this was pulled from v12 due to CI breakages and is not actually in 12.2.12; #43965 is pending for v12.,0,0,0,0,1,0,Sadness,,Sadness
flutter/flutter,issue,961343762,2021-11-04 19:16:32,Aristidios,"```
% flutter upgrade
Flutter is already up to date on channel master
Flutter 2.3.0-17.0.pre.418 • channel master • https://github.com/Aristidios/flutter.git
```
Ok sorry but why do i get this?

how do i get my Flutter SDK updated to current version ?","[TRIPLE QUOTE].
Ok sorry but why do i get this?

how do i get my Flutter SDK updated to current version ?",0,0,0,0,1,0,Sadness,,Sadness
angular/angular,pull_request,667362075,2021-07-10 17:06:57,gkalpak,Nit: Order import alphabetically (although import order is already a little messed up here 😓).,Nit: Order import alphabetically (although import order is already a little messed up here 😓).,0,0,0,0,1,0,Sadness,,Sadness
Microsoft/TypeScript,issue,908876916,2021-08-31 3:56:06,ishowta,"Sorry, the mapped type was not relevant to this problem, so I removed it to simplify problem. (`BaseTheme & Record<string, unknown` => `BaseTheme`)","Sorry, the mapped type was not relevant to this problem, so I removed it to simplify problem. (`BaseTheme & Record<string, unknown` => `BaseTheme`)",0,0,0,0,1,0,Sadness,,Sadness
Microsoft/TypeScript,pull_request,551068675,2021-01-03 23:29:40,DanielRosenwasser,This one actually seems kind of unfortunate.,This one actually seems kind of unfortunate.,0,0,0,0,1,0,Sadness,sorrow,
flutter/flutter,pull_request,708737406,2021-09-14 23:52:00,justinmc,"Yes, sorry for the confusion!","Yes, sorry for the confusion!",0,0,0,0,1,0,Sadness,,
angular/angular,issue,884477798,2021-07-21 20:28:36,waterplea,"Yeah, I do, sorry. Busy days + vacations season 🙂","Yeah, I do, sorry. Busy days + vacations season 🙂",0,0,0,0,1,0,Sadness,,
flutter/flutter,issue,948038798,2021-10-20 21:09:23,rami-a,"There isn't any guidance for this from Material unfortunately. It does seem like a tricky problem to solve.

An alternative could be building something custom with a dropdown menu that only shows the allowed times for hours/minutes.","There isn't any guidance for this from Material unfortunately. It does seem like a tricky problem to solve.

An alternative could be building something custom with a dropdown menu that only shows the allowed times for hours/minutes.",0,0,0,0,1,0,Sadness,,
angular/angular,issue,919041284,2021-09-14 10:56:55,gkalpak,"Unfortunately, there is not much we can help with without getting more info. It is unclear how the app is set up and what might be causing the problem (or even what exactly the problem is). For example, how is the server configured, how is the ServiceWorker configured, how is routing configured, etc.

BTW, you can easily check what the ServiceWorker puts in cache after you visit the app, by opening the browser's DevTools, going to the `Application` tab and looking under `Cache Storage`.

##
I am going to close this issue, since there is no clear indication of a problem with Angular and the issue is not actionable in its current state. Feel free to continue the discussion below, though.

Also, happy to re-open and investigate if you can provide a minimal reproduction of the problem.","Unfortunately, there is not much we can help with without getting more info. It is unclear how the app is set up and what might be causing the problem (or even what exactly the problem is). For example, how is the server configured, how is the ServiceWorker configured, how is routing configured, etc.

BTW, you can easily check what the ServiceWorker puts in cache after you visit the app, by opening the browser's DevTools, going to the `Application` tab and looking under `Cache Storage`.

##
I am going to close this issue, since there is no clear indication of a problem with Angular and the issue is not actionable in its current state. Feel free to continue the discussion below, though.

Also, happy to re-open and investigate if you can provide a minimal reproduction of the problem.",0,0,0,0,1,0,"Sadness, Shame",Guilt,Sad/Guilt (about not being able to help)
webpack/webpack,issue,838585224,2021-05-11 14:33:51,alexander-akait,"I don't understand your problem, `args` is `Record<string, any>`, you can use `const myMode = args['mode'] as Configuration['mode']`","I don't understand your problem, `args` is `Record<string, any>`, you can use `const myMode = args['mode'] as Configuration['mode']`",0,0,0,0,1,0,Shame,Regret,don't understand your problem -> Regret
webpack/webpack,issue,946751412,2021-10-19 13:57:37,alexander-akait,Do you understand that it is impossible in some cases or can lead to increase size of bundle?,Do you understand that it is impossible in some cases or can lead to increase size of bundle?,0,0,0,0,1,0,Shame,Regret,Regret
webpack/webpack,issue,796698161,2021-03-11 12:22:28,alexander-akait,"Answer above, sorry without any more information we can't fix it, anyway feel free to feedback, if you provide reproducible test repo I will look and answer your about the problem, won't fix right now, sorry again","Answer above, sorry without any more information we can't fix it, anyway feel free to feedback, if you provide reproducible test repo I will look and answer your about the problem, won't fix right now, sorry again",0,0,0,0,1,0,Shame,Regret,Regret
webpack/webpack,issue,953883814,2021-10-28 14:09:24,alexander-akait,"@vankop We still not support this for `library: 'module'`..., but we are already close","[USER] We still not support this for `library: 'module'`..., but we are already close",0,0,0,0,1,0,Shame,Regret,Regret
Microsoft/TypeScript,issue,934544746,2021-10-05 16:02:51,amcasey,@sledorze Sorry for the frustrating experience. I can't make any promises but of course this will be considered as we draw up the iteration plan for the next release.,[USER] Sorry for the frustrating experience. I can't make any promises but of course this will be considered as we draw up the iteration plan for the next release.,0,0,0,0,1,0,Shame,,
Microsoft/TypeScript,issue,909227603,2021-08-31 13:15:51,fabioDMFerreira,"Any chance of having the json file resolve even if it doesn't have the extension?
I have an external dependency that didn't specify the extension. I think it should be a concern of the developer to pay attention to the collisions. Preferably, the typescript compiler should warn about the collisions, but I'm not sure about the performance/development implications of this.","Any chance of having the json file resolve even if it doesn't have the extension?
I have an external dependency that didn't specify the extension. I think it should be a concern of the developer to pay attention to the collisions. Preferably, the typescript compiler should warn about the collisions, but I'm not sure about the performance/development implications of this.",0,0,0,0,1,0,Suffering,-,Any chance of having ... -> Sounds like suffering to resolve json file with external dependancy -> Suffering
Microsoft/TypeScript,issue,922261795,2021-09-18 11:22:24,nick-lvov-dev,"I have the same issue, updating the `""@types/react""` package didn't help","I have the same issue, updating the `""@types/react""` package didn't help",0,0,0,0,1,0,Suffering,,Suffering
flutter/flutter,issue,945753981,2021-10-18 13:13:36,iranandroid,"I have same problem,
dose anyone have any solution?","I have same problem,
dose anyone have any solution?",0,0,0,0,1,0,Suffering,,Suffering
angular/angular,issue,933579958,2021-10-04 15:09:06,JoostK,"I am really confused now. You referred to #42609 and #40125 which describe an issue that affect type-checking when using `trackBy`, yet those examples show programmatic samples and appear to indicate that there is an issue with runtime behavior.","I am really confused now. You referred to #42609 and #40125 which describe an issue that affect type-checking when using `trackBy`, yet those examples show programmatic samples and appear to indicate that there is an issue with runtime behavior.",0,0,0,0,0,1,Confusion,,Confuse
flutter/flutter,issue,956877982,2021-11-01 23:27:12,justinmc,"Not sure.  It's not assigned and there is no milestone, so no one is planning to look at it in the near future and it's up for grabs if anyone wants to try fixing it.

That said I have a little bit more info that I'll post in a minute.","Not sure. It's not assigned and there is no milestone, so no one is planning to look at it in the near future and it's up for grabs if anyone wants to try fixing it. 

That said I have a little bit more info that I'll post in a minute.",0,0,0,0,0,1,Confusion,,Confused
angular/angular,pull_request,716058442,2021-09-25 15:55:32,IgorMinar,"I'm confused, are you saying that it's a map of array of nodes? Why was the original signature `any[][]`?","I'm confused, are you saying that it's a map of array of nodes? Why was the original signature `any[][]`?",0,0,0,0,0,1,Confusion,,Confused
angular/angular,pull_request,716937366,2021-09-27 18:22:10,dgp1130,"I didn't mean to delete it, just restructure it. Previously it only verify if there was no symbol for the left side, so I changed it to test if there an expression on the left side, which I felt was still in line with the original intent of the test.

In retrospect, I don't think I fully understand what ""symbol"" means to the compiler. Is there a symbol for `func() ?? 'foo'` but *not* a symbol for `(123 | doesNotExist) ?? 'invalid date'`? I would expect neither cases to have symbols, but based on my investigation here I think that understanding is incorrect. If these are distinct cases, then you're right that we probably should keep the old test, but if they are the same then the new test should be enough on its own.","I didn't mean to delete it, just restructure it. Previously it only verify if there was no symbol for the left side, so I changed it to test if there an expression on the left side, which I felt was still in line with the original intent of the test.

In retrospect, I don't think I fully understand what ""symbol"" means to the compiler. Is there a symbol for `func() ?? 'foo'` but *not* a symbol for `(123 | doesNotExist) ?? 'invalid date'`? I would expect neither cases to have symbols, but based on my investigation here I think that understanding is incorrect. If these are distinct cases, then you're right that we probably should keep the old test, but if they are the same then the new test should be enough on its own.",0,0,0,0,0,1,Confusion,,Confusion
Microsoft/TypeScript,issue,924536126,2021-09-22 2:44:32,Codex-,"Hmmm seems weird, workspace packages do not act like real packages? ","Hmmm seems weird, workspace packages do not act like real packages?",0,0,0,0,0,1,Confusion,,Confusion -> Surprise
Microsoft/TypeScript,pull_request,540425501,2020-12-10 19:07:55,amcasey,"I thought I should leave it so we didn't get a bunch of duplicate reports, but I may have misunderstood what the flag does.  I guess I should just test it.","I thought I should leave it so we didn't get a bunch of duplicate reports, but I may have misunderstood what the flag does. I guess I should just test it.",0,0,0,0,0,1,Confusion,,Misunderstanding -> Confusion
angular/angular,pull_request,740059153,2021-11-01 9:15:06,petebacondarwin,"Oh yes - not sure how this happened.
Confused why renovate did not resolve this previously....",Oh yes - not sure how this happened. Confused why renovate did not resolve this previously....,0,0,0,0,0,1,Confusion,,Surprized/Confuzed
angular/angular,issue,927168835,2021-09-25 19:03:19,generahben,I was already wondering after logging the ActivatedRoute instance to console and I saw both params and paramsMap (Didnt know why and when I should use one over the other). I just started learning Angular and a lot of convention is kinda confusing. Thanks for the clarification @atscott .,I was already wondering after logging the ActivatedRoute instance to console and I saw both params and paramsMap (Didnt know why and when I should use one over the other). I just started learning Angular and a lot of convention is kinda confusing. Thanks for the clarification [USER] .,0,0,0,0,0,1,Confusion,,"Wonder -> Surprise, Confusion"
webpack/webpack,pull_request,307419874,2019-07-25 17:42:23,Siegrift,"This is not true. If a script claims webpack assigned policy, it means it has already control over the code and potentially can introduce more sever attacks. Also, I am not sure I understand which scripts are run before webpack. If I misunderstanding the comment can you please clarify what I am missing?","This is not true. If a script claims webpack assigned policy, it means it has already control over the code and potentially can introduce more sever attacks. Also, I am not sure I understand which scripts are run before webpack. If I misunderstanding the comment can you please clarify what I am missing?",0,0,0,0,0,1,Confusion,,Misunderstanding -> Confusion
flutter/flutter,pull_request,697576617,2021-08-27 16:36:46,stuartmorgan,"I'm not sure what this comment means, given that this template is for packages, not applications.","I'm not sure what this comment means, given that this template is for packages, not applications.",0,0,0,0,0,1,Confusion,,Confusion
flutter/flutter,pull_request,701432359,2021-09-02 21:23:52,christopherfujino,"is this not always passed? or is it always passed, but sometimes null?","is this not always passed? or is it always passed, but sometimes null?",0,0,0,0,0,1,Confusion,,Confusion
Microsoft/TypeScript,issue,920941785,2021-09-16 14:14:50,gaurav5430,"> TypeScript has a set release schedule, the next release details are here: https://github.com/microsoft/TypeScript/issues/45418
can't see it in the plans for 4.5
is that right or am I missing something ?","[BLOCK QUOTE].
can't see it in the plans for 4.5
is that right or am I missing something ?",0,0,0,0,0,1,Confusion,,Puzzlement/Confusion -> Surprise
webpack/webpack,pull_request,94406631,2017-01-03 13:45:31,Jessidhia,Not sure on embedded newline vs `\n`,Not sure on embedded newline vs `\n`,0,0,0,0,0,1,Confusion,,uncertainty → confusion
webpack/webpack,pull_request,99430262,2017-02-03 21:53:02,kball,"Fixing these, but FYI the previous format was suggested by the linter, not sure why","Fixing these, but FYI the previous format was suggested by the linter, not sure why",0,0,0,0,0,1,Confusion,,
webpack/webpack,pull_request,128880160,2017-07-21 23:38:45,timse,"i assume you mean?
```js
get chunksIterable() {
return this._chunks[Symbol.iterator]();
}
```

is this needed anywhere?","i assume you mean?
[TRIPLE QUOTE].

is this needed anywhere?",0,0,0,0,0,1,Confusion,,
webpack/webpack,pull_request,229230608,2018-10-30 9:29:21,JackyTianer,"@sokra Hi, thanks for your review, but i think this case cover my changed, because when i run the case in the older code, i got an error. i look at the `test/hotCases` folder, but i dont know how can i run these cases","[USER] Hi, thanks for your review, but i think this case cover my changed, because when i run the case in the older code, i got an error. i look at the `test/hotCases` folder, but i dont know how can i run these cases",0,0,0,0,0,1,Confusion,,
Microsoft/TypeScript,pull_request,550324789,2020-12-30 20:56:00,andrewbranch,"Off the top of my head, I don’t see why you have to look at the children. Shouldn’t the span of the first to last child be equal to the span of the PropertyAccessEpression itself, i.e. `accessExpression.getFullWidth()`?","Off the top of my head, I don’t see why you have to look at the children. Shouldn’t the span of the first to last child be equal to the span of the PropertyAccessEpression itself, i.e. `accessExpression.getFullWidth()`?",0,0,0,0,0,1,Confusion,,
flutter/flutter,pull_request,732148879,2021-10-19 18:44:54,CaseyHillers,Is this hint useful?,Is this hint useful?,0,0,0,0,0,1,Confusion,,
webpack/webpack,issue,799609373,2021-03-15 17:34:25,eps1lon,That's not what the documentation is saying though? Now I have to change any existing (and future) rule that might process assets loaded as source.,That's not what the documentation is saying though? Now I have to change any existing (and future) rule that might process assets loaded as source.,0,0,0,0,0,1,Confusion,,
webpack/webpack,issue,880698167,2021-07-15 13:32:51,p3x-robot,"so why is it generating this css that is invalid:
```html
<link href=""../../public/prod/webpack/bundle.css"" rel=""stylesheet"">
```","so why is it generating this css that is invalid:
[TRIPLE QUOTE].",0,0,0,0,0,1,Confusion,,
Microsoft/TypeScript,issue,900656460,2021-08-17 21:53:58,andrewbranch,"Also, `isMemberCompletion` seems possibly wrong, but I don’t know what that controls 🤔","Also, `isMemberCompletion` seems possibly wrong, but I don’t know what that controls 🤔",0,0,0,0,0,1,Confusion,,
flutter/flutter,issue,945616146,2021-10-18 10:12:16,DanTup,"I suspect this is known, but this isn't specific to test files, it happens with any non-`lib/main.dart` target including a normal app too (https://github.com/Dart-Code/Dart-Code/issues/3617). It does still only occur with with the plugin above and not with a newly-created empty app though.","I suspect this is known, but this isn't specific to test files, it happens with any non-`lib/main.dart` target including a normal app too ([URL] It does still only occur with with the plugin above and not with a newly-created empty app though.",0,0,0,0,0,1,Confusion,,uncertainty → confusion
flutter/flutter,issue,950999642,2021-10-25 14:41:46,stuartmorgan,"What's the status here? I'm not sure what the comment on the revert about file structure means exactly, so I'm not clear on what the next steps are.","What's the status here? I'm not sure what the comment on the revert about file structure means exactly, so I'm not clear on what the next steps are.",0,0,0,0,0,1,Confusion,,uncertainty → confusion
flutter/flutter,issue,955982703,2021-11-01 7:03:42,nokia6290,When dismissing the keyboard the textField gets cleaned thus changed. Is it actually a bug?,When dismissing the keyboard the textField gets cleaned thus changed. Is it actually a bug?,0,0,0,0,0,1,Confusion,,
flutter/flutter,pull_request,674226815,2021-07-21 18:24:23,goderbauer,Why is this now necessary? Seems odd...,Why is this now necessary? Seems odd...,0,0,0,0,0,1,Confusion,,
flutter/flutter,pull_request,684538023,2021-08-06 22:49:40,Piinks,"@goderbauer curious for your thoughts, I don't love this opt-in strategy but it was the most straight forward path.","[USER] curious for your thoughts, I don't love this opt-in strategy but it was the most straight forward path.",0,0,0,0,0,1,Curiosity,,Curious
Microsoft/TypeScript,issue,902764778,2021-08-20 15:12:49,BobobUnicorn,"I took a look at the meeting notes #45504, and I did note this bit:

> - Favorite markup/query language examples =
>   - ""I want to write a full HTML parser and provide the same checking that JSX gives""
>   - ""I want to write a full GraphQL parser and provide exact API shapes back""
>   - This is a moderate :-1: - we think we'd be encouraging people to use the wrong tools to solve these problems

I am curious about what the right tool is then? There doesn't really seem to be a great alternative to doing this. In particular, the problem is that of run-time equivalence; the library is intended to be usable both with plain JS and TS. JSX cannot be used without compiling, and furthermore the use-case of safe HTML templates was among the original design considerations that TC39 looked at [when adding this feature to the spec](https://web.archive.org/web/20120124053946/http://wiki.ecmascript.org/doku.php?id=harmony:quasis). Tagged template literals are a very natural API for native JS libraries (see also: [graphql-tag](https://www.npmjs.com/package/graphql-tag), [html tag](https://github.com/zspecza/common-tags#html)).

The approach taken by Svelte/Vue (custom language servers) or tsserver plugins doesn't really scale; writing transformers to turn syntax into JSX seems like a significant amount of work, especially for smaller projects. This approach also doesn't even allow for correctness checks at compile-time.","I took a look at the meeting notes #45504, and I did note this bit: 

[BLOCK QUOTE]

I am curious about what the right tool is then? There doesn't really seem to be a great alternative to doing this. In particular, the problem is that of run-time equivalence; the library is intended to be usable both with plain JS and TS. JSX cannot be used without compiling, and furthermore the use-case of safe HTML templates was among the original design considerations that TC39 looked at [URL]. Tagged template literals are a very natural API for native JS libraries (see also: [URL], [URL]) 

The approach taken by Svelte/Vue (custom language servers) or tsserver plugins doesn't really scale; writing transformers to turn syntax into JSX seems like a significant amount of work, especially for smaller projects. This approach also doesn't even allow for correctness checks at compile-time.",0,0,0,0,0,1,Curiosity,,Curious
webpack/webpack,pull_request,114991684,2017-05-05 13:08:45,bbrzoska,@sokra Interesting. Curious as to why is `new Promise(function(resolve) { resolve(); })` better than `Promise.resolve()` here and above?,[USER] Interesting. Curious as to why is `new Promise(function(resolve) { resolve(); })` better than `Promise.resolve()` here and above?,0,0,0,0,0,1,Curiosity,,Curiosity
flutter/flutter,pull_request,659997318,2021-06-28 17:49:28,dnfield,Is this still true?,Is this still true?,0,0,0,0,0,1,Curiosity,,Curiosity
Microsoft/TypeScript,pull_request,699718625,2021-08-31 22:37:17,amcasey,Not returning was just a bug?,Not returning was just a bug?,0,0,0,0,0,1,Surprise,,
angular/angular,pull_request,724492053,2021-10-07 20:01:15,petebacondarwin,"I'm not sure ""it should be enabled"" is an accurate description of this test 🤔 ","I'm not sure ""it should be enabled"" is an accurate description of this test 🤔",0,0,0,0,0,1,Curiosity,,Curiosity
webpack/webpack,issue,950817426,2021-10-25 11:18:56,alexander-akait,"hm, what about if I want to use it in PHP/Ruby/Python, now developers can generate json file and read it","hm, what about if I want to use it in PHP/Ruby/Python, now developers can generate json file and read it",0,0,0,0,0,1,Curiosity,,Wondering -> Curiosity
Microsoft/TypeScript,pull_request,559189902,2021-01-17 14:32:21,jonhue,"Strictly speaking, these two cases aren't in the scope of the original issue. As you're able to see from the baselines, the current behavior here is to throw errors. Intuitively, however, the behavior I described in the comments makes more sense to me.
I would be interested in your thoughts on this matter 🙂 Regarding implementation, I wasn't able to figure out how to check whether a mapped type is optional (includes the `?`). Do we have a property that tracks that or should we check whether the value type includes `undefined`?","Strictly speaking, these two cases aren't in the scope of the original issue. As you're able to see from the baselines, the current behavior here is to throw errors. Intuitively, however, the behavior I described in the comments makes more sense to me.
I would be interested in your thoughts on this matter 🙂 Regarding implementation, I wasn't able to figure out how to check whether a mapped type is optional (includes the `?`). Do we have a property that tracks that or should we check whether the value type includes `undefined`?",0,0,0,0,0,1,Curiosity,,
angular/angular,pull_request,629791317,2021-05-11 1:46:50,AndrewKushnir,@crisbeto just curious if this field was unused?,[USER] just curious if this field was unused?,0,0,0,0,0,1,Curiosity,,
Microsoft/TypeScript,pull_request,647951271,2021-06-09 4:11:24,Jack-Works,What happened?,What happened?,0,0,0,0,0,1,Curiosity,,
flutter/flutter,pull_request,675821430,2021-07-23 19:28:55,Piinks,"I am not sure I understand here. Should `double.infinity` be allowed as a `minThumbLength`? Also, the scrollbar currently only supports finite viewports. Infinitely long scrollables are not currently supported.","I am not sure I understand here. Should `double.infinity` be allowed as a `minThumbLength`? Also, the scrollbar currently only supports finite viewports. Infinitely long scrollables are not currently supported.",0,0,0,0,0,1,Curiosity,,
flutter/flutter,issue,950842795,2021-10-25 11:49:54,danagbemava-nc,"Hi @kirill-21, do you experience the same behaviour when using the `GestureDetector` as when you're using the `Listener`?",Hi [USER] do you experience the same behaviour when using the `GestureDetector` as when you're using the `Listener`?,0,0,0,0,0,1,Curiosity,,
flutter/flutter,issue,957139887,2021-11-02 6:38:35,danagbemava-nc,"Hi @Agondev, how do you propose the error/assertion message be improved?",Hi [USER] how do you propose the error/assertion message be improved?,0,0,0,0,0,1,Curiosity,,
flutter/flutter,issue,958590598,2021-11-03 1:40:48,domesticmouse,"@kroikie as this was inherited from the JavaScript version of this codelab, I'm curious how y'all fixed this ambiguity?","[USER] as this was inherited from the JavaScript version of this codelab, I'm curious how y'all fixed this ambiguity?",0,0,0,0,0,1,Curiosity,,
angular/angular,issue,903704134,2021-08-23 12:06:09,gkalpak,Ooops! I put it there while I had CI rerun a flakey job and forgot to remove it once it passed 😇,Ooops! I put it there while I had CI rerun a flakey job and forgot to remove it once it passed 😇,0,0,0,0,0,1,Realization,,Realization
webpack/webpack,issue,940022485,2021-10-11 13:16:41,MineYuanlu,"Oh, it's my problem.
The method just provided is indeed normal
But there are mistakes in the following process
```
window.someGlobalData = {
oneFunc: function() { console.log(JSON.stringify(this.data)); }
};
(() => {
let data = { d: 1 };
data = ({ f: window.someGlobalData.oneFunc, data: data }).f();
})();
```
The code given by webpack is
```
window.someGlobalData={oneFunc:function(){console.log(JSON.stringify(this.data))}},(()=>{let o={d:1};o=window.someGlobalData.oneFunc()})();
```
format:
```
window.someGlobalData = { oneFunc: function() { console.log(JSON.stringify(this.data)) } }, (() => {
let o = { d: 1 };
o = window.someGlobalData.oneFunc()
})();
```
in line 3, it is wrong
my webpack.config:
```
module.exports = {
mode: 'production'
}
```","Oh, it's my problem. The method just provided is indeed normal But there are mistakes in the following process [TRIPLE QUOTE]. The code given by webpack is 
[TRIPLE QUOTE]. 
format: 
[TRIPLE QUOTE]. 
in line 3, it is wrong 
my webpack.config: 
[TRIPLE QUOTE].",0,0,0,0,0,1,Realization,,Realization
flutter/flutter,issue,946923780,2021-10-19 17:04:02,godofredoc,"ahhh, totally forgot that generated the binary in my linux desktop.","ahhh, totally forgot that generated the binary in my linux desktop.",0,0,0,0,0,1,Surprise,-,Surprise
Microsoft/TypeScript,pull_request,529279468,2020-11-24 8:15:52,thdk,"To be honest, I'm not so confident with regular expressions that it took me some time to come up with this solution to replace **all leading** tab characters. I was surprised not to find an example where this is done. I've seen the note on MDN as well but without the _global_ flag, only the first tab character was replaced in my test.

```javascript
// input text with two leading tab characters and two tab characters elsewhere in the text
var input=""     Some text       containing tabs"";

// A:
console.log(input.replace(/\t/g, ""LEADING_TAB_""));  
// prints: ""LEADING_TAB_LEADING_TAB_Some textLEADING_TAB_LEADING_TAB_containing tabs""

// B:
console.log(input.replace(/\t/, ""LEADING_TAB_""));  
// prints: ""LEADING_TAB_   Some text       containing tabs""

// C:
console.log(input.replace(/^(\t)*/, ""LEADING_TAB_""));  
// prints: ""LEADING_TAB_Some text      containing tabs""

// D:
console.log(input.replace(/\t/gy, ""LEADING_TAB_""));  
// prints: ""LEADING_TAB_LEADING_TAB_Some text      containing tabs""

// E:
console.log(input.replace(/\t/y, ""LEADING_TAB_""));  
// prints: ""LEADING_TAB_   Some text       containing tabs""
```
I've created a [jsfiddle](https://jsfiddle.net/onebcvu4/2/) and asked about **why this works** on [stackoverflow](https://stackoverflow.com/questions/64982135/regex-to-replace-all-leading-tab-characters-each-one-with-a-single-space). 

While writing this comment, my question was [answered](https://stackoverflow.com/a/64982184/681803).

Now I just need to find a good comment that clarifies the use of both _sticky_ and _global_ for this line.

Does this do it for you?

```javascript
// Convert all leading tabs to single spaces
// using both g and y flag to repeatedly match a \t at lastIndex (default: 0) and replace it until it runs out of \t at lastIndex
lineContent = lineContent.replace(/\t/gy, "" ""); 
```
","To be honest, I'm not so confident with regular expressions that it took me some time to come up with this solution to replace **all leading** tab characters. I was surprised not to find an example where this is done. I've seen the note on MDN as well but without the _global_ flag, only the first tab character was replaced in my test. 

[TRIPLE QUOTE]. 

I've created a jsfiddle([URL]) and asked about **why this works** on stackoverflow([URL]) 

While writing this comment, my question was answered([URL]) 

Now I just need to find a good comment that clarifies the use of both _sticky_ and _global_ for this line. Does this do it for you? 

[TRIPLE QUOTE].",0,0,0,0,0,1,Surprise,-,Surprise
Microsoft/TypeScript,pull_request,553661439,2021-01-07 23:55:53,rbuckton,"Odd, we shouldn't have needed the parentheses here. I assume its because the union is no longer flat?","Odd, we shouldn't have needed the parentheses here. I assume its because the union is no longer flat?",0,0,0,0,0,1,Surprise,-,Surprised (negatively)
angular/angular,pull_request,669680999,2021-07-14 14:41:51,gkalpak,"Hm...that's unexpected. I tried this locally and the images look fine. Can you try again splitting the paths (at the points where the strings were previously split)?

<sub>NOTE: I have accidentally deleted a `c` in my suggested change. I fixed it now to avoid confusion in the future.</sub>","Hm...that's unexpected. I tried this locally and the images look fine. Can you try again splitting the paths (at the points where the strings were previously split)?

<sub>NOTE: I have accidentally deleted a `c` in my suggested change. I fixed it now to avoid confusion in the future.</sub>",0,0,0,0,0,1,Surprise,-,Unexpected -> Surprising
flutter/flutter,pull_request,714192825,2021-09-22 18:11:06,christopherfujino,"hmm, even after a push I still see this test on github, but not locally","hmm, even after a push I still see this test on github, but not locally",0,0,0,0,0,1,Surprise,-,Unexpected -> Surprising
webpack/webpack,issue,778756867,2021-02-14 10:17:54,sokra,"I wonder why this hasn't happened before, since it's a pretty obvious bug","I wonder why this hasn't happened before, since it's a pretty obvious bug",0,0,0,0,0,1,Surprise,-,Wonder -> Surprise
flutter/flutter,pull_request,690782507,2021-08-17 23:08:42,christopherfujino,I'm confused by `_ddsInstance?.done.whenComplete(())`. Wouldn't we get a NPE trying call `.whenComplete` if `_ddsInstance == null`? (I'm assuming I'm wrong and you and the analyzer are correct though...),I'm confused by `_ddsInstance?.done.whenComplete(())`. Wouldn't we get a NPE trying call `.whenComplete` if `_ddsInstance == null`? (I'm assuming I'm wrong and you and the analyzer are correct though...),0,0,0,0,0,1,Surprise,,Confusion
webpack/webpack,pull_request,500947278,2020-10-07 11:47:51,alexander-akait,"Just interesting, why we need this?","Just interesting, why we need this?",0,0,0,0,0,1,Surprise,,Interesting -> Surprise
webpack/webpack,pull_request,129552596,2017-07-26 12:04:44,ldrick,"I have currently no clue, but I'll have a look.","I have currently no clue, but I'll have a look.",0,0,0,0,0,1,Surprise,,Puzzlement -> Surprise
Microsoft/TypeScript,pull_request,645234623,2021-06-04 1:44:12,Jack-Works,"Oh, the error message is copied from Chrome. But Chrome does not support static initialization block either, that's strange.","Oh, the error message is copied from Chrome. But Chrome does not support static initialization block either, that's strange.",0,0,0,0,0,1,Surprise,,Strange -> Surprise
webpack/webpack,pull_request,101271998,2017-02-15 13:06:29,sokra,This is weird. A Parser doesn't have a parser method. I would expect `constructor() {}` or `parse() {}`.,This is weird. A Parser doesn't have a parser method. I would expect `constructor() {}` or `parse() {}`.,0,0,0,0,0,1,Surprise,,Surprise
Microsoft/TypeScript,pull_request,651202527,2021-06-14 19:03:49,DanielRosenwasser,Surely there must be something like this already? @weswigham @andrewbranch,Surely there must be something like this already? [USER] [USER],0,0,0,0,0,1,Surprise,,Surprise
flutter/flutter,pull_request,719800439,2021-09-30 22:08:17,Hixie,i'm actually surprised this didn't get flagged by the analyzer...,i'm actually surprised this didn't get flagged by the analyzer...,0,0,0,0,0,1,Surprise,,Surprise
flutter/flutter,pull_request,727500323,2021-10-12 21:00:04,christopherfujino,"What do you mean by assert? And yeah, good point about handling null later, I'm surprised it isn't an analysis warning.","What do you mean by assert? And yeah, good point about handling null later, I'm surprised it isn't an analysis warning.",0,0,0,0,0,1,Surprise,,Surprise
webpack/webpack,issue,819380417,2021-04-14 9:35:05,sokra,"hmm that's really interesting.

I think this is something for @mathiasbynens","hmm that's really interesting.

I think this is something for [USER]",0,0,0,0,0,1,Surprise,,Surprise
Microsoft/TypeScript,issue,929698853,2021-09-28 23:33:32,andrewbranch,"This is very surprising to me and seems undesirable, but I’ll let @ahejlsberg have the definitive word.","This is very surprising to me and seems undesirable, but I’ll let [USER] have the definitive word.",0,0,0,0,0,1,Surprise,,Surprise
Microsoft/TypeScript,pull_request,582654913,2021-02-25 9:00:26,Kingwl,I'm not sure this is working as expected,I'm not sure this is working as expected,0,0,0,0,0,1,Surprise,,Unexpected -> Surprise
webpack/webpack,issue,931418820,2021-09-30 15:18:42,alexander-akait,"Very very weird, maybe you can debug and provide source code of module?","Very very weird, maybe you can debug and provide source code of module?",0,0,0,0,0,1,Surprise,,Weird -> Surprise
webpack/webpack,pull_request,217882236,2018-09-15 10:50:35,sokra,I also wonder why this snapshot differs?,I also wonder why this snapshot differs?,0,0,0,0,0,1,Surprise,,Worder -> Surprise
webpack/webpack,pull_request,152840278,2017-11-23 16:27:19,egoroof,That's strange,That's strange,0,0,0,0,0,1,Surprise,,
flutter/flutter,issue,950365195,2021-10-24 17:46:07,Tom3652,"yes i am really surprised that it's only a p4 and for so long...
In the meantime, i will try to handle it with :
```
PaintingBinding.instance!.imageCache!.clear();
PaintingBinding.instance!.imageCache!.clearLiveImages();
```
What do you think ?","yes i am really surprised that it's only a p4 and for so long...
In the meantime, i will try to handle it with :
[TRIPLE QUOTE].
What do you think ?",0,0,0,0,0,1,Surprise,,
webpack/webpack,issue,921044961,2021-09-16 16:19:12,0rvar,"I was quite surprised when my prebaked webpack cache was not used in Github Codespaces. I've tracked it down to the cache using absolute paths. I would love the cache stay valid when moving the project directory or downloading a prebuilt cache folder, it would make things easier.","I was quite surprised when my prebaked webpack cache was not used in Github Codespaces. I've tracked it down to the cache using absolute paths. I would love the cache stay valid when moving the project directory or downloading a prebuilt cache folder, it would make things easier.",0,1,0,0,0,1,"Longing, Surprise",,"Would love -> Longing, Surprised -> Surprise"
flutter/flutter,pull_request,733155987,2021-10-20 21:22:28,CaseyHillers,Thanks! That's what I was curious about,Thanks! That's what I was curious about,0,1,0,0,0,1,"Affection, Curious",Love,"Expressing gratitude -> Love, Curious"
flutter/flutter,pull_request,675355439,2021-07-23 7:21:12,shang1219178163,"It’s very strange why there is a display error, I have confirmed that there is no problem before uploading the code; I will try to reproduce it and fix it.

![WechatIMG36](https://user-images.githubusercontent.com/3699729/126749441-6d079a24-d0b3-4205-8726-42d429af2f5b.jpeg)","It’s very strange why there is a display error, I have confirmed that there is no problem before uploading the code; I will try to reproduce it and fix it.

![WechatIMG36]([URL]",0,0,0,1,0,1,"Surprise, Approval",,"very strange why there is a display error -> Surprise, Confirmed -> approval"